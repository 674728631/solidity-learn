{
	"id": "66430bed0fae54824f561b1454830d09",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"task1/question3.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.21;\n\n// 罗马数字转整数\n// 罗马数字包含以下七种字符: I， V， X， L，C，D 和 M。\n// 字符          数值\n// I             1\n// V             5\n// X             10\n// L             50\n// C             100\n// D             500\n// M             1000\n// 例如， 罗马数字 2 写做 II ，即为两个并列的 1 。12 写做 XII ，即为 X + II 。 27 写做  XXVII, 即为 XX + V + II 。\n// 通常情况下，罗马数字中小的数字在大的数字的右边。但也存在特例，例如 4 不写做 IIII，而是 IV。数字 1 在数字 5 的左边，所表示的数等于大数 5 减小数 1 得到的数值 4 。\n// 同样地，数字 9 表示为 IX。这个特殊的规则只适用于以下六种情况：\n\n// I 可以放在 V (5) 和 X (10) 的左边，来表示 4 和 9。\n// X 可以放在 L (50) 和 C (100) 的左边，来表示 40 和 90。\n// C 可以放在 D (500) 和 M (1000) 的左边，来表示 400 和 900。\n// 给定一个罗马数字，将其转换成整数。\ncontract RomanNumber2Int {\n    mapping(bytes1 => uint256) private charMapping;\n\n    constructor() {\n        charMapping[\"I\"] = 1;\n        charMapping[\"V\"] = 5;\n        charMapping[\"X\"] = 10;\n        charMapping[\"L\"] = 50;\n        charMapping[\"C\"] = 100;\n        charMapping[\"D\"] = 500;\n        charMapping[\"M\"] = 1000;\n    }\n\n    function parse(string calldata input) public view returns (uint256) {\n        bytes memory inputBytes = bytes(input);\n        uint256 total = 0;\n\n        for (uint256 i = 0; i < inputBytes.length; i++) {\n            bytes1 char = inputBytes[i];\n            uint256 value = charMapping[char];\n            if (value == 0) {\n                return 0;\n            }\n            uint256 valueNext = 0;\n            if (i < inputBytes.length - 1) {\n                valueNext = charMapping[inputBytes[i + 1]];\n            }\n\n            if (value < valueNext) {\n                uint256 twoValue = 0;\n                // I 可以放在 V (5) 和 X (10) 的左边\n                if (value == 1 && (valueNext == 5 || valueNext == 10)) {\n                    twoValue = valueNext - value;\n                }\n                // X 可以放在 L (50) 和 C (100) 的左边\n                else if (value == 10 && (valueNext == 50 || valueNext == 100)) {\n                    twoValue = valueNext - value;\n                }\n                // C 可以放在 D (500) 和 M (1000) 的左边\n                else if (\n                    value == 100 && (valueNext == 500 || valueNext == 1000)\n                ) {\n                    twoValue = valueNext - value;\n                }\n                if (twoValue == 0) {\n                    return 0;\n                }\n                value = twoValue;\n                i++;\n            }\n            if (value > 0) {\n                total += value;\n            }\n        }\n        return total;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"task1/question3.sol": {
				"RomanNumber2Int": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "input",
									"type": "string"
								}
							],
							"name": "parse",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"task1/question3.sol\":1067:2926  contract RomanNumber2Int {... */\n  mstore(0x40, 0x80)\n    /* \"task1/question3.sol\":1151:1391  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"task1/question3.sol\":1194:1195  1 */\n  0x01\n    /* \"task1/question3.sol\":1175:1186  charMapping */\n  0x00\n    /* \"task1/question3.sol\":1175:1191  charMapping[\"I\"] */\n  0x00\n  and(not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff), 0x4900000000000000000000000000000000000000000000000000000000000000)\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"task1/question3.sol\":1175:1195  charMapping[\"I\"] = 1 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"task1/question3.sol\":1224:1225  5 */\n  0x05\n    /* \"task1/question3.sol\":1205:1216  charMapping */\n  0x00\n    /* \"task1/question3.sol\":1205:1221  charMapping[\"V\"] */\n  0x00\n  and(not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff), 0x5600000000000000000000000000000000000000000000000000000000000000)\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"task1/question3.sol\":1205:1225  charMapping[\"V\"] = 5 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"task1/question3.sol\":1254:1256  10 */\n  0x0a\n    /* \"task1/question3.sol\":1235:1246  charMapping */\n  0x00\n    /* \"task1/question3.sol\":1235:1251  charMapping[\"X\"] */\n  0x00\n  and(not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff), 0x5800000000000000000000000000000000000000000000000000000000000000)\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"task1/question3.sol\":1235:1256  charMapping[\"X\"] = 10 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"task1/question3.sol\":1285:1287  50 */\n  0x32\n    /* \"task1/question3.sol\":1266:1277  charMapping */\n  0x00\n    /* \"task1/question3.sol\":1266:1282  charMapping[\"L\"] */\n  0x00\n  and(not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff), 0x4c00000000000000000000000000000000000000000000000000000000000000)\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"task1/question3.sol\":1266:1287  charMapping[\"L\"] = 50 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"task1/question3.sol\":1316:1319  100 */\n  0x64\n    /* \"task1/question3.sol\":1297:1308  charMapping */\n  0x00\n    /* \"task1/question3.sol\":1297:1313  charMapping[\"C\"] */\n  0x00\n  and(not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff), 0x4300000000000000000000000000000000000000000000000000000000000000)\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"task1/question3.sol\":1297:1319  charMapping[\"C\"] = 100 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"task1/question3.sol\":1348:1351  500 */\n  0x01f4\n    /* \"task1/question3.sol\":1329:1340  charMapping */\n  0x00\n    /* \"task1/question3.sol\":1329:1345  charMapping[\"D\"] */\n  0x00\n  and(not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff), 0x4400000000000000000000000000000000000000000000000000000000000000)\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"task1/question3.sol\":1329:1351  charMapping[\"D\"] = 500 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"task1/question3.sol\":1380:1384  1000 */\n  0x03e8\n    /* \"task1/question3.sol\":1361:1372  charMapping */\n  0x00\n    /* \"task1/question3.sol\":1361:1377  charMapping[\"M\"] */\n  0x00\n  and(not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff), 0x4d00000000000000000000000000000000000000000000000000000000000000)\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"task1/question3.sol\":1361:1384  charMapping[\"M\"] = 1000 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"task1/question3.sol\":1067:2926  contract RomanNumber2Int {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"task1/question3.sol\":1067:2926  contract RomanNumber2Int {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xbc62d8d8\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"task1/question3.sol\":1397:2924  function parse(string calldata input) public view returns (uint256) {... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"task1/question3.sol\":1456:1463  uint256 */\n      0x00\n        /* \"task1/question3.sol\":1475:1498  bytes memory inputBytes */\n      0x00\n        /* \"task1/question3.sol\":1507:1512  input */\n      dup4\n      dup4\n        /* \"task1/question3.sol\":1475:1513  bytes memory inputBytes = bytes(input) */\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      dup2\n      dup5\n      add\n      mstore\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      swap1\n      pop\n      dup1\n      dup4\n      add\n      swap3\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"task1/question3.sol\":1523:1536  uint256 total */\n      0x00\n        /* \"task1/question3.sol\":1539:1540  0 */\n      0x00\n        /* \"task1/question3.sol\":1523:1540  uint256 total = 0 */\n      swap1\n      pop\n        /* \"task1/question3.sol\":1556:1565  uint256 i */\n      0x00\n        /* \"task1/question3.sol\":1568:1569  0 */\n      0x00\n        /* \"task1/question3.sol\":1556:1569  uint256 i = 0 */\n      swap1\n      pop\n        /* \"task1/question3.sol\":1551:2896  for (uint256 i = 0; i < inputBytes.length; i++) {... */\n    tag_11:\n        /* \"task1/question3.sol\":1575:1585  inputBytes */\n      dup3\n        /* \"task1/question3.sol\":1575:1592  inputBytes.length */\n      mload\n        /* \"task1/question3.sol\":1571:1572  i */\n      dup2\n        /* \"task1/question3.sol\":1571:1592  i < inputBytes.length */\n      lt\n        /* \"task1/question3.sol\":1551:2896  for (uint256 i = 0; i < inputBytes.length; i++) {... */\n      iszero\n      tag_12\n      jumpi\n        /* \"task1/question3.sol\":1613:1624  bytes1 char */\n      0x00\n        /* \"task1/question3.sol\":1627:1637  inputBytes */\n      dup4\n        /* \"task1/question3.sol\":1638:1639  i */\n      dup3\n        /* \"task1/question3.sol\":1627:1640  inputBytes[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_14\n      jumpi\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n    tag_14:\n      0x20\n      add\n      add\n      mload\n      0xf8\n      shr\n      0xf8\n      shl\n        /* \"task1/question3.sol\":1613:1640  bytes1 char = inputBytes[i] */\n      swap1\n      pop\n        /* \"task1/question3.sol\":1654:1667  uint256 value */\n      0x00\n        /* \"task1/question3.sol\":1670:1681  charMapping */\n      0x00\n        /* \"task1/question3.sol\":1670:1687  charMapping[char] */\n      0x00\n        /* \"task1/question3.sol\":1682:1686  char */\n      dup4\n        /* \"task1/question3.sol\":1670:1687  charMapping[char] */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"task1/question3.sol\":1654:1687  uint256 value = charMapping[char] */\n      swap1\n      pop\n        /* \"task1/question3.sol\":1714:1715  0 */\n      0x00\n        /* \"task1/question3.sol\":1705:1710  value */\n      dup2\n        /* \"task1/question3.sol\":1705:1715  value == 0 */\n      sub\n        /* \"task1/question3.sol\":1701:1758  if (value == 0) {... */\n      tag_17\n      jumpi\n        /* \"task1/question3.sol\":1742:1743  0 */\n      0x00\n        /* \"task1/question3.sol\":1735:1743  return 0 */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_10)\n        /* \"task1/question3.sol\":1701:1758  if (value == 0) {... */\n    tag_17:\n        /* \"task1/question3.sol\":1771:1788  uint256 valueNext */\n      0x00\n        /* \"task1/question3.sol\":1791:1792  0 */\n      0x00\n        /* \"task1/question3.sol\":1771:1792  uint256 valueNext = 0 */\n      swap1\n      pop\n        /* \"task1/question3.sol\":1834:1835  1 */\n      0x01\n        /* \"task1/question3.sol\":1814:1824  inputBytes */\n      dup7\n        /* \"task1/question3.sol\":1814:1831  inputBytes.length */\n      mload\n        /* \"task1/question3.sol\":1814:1835  inputBytes.length - 1 */\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n        /* \"task1/question3.sol\":1810:1811  i */\n      dup5\n        /* \"task1/question3.sol\":1810:1835  i < inputBytes.length - 1 */\n      lt\n        /* \"task1/question3.sol\":1806:1912  if (i < inputBytes.length - 1) {... */\n      iszero\n      tag_20\n      jumpi\n        /* \"task1/question3.sol\":1867:1878  charMapping */\n      0x00\n        /* \"task1/question3.sol\":1867:1897  charMapping[inputBytes[i + 1]] */\n      0x00\n        /* \"task1/question3.sol\":1879:1889  inputBytes */\n      dup8\n        /* \"task1/question3.sol\":1894:1895  1 */\n      0x01\n        /* \"task1/question3.sol\":1890:1891  i */\n      dup8\n        /* \"task1/question3.sol\":1890:1895  i + 1 */\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n        /* \"task1/question3.sol\":1879:1896  inputBytes[i + 1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_23\n      jumpi\n      tag_24\n      tag_16\n      jump\t// in\n    tag_24:\n    tag_23:\n      0x20\n      add\n      add\n      mload\n      0xf8\n      shr\n      0xf8\n      shl\n        /* \"task1/question3.sol\":1867:1897  charMapping[inputBytes[i + 1]] */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"task1/question3.sol\":1855:1897  valueNext = charMapping[inputBytes[i + 1]] */\n      swap1\n      pop\n        /* \"task1/question3.sol\":1806:1912  if (i < inputBytes.length - 1) {... */\n    tag_20:\n        /* \"task1/question3.sol\":1938:1947  valueNext */\n      dup1\n        /* \"task1/question3.sol\":1930:1935  value */\n      dup3\n        /* \"task1/question3.sol\":1930:1947  value < valueNext */\n      lt\n        /* \"task1/question3.sol\":1926:2811  if (value < valueNext) {... */\n      iszero\n      tag_25\n      jumpi\n        /* \"task1/question3.sol\":1967:1983  uint256 twoValue */\n      0x00\n        /* \"task1/question3.sol\":1986:1987  0 */\n      0x00\n        /* \"task1/question3.sol\":1967:1987  uint256 twoValue = 0 */\n      swap1\n      pop\n        /* \"task1/question3.sol\":2079:2080  1 */\n      0x01\n        /* \"task1/question3.sol\":2070:2075  value */\n      dup4\n        /* \"task1/question3.sol\":2070:2080  value == 1 */\n      eq\n        /* \"task1/question3.sol\":2070:2119  value == 1 && (valueNext == 5 || valueNext == 10) */\n      dup1\n      iszero\n      tag_26\n      jumpi\n      pop\n        /* \"task1/question3.sol\":2098:2099  5 */\n      0x05\n        /* \"task1/question3.sol\":2085:2094  valueNext */\n      dup3\n        /* \"task1/question3.sol\":2085:2099  valueNext == 5 */\n      eq\n        /* \"task1/question3.sol\":2085:2118  valueNext == 5 || valueNext == 10 */\n      dup1\n      tag_27\n      jumpi\n      pop\n        /* \"task1/question3.sol\":2116:2118  10 */\n      0x0a\n        /* \"task1/question3.sol\":2103:2112  valueNext */\n      dup3\n        /* \"task1/question3.sol\":2103:2118  valueNext == 10 */\n      eq\n        /* \"task1/question3.sol\":2085:2118  valueNext == 5 || valueNext == 10 */\n    tag_27:\n        /* \"task1/question3.sol\":2070:2119  value == 1 && (valueNext == 5 || valueNext == 10) */\n    tag_26:\n        /* \"task1/question3.sol\":2066:2657  if (value == 1 && (valueNext == 5 || valueNext == 10)) {... */\n      iszero\n      tag_28\n      jumpi\n        /* \"task1/question3.sol\":2166:2171  value */\n      dup3\n        /* \"task1/question3.sol\":2154:2163  valueNext */\n      dup3\n        /* \"task1/question3.sol\":2154:2171  valueNext - value */\n      tag_29\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_29:\n        /* \"task1/question3.sol\":2143:2171  twoValue = valueNext - value */\n      swap1\n      pop\n        /* \"task1/question3.sol\":2066:2657  if (value == 1 && (valueNext == 5 || valueNext == 10)) {... */\n      jump(tag_30)\n    tag_28:\n        /* \"task1/question3.sol\":2288:2290  10 */\n      0x0a\n        /* \"task1/question3.sol\":2279:2284  value */\n      dup4\n        /* \"task1/question3.sol\":2279:2290  value == 10 */\n      eq\n        /* \"task1/question3.sol\":2279:2331  value == 10 && (valueNext == 50 || valueNext == 100) */\n      dup1\n      iszero\n      tag_31\n      jumpi\n      pop\n        /* \"task1/question3.sol\":2308:2310  50 */\n      0x32\n        /* \"task1/question3.sol\":2295:2304  valueNext */\n      dup3\n        /* \"task1/question3.sol\":2295:2310  valueNext == 50 */\n      eq\n        /* \"task1/question3.sol\":2295:2330  valueNext == 50 || valueNext == 100 */\n      dup1\n      tag_32\n      jumpi\n      pop\n        /* \"task1/question3.sol\":2327:2330  100 */\n      0x64\n        /* \"task1/question3.sol\":2314:2323  valueNext */\n      dup3\n        /* \"task1/question3.sol\":2314:2330  valueNext == 100 */\n      eq\n        /* \"task1/question3.sol\":2295:2330  valueNext == 50 || valueNext == 100 */\n    tag_32:\n        /* \"task1/question3.sol\":2279:2331  value == 10 && (valueNext == 50 || valueNext == 100) */\n    tag_31:\n        /* \"task1/question3.sol\":2275:2657  if (value == 10 && (valueNext == 50 || valueNext == 100)) {... */\n      iszero\n      tag_33\n      jumpi\n        /* \"task1/question3.sol\":2378:2383  value */\n      dup3\n        /* \"task1/question3.sol\":2366:2375  valueNext */\n      dup3\n        /* \"task1/question3.sol\":2366:2383  valueNext - value */\n      tag_34\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_34:\n        /* \"task1/question3.sol\":2355:2383  twoValue = valueNext - value */\n      swap1\n      pop\n        /* \"task1/question3.sol\":2275:2657  if (value == 10 && (valueNext == 50 || valueNext == 100)) {... */\n      jump(tag_35)\n    tag_33:\n        /* \"task1/question3.sol\":2523:2526  100 */\n      0x64\n        /* \"task1/question3.sol\":2514:2519  value */\n      dup4\n        /* \"task1/question3.sol\":2514:2526  value == 100 */\n      eq\n        /* \"task1/question3.sol\":2514:2569  value == 100 && (valueNext == 500 || valueNext == 1000) */\n      dup1\n      iszero\n      tag_36\n      jumpi\n      pop\n        /* \"task1/question3.sol\":2544:2547  500 */\n      0x01f4\n        /* \"task1/question3.sol\":2531:2540  valueNext */\n      dup3\n        /* \"task1/question3.sol\":2531:2547  valueNext == 500 */\n      eq\n        /* \"task1/question3.sol\":2531:2568  valueNext == 500 || valueNext == 1000 */\n      dup1\n      tag_37\n      jumpi\n      pop\n        /* \"task1/question3.sol\":2564:2568  1000 */\n      0x03e8\n        /* \"task1/question3.sol\":2551:2560  valueNext */\n      dup3\n        /* \"task1/question3.sol\":2551:2568  valueNext == 1000 */\n      eq\n        /* \"task1/question3.sol\":2531:2568  valueNext == 500 || valueNext == 1000 */\n    tag_37:\n        /* \"task1/question3.sol\":2514:2569  value == 100 && (valueNext == 500 || valueNext == 1000) */\n    tag_36:\n        /* \"task1/question3.sol\":2489:2657  if (... */\n      iszero\n      tag_38\n      jumpi\n        /* \"task1/question3.sol\":2633:2638  value */\n      dup3\n        /* \"task1/question3.sol\":2621:2630  valueNext */\n      dup3\n        /* \"task1/question3.sol\":2621:2638  valueNext - value */\n      tag_39\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_39:\n        /* \"task1/question3.sol\":2610:2638  twoValue = valueNext - value */\n      swap1\n      pop\n        /* \"task1/question3.sol\":2489:2657  if (... */\n    tag_38:\n        /* \"task1/question3.sol\":2275:2657  if (value == 10 && (valueNext == 50 || valueNext == 100)) {... */\n    tag_35:\n        /* \"task1/question3.sol\":2066:2657  if (value == 1 && (valueNext == 5 || valueNext == 10)) {... */\n    tag_30:\n        /* \"task1/question3.sol\":2690:2691  0 */\n      0x00\n        /* \"task1/question3.sol\":2678:2686  twoValue */\n      dup2\n        /* \"task1/question3.sol\":2678:2691  twoValue == 0 */\n      sub\n        /* \"task1/question3.sol\":2674:2742  if (twoValue == 0) {... */\n      tag_40\n      jumpi\n        /* \"task1/question3.sol\":2722:2723  0 */\n      0x00\n        /* \"task1/question3.sol\":2715:2723  return 0 */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_10)\n        /* \"task1/question3.sol\":2674:2742  if (twoValue == 0) {... */\n    tag_40:\n        /* \"task1/question3.sol\":2767:2775  twoValue */\n      dup1\n        /* \"task1/question3.sol\":2759:2775  value = twoValue */\n      swap3\n      pop\n        /* \"task1/question3.sol\":2793:2796  i++ */\n      dup5\n      dup1\n      tag_41\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      swap6\n      pop\n      pop\n        /* \"task1/question3.sol\":1949:2811  {... */\n      pop\n        /* \"task1/question3.sol\":1926:2811  if (value < valueNext) {... */\n    tag_25:\n        /* \"task1/question3.sol\":2836:2837  0 */\n      0x00\n        /* \"task1/question3.sol\":2828:2833  value */\n      dup3\n        /* \"task1/question3.sol\":2828:2837  value > 0 */\n      gt\n        /* \"task1/question3.sol\":2824:2886  if (value > 0) {... */\n      iszero\n      tag_43\n      jumpi\n        /* \"task1/question3.sol\":2866:2871  value */\n      dup2\n        /* \"task1/question3.sol\":2857:2871  total += value */\n      dup6\n      tag_44\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_44:\n      swap5\n      pop\n        /* \"task1/question3.sol\":2824:2886  if (value > 0) {... */\n    tag_43:\n        /* \"task1/question3.sol\":1599:2896  {... */\n      pop\n      pop\n      pop\n        /* \"task1/question3.sol\":1594:1597  i++ */\n      dup1\n      dup1\n      tag_45\n      swap1\n      tag_42\n      jump\t// in\n    tag_45:\n      swap2\n      pop\n      pop\n        /* \"task1/question3.sol\":1551:2896  for (uint256 i = 0; i < inputBytes.length; i++) {... */\n      jump(tag_11)\n    tag_12:\n      pop\n        /* \"task1/question3.sol\":2912:2917  total */\n      dup1\n        /* \"task1/question3.sol\":2905:2917  return total */\n      swap3\n      pop\n      pop\n      pop\n        /* \"task1/question3.sol\":1397:2924  function parse(string calldata input) public view returns (uint256) {... */\n    tag_10:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_47:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_48:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      0x00\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:451   */\n    tag_49:\n        /* \"#utility.yul\":443:444   */\n      0x00\n        /* \"#utility.yul\":440:441   */\n      0x00\n        /* \"#utility.yul\":433:445   */\n      revert\n        /* \"#utility.yul\":457:574   */\n    tag_50:\n        /* \"#utility.yul\":566:567   */\n      0x00\n        /* \"#utility.yul\":563:564   */\n      0x00\n        /* \"#utility.yul\":556:568   */\n      revert\n        /* \"#utility.yul\":580:697   */\n    tag_51:\n        /* \"#utility.yul\":689:690   */\n      0x00\n        /* \"#utility.yul\":686:687   */\n      0x00\n        /* \"#utility.yul\":679:691   */\n      revert\n        /* \"#utility.yul\":717:1270   */\n    tag_52:\n        /* \"#utility.yul\":775:783   */\n      0x00\n        /* \"#utility.yul\":785:791   */\n      0x00\n        /* \"#utility.yul\":835:838   */\n      dup4\n        /* \"#utility.yul\":828:832   */\n      0x1f\n        /* \"#utility.yul\":820:826   */\n      dup5\n        /* \"#utility.yul\":816:833   */\n      add\n        /* \"#utility.yul\":812:839   */\n      slt\n        /* \"#utility.yul\":802:924   */\n      tag_64\n      jumpi\n        /* \"#utility.yul\":843:922   */\n      tag_65\n      tag_49\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":802:924   */\n    tag_64:\n        /* \"#utility.yul\":956:962   */\n      dup3\n        /* \"#utility.yul\":943:963   */\n      calldataload\n        /* \"#utility.yul\":933:963   */\n      swap1\n      pop\n        /* \"#utility.yul\":986:1004   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":978:984   */\n      dup2\n        /* \"#utility.yul\":975:1005   */\n      gt\n        /* \"#utility.yul\":972:1089   */\n      iszero\n      tag_66\n      jumpi\n        /* \"#utility.yul\":1008:1087   */\n      tag_67\n      tag_50\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":972:1089   */\n    tag_66:\n        /* \"#utility.yul\":1122:1126   */\n      0x20\n        /* \"#utility.yul\":1114:1120   */\n      dup4\n        /* \"#utility.yul\":1110:1127   */\n      add\n        /* \"#utility.yul\":1098:1127   */\n      swap2\n      pop\n        /* \"#utility.yul\":1176:1179   */\n      dup4\n        /* \"#utility.yul\":1168:1172   */\n      0x01\n        /* \"#utility.yul\":1160:1166   */\n      dup3\n        /* \"#utility.yul\":1156:1173   */\n      mul\n        /* \"#utility.yul\":1146:1154   */\n      dup4\n        /* \"#utility.yul\":1142:1174   */\n      add\n        /* \"#utility.yul\":1139:1180   */\n      gt\n        /* \"#utility.yul\":1136:1264   */\n      iszero\n      tag_68\n      jumpi\n        /* \"#utility.yul\":1183:1262   */\n      tag_69\n      tag_51\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":1136:1264   */\n    tag_68:\n        /* \"#utility.yul\":717:1270   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1276:1805   */\n    tag_6:\n        /* \"#utility.yul\":1347:1353   */\n      0x00\n        /* \"#utility.yul\":1355:1361   */\n      0x00\n        /* \"#utility.yul\":1404:1406   */\n      0x20\n        /* \"#utility.yul\":1392:1401   */\n      dup4\n        /* \"#utility.yul\":1383:1390   */\n      dup6\n        /* \"#utility.yul\":1379:1402   */\n      sub\n        /* \"#utility.yul\":1375:1407   */\n      slt\n        /* \"#utility.yul\":1372:1491   */\n      iszero\n      tag_71\n      jumpi\n        /* \"#utility.yul\":1410:1489   */\n      tag_72\n      tag_47\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":1372:1491   */\n    tag_71:\n        /* \"#utility.yul\":1558:1559   */\n      0x00\n        /* \"#utility.yul\":1547:1556   */\n      dup4\n        /* \"#utility.yul\":1543:1560   */\n      add\n        /* \"#utility.yul\":1530:1561   */\n      calldataload\n        /* \"#utility.yul\":1588:1606   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1580:1586   */\n      dup2\n        /* \"#utility.yul\":1577:1607   */\n      gt\n        /* \"#utility.yul\":1574:1691   */\n      iszero\n      tag_73\n      jumpi\n        /* \"#utility.yul\":1610:1689   */\n      tag_74\n      tag_48\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":1574:1691   */\n    tag_73:\n        /* \"#utility.yul\":1723:1788   */\n      tag_75\n        /* \"#utility.yul\":1780:1787   */\n      dup6\n        /* \"#utility.yul\":1771:1777   */\n      dup3\n        /* \"#utility.yul\":1760:1769   */\n      dup7\n        /* \"#utility.yul\":1756:1778   */\n      add\n        /* \"#utility.yul\":1723:1788   */\n      tag_52\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":1705:1788   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":1501:1798   */\n      pop\n        /* \"#utility.yul\":1276:1805   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1811:1888   */\n    tag_53:\n        /* \"#utility.yul\":1848:1855   */\n      0x00\n        /* \"#utility.yul\":1877:1882   */\n      dup2\n        /* \"#utility.yul\":1866:1882   */\n      swap1\n      pop\n        /* \"#utility.yul\":1811:1888   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1894:2012   */\n    tag_54:\n        /* \"#utility.yul\":1981:2005   */\n      tag_78\n        /* \"#utility.yul\":1999:2004   */\n      dup2\n        /* \"#utility.yul\":1981:2005   */\n      tag_53\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":1976:1979   */\n      dup3\n        /* \"#utility.yul\":1969:2006   */\n      mstore\n        /* \"#utility.yul\":1894:2012   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2018:2240   */\n    tag_9:\n        /* \"#utility.yul\":2111:2115   */\n      0x00\n        /* \"#utility.yul\":2149:2151   */\n      0x20\n        /* \"#utility.yul\":2138:2147   */\n      dup3\n        /* \"#utility.yul\":2134:2152   */\n      add\n        /* \"#utility.yul\":2126:2152   */\n      swap1\n      pop\n        /* \"#utility.yul\":2162:2233   */\n      tag_80\n        /* \"#utility.yul\":2230:2231   */\n      0x00\n        /* \"#utility.yul\":2219:2228   */\n      dup4\n        /* \"#utility.yul\":2215:2232   */\n      add\n        /* \"#utility.yul\":2206:2212   */\n      dup5\n        /* \"#utility.yul\":2162:2233   */\n      tag_54\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":2018:2240   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2246:2426   */\n    tag_16:\n        /* \"#utility.yul\":2294:2371   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2291:2292   */\n      0x00\n        /* \"#utility.yul\":2284:2372   */\n      mstore\n        /* \"#utility.yul\":2391:2395   */\n      0x32\n        /* \"#utility.yul\":2388:2389   */\n      0x04\n        /* \"#utility.yul\":2381:2396   */\n      mstore\n        /* \"#utility.yul\":2415:2419   */\n      0x24\n        /* \"#utility.yul\":2412:2413   */\n      0x00\n        /* \"#utility.yul\":2405:2420   */\n      revert\n        /* \"#utility.yul\":2432:2612   */\n    tag_55:\n        /* \"#utility.yul\":2480:2557   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2477:2478   */\n      0x00\n        /* \"#utility.yul\":2470:2558   */\n      mstore\n        /* \"#utility.yul\":2577:2581   */\n      0x11\n        /* \"#utility.yul\":2574:2575   */\n      0x04\n        /* \"#utility.yul\":2567:2582   */\n      mstore\n        /* \"#utility.yul\":2601:2605   */\n      0x24\n        /* \"#utility.yul\":2598:2599   */\n      0x00\n        /* \"#utility.yul\":2591:2606   */\n      revert\n        /* \"#utility.yul\":2618:2812   */\n    tag_19:\n        /* \"#utility.yul\":2658:2662   */\n      0x00\n        /* \"#utility.yul\":2678:2698   */\n      tag_84\n        /* \"#utility.yul\":2696:2697   */\n      dup3\n        /* \"#utility.yul\":2678:2698   */\n      tag_53\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":2673:2698   */\n      swap2\n      pop\n        /* \"#utility.yul\":2712:2732   */\n      tag_85\n        /* \"#utility.yul\":2730:2731   */\n      dup4\n        /* \"#utility.yul\":2712:2732   */\n      tag_53\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":2707:2732   */\n      swap3\n      pop\n        /* \"#utility.yul\":2756:2757   */\n      dup3\n        /* \"#utility.yul\":2753:2754   */\n      dup3\n        /* \"#utility.yul\":2749:2758   */\n      sub\n        /* \"#utility.yul\":2741:2758   */\n      swap1\n      pop\n        /* \"#utility.yul\":2780:2781   */\n      dup2\n        /* \"#utility.yul\":2774:2778   */\n      dup2\n        /* \"#utility.yul\":2771:2782   */\n      gt\n        /* \"#utility.yul\":2768:2805   */\n      iszero\n      tag_86\n      jumpi\n        /* \"#utility.yul\":2785:2803   */\n      tag_87\n      tag_55\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":2768:2805   */\n    tag_86:\n        /* \"#utility.yul\":2618:2812   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2818:3009   */\n    tag_22:\n        /* \"#utility.yul\":2858:2861   */\n      0x00\n        /* \"#utility.yul\":2877:2897   */\n      tag_89\n        /* \"#utility.yul\":2895:2896   */\n      dup3\n        /* \"#utility.yul\":2877:2897   */\n      tag_53\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":2872:2897   */\n      swap2\n      pop\n        /* \"#utility.yul\":2911:2931   */\n      tag_90\n        /* \"#utility.yul\":2929:2930   */\n      dup4\n        /* \"#utility.yul\":2911:2931   */\n      tag_53\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":2906:2931   */\n      swap3\n      pop\n        /* \"#utility.yul\":2954:2955   */\n      dup3\n        /* \"#utility.yul\":2951:2952   */\n      dup3\n        /* \"#utility.yul\":2947:2956   */\n      add\n        /* \"#utility.yul\":2940:2956   */\n      swap1\n      pop\n        /* \"#utility.yul\":2975:2978   */\n      dup1\n        /* \"#utility.yul\":2972:2973   */\n      dup3\n        /* \"#utility.yul\":2969:2979   */\n      gt\n        /* \"#utility.yul\":2966:3002   */\n      iszero\n      tag_91\n      jumpi\n        /* \"#utility.yul\":2982:3000   */\n      tag_92\n      tag_55\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":2966:3002   */\n    tag_91:\n        /* \"#utility.yul\":2818:3009   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3015:3248   */\n    tag_42:\n        /* \"#utility.yul\":3054:3057   */\n      0x00\n        /* \"#utility.yul\":3077:3101   */\n      tag_94\n        /* \"#utility.yul\":3095:3100   */\n      dup3\n        /* \"#utility.yul\":3077:3101   */\n      tag_53\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":3068:3101   */\n      swap2\n      pop\n        /* \"#utility.yul\":3123:3189   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3116:3121   */\n      dup3\n        /* \"#utility.yul\":3113:3190   */\n      sub\n        /* \"#utility.yul\":3110:3213   */\n      tag_95\n      jumpi\n        /* \"#utility.yul\":3193:3211   */\n      tag_96\n      tag_55\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":3110:3213   */\n    tag_95:\n        /* \"#utility.yul\":3240:3241   */\n      0x01\n        /* \"#utility.yul\":3233:3238   */\n      dup3\n        /* \"#utility.yul\":3229:3242   */\n      add\n        /* \"#utility.yul\":3222:3242   */\n      swap1\n      pop\n        /* \"#utility.yul\":3015:3248   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220edf5064433e593702d3e0836501005bd645184fcbbe2437ca83c947c42e7a86b64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_51": {
									"entryPoint": null,
									"id": 51,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060015f5f7f49000000000000000000000000000000000000000000000000000000000000007effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020015f208190555060055f5f7f56000000000000000000000000000000000000000000000000000000000000007effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020015f2081905550600a5f5f7f58000000000000000000000000000000000000000000000000000000000000007effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020015f208190555060325f5f7f4c000000000000000000000000000000000000000000000000000000000000007effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020015f208190555060645f5f7f43000000000000000000000000000000000000000000000000000000000000007effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020015f20819055506101f45f5f7f44000000000000000000000000000000000000000000000000000000000000007effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020015f20819055506103e85f5f7f4d000000000000000000000000000000000000000000000000000000000000007effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020015f2081905550610508806102875f395ff3fe608060405234801561000f575f5ffd5b5060043610610029575f3560e01c8063bc62d8d81461002d575b5f5ffd5b6100476004803603810190610042919061034f565b61005d565b60405161005491906103b2565b60405180910390f35b5f5f83838080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f8201169050808301925050505050505090505f5f90505f5f90505b82518110156102d9575f8382815181106100cb576100ca6103cb565b5b602001015160f81c60f81b90505f5f5f837effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020015f205490505f8103610144575f955050505050506102e0565b5f5f9050600186516101569190610425565b8410156101de575f5f8760018761016d9190610458565b8151811061017e5761017d6103cb565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020015f205490505b808210156102ac575f5f9050600183148015610205575060058214806102045750600a82145b5b1561021d5782826102169190610425565b9050610283565b600a83148015610238575060328214806102375750606482145b5b156102505782826102499190610425565b9050610282565b60648314801561026d57506101f482148061026c57506103e882145b5b1561028157828261027e9190610425565b90505b5b5b5f8103610299575f9750505050505050506102e0565b80925084806102a79061048b565b955050505b5f8211156102c35781856102c09190610458565b94505b50505080806102d19061048b565b9150506100ae565b5080925050505b92915050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f84011261030f5761030e6102ee565b5b8235905067ffffffffffffffff81111561032c5761032b6102f2565b5b602083019150836001820283011115610348576103476102f6565b5b9250929050565b5f5f60208385031215610365576103646102e6565b5b5f83013567ffffffffffffffff811115610382576103816102ea565b5b61038e858286016102fa565b92509250509250929050565b5f819050919050565b6103ac8161039a565b82525050565b5f6020820190506103c55f8301846103a3565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61042f8261039a565b915061043a8361039a565b9250828203905081811115610452576104516103f8565b5b92915050565b5f6104628261039a565b915061046d8361039a565b9250828201905080821115610485576104846103f8565b5b92915050565b5f6104958261039a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036104c7576104c66103f8565b5b60018201905091905056fea2646970667358221220edf5064433e593702d3e0836501005bd645184fcbbe2437ca83c947c42e7a86b64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x1 PUSH0 PUSH0 PUSH32 0x4900000000000000000000000000000000000000000000000000000000000000 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH0 PUSH0 PUSH32 0x5600000000000000000000000000000000000000000000000000000000000000 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xA PUSH0 PUSH0 PUSH32 0x5800000000000000000000000000000000000000000000000000000000000000 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x32 PUSH0 PUSH0 PUSH32 0x4C00000000000000000000000000000000000000000000000000000000000000 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x64 PUSH0 PUSH0 PUSH32 0x4300000000000000000000000000000000000000000000000000000000000000 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1F4 PUSH0 PUSH0 PUSH32 0x4400000000000000000000000000000000000000000000000000000000000000 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x3E8 PUSH0 PUSH0 PUSH32 0x4D00000000000000000000000000000000000000000000000000000000000000 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x508 DUP1 PUSH2 0x287 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBC62D8D8 EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x47 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x34F JUMP JUMPDEST PUSH2 0x5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54 SWAP2 SWAP1 PUSH2 0x3B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH0 DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP1 POP PUSH0 PUSH0 SWAP1 POP PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x2D9 JUMPI PUSH0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xCB JUMPI PUSH2 0xCA PUSH2 0x3CB JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL SWAP1 POP PUSH0 PUSH0 PUSH0 DUP4 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 SUB PUSH2 0x144 JUMPI PUSH0 SWAP6 POP POP POP POP POP POP PUSH2 0x2E0 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP PUSH1 0x1 DUP7 MLOAD PUSH2 0x156 SWAP2 SWAP1 PUSH2 0x425 JUMP JUMPDEST DUP5 LT ISZERO PUSH2 0x1DE JUMPI PUSH0 PUSH0 DUP8 PUSH1 0x1 DUP8 PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x458 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x17E JUMPI PUSH2 0x17D PUSH2 0x3CB JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x2AC JUMPI PUSH0 PUSH0 SWAP1 POP PUSH1 0x1 DUP4 EQ DUP1 ISZERO PUSH2 0x205 JUMPI POP PUSH1 0x5 DUP3 EQ DUP1 PUSH2 0x204 JUMPI POP PUSH1 0xA DUP3 EQ JUMPDEST JUMPDEST ISZERO PUSH2 0x21D JUMPI DUP3 DUP3 PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x425 JUMP JUMPDEST SWAP1 POP PUSH2 0x283 JUMP JUMPDEST PUSH1 0xA DUP4 EQ DUP1 ISZERO PUSH2 0x238 JUMPI POP PUSH1 0x32 DUP3 EQ DUP1 PUSH2 0x237 JUMPI POP PUSH1 0x64 DUP3 EQ JUMPDEST JUMPDEST ISZERO PUSH2 0x250 JUMPI DUP3 DUP3 PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x425 JUMP JUMPDEST SWAP1 POP PUSH2 0x282 JUMP JUMPDEST PUSH1 0x64 DUP4 EQ DUP1 ISZERO PUSH2 0x26D JUMPI POP PUSH2 0x1F4 DUP3 EQ DUP1 PUSH2 0x26C JUMPI POP PUSH2 0x3E8 DUP3 EQ JUMPDEST JUMPDEST ISZERO PUSH2 0x281 JUMPI DUP3 DUP3 PUSH2 0x27E SWAP2 SWAP1 PUSH2 0x425 JUMP JUMPDEST SWAP1 POP JUMPDEST JUMPDEST JUMPDEST PUSH0 DUP2 SUB PUSH2 0x299 JUMPI PUSH0 SWAP8 POP POP POP POP POP POP POP POP PUSH2 0x2E0 JUMP JUMPDEST DUP1 SWAP3 POP DUP5 DUP1 PUSH2 0x2A7 SWAP1 PUSH2 0x48B JUMP JUMPDEST SWAP6 POP POP POP JUMPDEST PUSH0 DUP3 GT ISZERO PUSH2 0x2C3 JUMPI DUP2 DUP6 PUSH2 0x2C0 SWAP2 SWAP1 PUSH2 0x458 JUMP JUMPDEST SWAP5 POP JUMPDEST POP POP POP DUP1 DUP1 PUSH2 0x2D1 SWAP1 PUSH2 0x48B JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAE JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x30F JUMPI PUSH2 0x30E PUSH2 0x2EE JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x32C JUMPI PUSH2 0x32B PUSH2 0x2F2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x348 JUMPI PUSH2 0x347 PUSH2 0x2F6 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x365 JUMPI PUSH2 0x364 PUSH2 0x2E6 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x382 JUMPI PUSH2 0x381 PUSH2 0x2EA JUMP JUMPDEST JUMPDEST PUSH2 0x38E DUP6 DUP3 DUP7 ADD PUSH2 0x2FA JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3AC DUP2 PUSH2 0x39A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3C5 PUSH0 DUP4 ADD DUP5 PUSH2 0x3A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x42F DUP3 PUSH2 0x39A JUMP JUMPDEST SWAP2 POP PUSH2 0x43A DUP4 PUSH2 0x39A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x452 JUMPI PUSH2 0x451 PUSH2 0x3F8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x462 DUP3 PUSH2 0x39A JUMP JUMPDEST SWAP2 POP PUSH2 0x46D DUP4 PUSH2 0x39A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x485 JUMPI PUSH2 0x484 PUSH2 0x3F8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x495 DUP3 PUSH2 0x39A JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x4C7 JUMPI PUSH2 0x4C6 PUSH2 0x3F8 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED CREATE2 MOD PREVRANDAO CALLER JUMPF 0x9370 0x2D RETURNDATACOPY ADDMOD CALLDATASIZE POP LT SDIV 0xBD PUSH5 0x5184FCBBE2 NUMBER PUSH29 0xA83C947C42E7A86B64736F6C634300081E003300000000000000000000 ",
							"sourceMap": "1067:1859:0:-:0;;;1151:240;;;;;;;;;;1194:1;1175:11;:16;;;;;;;;;;;;;;;;:20;;;;1224:1;1205:11;:16;;;;;;;;;;;;;;;;:20;;;;1254:2;1235:11;:16;;;;;;;;;;;;;;;;:21;;;;1285:2;1266:11;:16;;;;;;;;;;;;;;;;:21;;;;1316:3;1297:11;:16;;;;;;;;;;;;;;;;:22;;;;1348:3;1329:11;:16;;;;;;;;;;;;;;;;:22;;;;1380:4;1361:11;:16;;;;;;;;;;;;;;;;:23;;;;1067:1859;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@parse_218": {
									"entryPoint": 93,
									"id": 218,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_calldata_ptr": {
									"entryPoint": 762,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_string_calldata_ptr": {
									"entryPoint": 847,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 931,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 946,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1061,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 922,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 1163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1016,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 971,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 754,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 750,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 758,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 746,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 742,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3251:1",
										"nodeType": "YulBlock",
										"src": "0:3251:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "423:28:1",
													"nodeType": "YulBlock",
													"src": "423:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:1",
																		"nodeType": "YulLiteral",
																		"src": "440:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:1",
																		"nodeType": "YulLiteral",
																		"src": "443:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:1"
																},
																"nativeSrc": "433:12:1",
																"nodeType": "YulFunctionCall",
																"src": "433:12:1"
															},
															"nativeSrc": "433:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:1"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:1"
											},
											{
												"body": {
													"nativeSrc": "546:28:1",
													"nodeType": "YulBlock",
													"src": "546:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:1",
																		"nodeType": "YulLiteral",
																		"src": "563:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:1",
																		"nodeType": "YulLiteral",
																		"src": "566:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:1"
																},
																"nativeSrc": "556:12:1",
																"nodeType": "YulFunctionCall",
																"src": "556:12:1"
															},
															"nativeSrc": "556:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:1"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "457:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:1"
											},
											{
												"body": {
													"nativeSrc": "669:28:1",
													"nodeType": "YulBlock",
													"src": "669:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "686:1:1",
																		"nodeType": "YulLiteral",
																		"src": "686:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "689:1:1",
																		"nodeType": "YulLiteral",
																		"src": "689:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "679:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "679:6:1"
																},
																"nativeSrc": "679:12:1",
																"nodeType": "YulFunctionCall",
																"src": "679:12:1"
															},
															"nativeSrc": "679:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "679:12:1"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "580:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "580:117:1"
											},
											{
												"body": {
													"nativeSrc": "792:478:1",
													"nodeType": "YulBlock",
													"src": "792:478:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "841:83:1",
																"nodeType": "YulBlock",
																"src": "841:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "843:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "843:77:1"
																			},
																			"nativeSrc": "843:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "843:79:1"
																		},
																		"nativeSrc": "843:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "843:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "820:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "820:6:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "828:4:1",
																						"nodeType": "YulLiteral",
																						"src": "828:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "816:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "816:3:1"
																				},
																				"nativeSrc": "816:17:1",
																				"nodeType": "YulFunctionCall",
																				"src": "816:17:1"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "835:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "835:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "812:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "812:3:1"
																		},
																		"nativeSrc": "812:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "812:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "805:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "805:6:1"
																},
																"nativeSrc": "805:35:1",
																"nodeType": "YulFunctionCall",
																"src": "805:35:1"
															},
															"nativeSrc": "802:122:1",
															"nodeType": "YulIf",
															"src": "802:122:1"
														},
														{
															"nativeSrc": "933:30:1",
															"nodeType": "YulAssignment",
															"src": "933:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "956:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "943:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "943:12:1"
																},
																"nativeSrc": "943:20:1",
																"nodeType": "YulFunctionCall",
																"src": "943:20:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "933:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "933:6:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1006:83:1",
																"nodeType": "YulBlock",
																"src": "1006:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "1008:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "1008:77:1"
																			},
																			"nativeSrc": "1008:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1008:79:1"
																		},
																		"nativeSrc": "1008:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1008:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "978:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "978:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "986:18:1",
																		"nodeType": "YulLiteral",
																		"src": "986:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "975:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "975:2:1"
																},
																"nativeSrc": "975:30:1",
																"nodeType": "YulFunctionCall",
																"src": "975:30:1"
															},
															"nativeSrc": "972:117:1",
															"nodeType": "YulIf",
															"src": "972:117:1"
														},
														{
															"nativeSrc": "1098:29:1",
															"nodeType": "YulAssignment",
															"src": "1098:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1114:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1114:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1122:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1122:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1110:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1110:3:1"
																},
																"nativeSrc": "1110:17:1",
																"nodeType": "YulFunctionCall",
																"src": "1110:17:1"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "1098:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "1098:8:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1181:83:1",
																"nodeType": "YulBlock",
																"src": "1181:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "1183:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "1183:77:1"
																			},
																			"nativeSrc": "1183:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1183:79:1"
																		},
																		"nativeSrc": "1183:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1183:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "1146:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "1146:8:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "1160:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1160:6:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1168:4:1",
																						"nodeType": "YulLiteral",
																						"src": "1168:4:1",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "1156:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1156:3:1"
																				},
																				"nativeSrc": "1156:17:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1156:17:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1142:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1142:3:1"
																		},
																		"nativeSrc": "1142:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1142:32:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "1176:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1176:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1139:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1139:2:1"
																},
																"nativeSrc": "1139:41:1",
																"nodeType": "YulFunctionCall",
																"src": "1139:41:1"
															},
															"nativeSrc": "1136:128:1",
															"nodeType": "YulIf",
															"src": "1136:128:1"
														}
													]
												},
												"name": "abi_decode_t_string_calldata_ptr",
												"nativeSrc": "717:553:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "759:6:1",
														"nodeType": "YulTypedName",
														"src": "759:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "767:3:1",
														"nodeType": "YulTypedName",
														"src": "767:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "775:8:1",
														"nodeType": "YulTypedName",
														"src": "775:8:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "785:6:1",
														"nodeType": "YulTypedName",
														"src": "785:6:1",
														"type": ""
													}
												],
												"src": "717:553:1"
											},
											{
												"body": {
													"nativeSrc": "1362:443:1",
													"nodeType": "YulBlock",
													"src": "1362:443:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1408:83:1",
																"nodeType": "YulBlock",
																"src": "1408:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1410:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "1410:77:1"
																			},
																			"nativeSrc": "1410:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1410:79:1"
																		},
																		"nativeSrc": "1410:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1410:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1383:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1383:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1392:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1392:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1379:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1379:3:1"
																		},
																		"nativeSrc": "1379:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1379:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1404:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1404:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1375:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1375:3:1"
																},
																"nativeSrc": "1375:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1375:32:1"
															},
															"nativeSrc": "1372:119:1",
															"nodeType": "YulIf",
															"src": "1372:119:1"
														},
														{
															"nativeSrc": "1501:297:1",
															"nodeType": "YulBlock",
															"src": "1501:297:1",
															"statements": [
																{
																	"nativeSrc": "1516:45:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1516:45:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1547:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1547:9:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1558:1:1",
																						"nodeType": "YulLiteral",
																						"src": "1558:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1543:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1543:3:1"
																				},
																				"nativeSrc": "1543:17:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1543:17:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "1530:12:1",
																			"nodeType": "YulIdentifier",
																			"src": "1530:12:1"
																		},
																		"nativeSrc": "1530:31:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1530:31:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1520:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1520:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "1608:83:1",
																		"nodeType": "YulBlock",
																		"src": "1608:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "1610:77:1",
																						"nodeType": "YulIdentifier",
																						"src": "1610:77:1"
																					},
																					"nativeSrc": "1610:79:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1610:79:1"
																				},
																				"nativeSrc": "1610:79:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "1610:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "1580:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1580:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1588:18:1",
																				"nodeType": "YulLiteral",
																				"src": "1588:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1577:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1577:2:1"
																		},
																		"nativeSrc": "1577:30:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1577:30:1"
																	},
																	"nativeSrc": "1574:117:1",
																	"nodeType": "YulIf",
																	"src": "1574:117:1"
																},
																{
																	"nativeSrc": "1705:83:1",
																	"nodeType": "YulAssignment",
																	"src": "1705:83:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1760:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1760:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1771:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1771:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1756:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1756:3:1"
																				},
																				"nativeSrc": "1756:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1756:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1780:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1780:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_calldata_ptr",
																			"nativeSrc": "1723:32:1",
																			"nodeType": "YulIdentifier",
																			"src": "1723:32:1"
																		},
																		"nativeSrc": "1723:65:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1723:65:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1705:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1705:6:1"
																		},
																		{
																			"name": "value1",
																			"nativeSrc": "1713:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1713:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_calldata_ptr",
												"nativeSrc": "1276:529:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1324:9:1",
														"nodeType": "YulTypedName",
														"src": "1324:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1335:7:1",
														"nodeType": "YulTypedName",
														"src": "1335:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1347:6:1",
														"nodeType": "YulTypedName",
														"src": "1347:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1355:6:1",
														"nodeType": "YulTypedName",
														"src": "1355:6:1",
														"type": ""
													}
												],
												"src": "1276:529:1"
											},
											{
												"body": {
													"nativeSrc": "1856:32:1",
													"nodeType": "YulBlock",
													"src": "1856:32:1",
													"statements": [
														{
															"nativeSrc": "1866:16:1",
															"nodeType": "YulAssignment",
															"src": "1866:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "1877:5:1",
																"nodeType": "YulIdentifier",
																"src": "1877:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1866:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1866:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1811:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1838:5:1",
														"nodeType": "YulTypedName",
														"src": "1838:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1848:7:1",
														"nodeType": "YulTypedName",
														"src": "1848:7:1",
														"type": ""
													}
												],
												"src": "1811:77:1"
											},
											{
												"body": {
													"nativeSrc": "1959:53:1",
													"nodeType": "YulBlock",
													"src": "1959:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1976:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1976:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1999:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1999:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1981:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "1981:17:1"
																		},
																		"nativeSrc": "1981:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1981:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1969:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1969:6:1"
																},
																"nativeSrc": "1969:37:1",
																"nodeType": "YulFunctionCall",
																"src": "1969:37:1"
															},
															"nativeSrc": "1969:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "1969:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1894:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1947:5:1",
														"nodeType": "YulTypedName",
														"src": "1947:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1954:3:1",
														"nodeType": "YulTypedName",
														"src": "1954:3:1",
														"type": ""
													}
												],
												"src": "1894:118:1"
											},
											{
												"body": {
													"nativeSrc": "2116:124:1",
													"nodeType": "YulBlock",
													"src": "2116:124:1",
													"statements": [
														{
															"nativeSrc": "2126:26:1",
															"nodeType": "YulAssignment",
															"src": "2126:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2138:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2138:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2149:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2149:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2134:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2134:3:1"
																},
																"nativeSrc": "2134:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2134:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2126:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2126:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2206:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2206:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2219:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2219:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2230:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2230:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2215:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2215:3:1"
																		},
																		"nativeSrc": "2215:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2215:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2162:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "2162:43:1"
																},
																"nativeSrc": "2162:71:1",
																"nodeType": "YulFunctionCall",
																"src": "2162:71:1"
															},
															"nativeSrc": "2162:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "2162:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2018:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2088:9:1",
														"nodeType": "YulTypedName",
														"src": "2088:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2100:6:1",
														"nodeType": "YulTypedName",
														"src": "2100:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2111:4:1",
														"nodeType": "YulTypedName",
														"src": "2111:4:1",
														"type": ""
													}
												],
												"src": "2018:222:1"
											},
											{
												"body": {
													"nativeSrc": "2274:152:1",
													"nodeType": "YulBlock",
													"src": "2274:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2291:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2291:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2294:77:1",
																		"nodeType": "YulLiteral",
																		"src": "2294:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2284:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2284:6:1"
																},
																"nativeSrc": "2284:88:1",
																"nodeType": "YulFunctionCall",
																"src": "2284:88:1"
															},
															"nativeSrc": "2284:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "2284:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2388:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2388:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2391:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2391:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2381:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2381:6:1"
																},
																"nativeSrc": "2381:15:1",
																"nodeType": "YulFunctionCall",
																"src": "2381:15:1"
															},
															"nativeSrc": "2381:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "2381:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2412:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2412:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2415:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2415:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2405:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2405:6:1"
																},
																"nativeSrc": "2405:15:1",
																"nodeType": "YulFunctionCall",
																"src": "2405:15:1"
															},
															"nativeSrc": "2405:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "2405:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "2246:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "2246:180:1"
											},
											{
												"body": {
													"nativeSrc": "2460:152:1",
													"nodeType": "YulBlock",
													"src": "2460:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2477:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2477:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2480:77:1",
																		"nodeType": "YulLiteral",
																		"src": "2480:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2470:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2470:6:1"
																},
																"nativeSrc": "2470:88:1",
																"nodeType": "YulFunctionCall",
																"src": "2470:88:1"
															},
															"nativeSrc": "2470:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "2470:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2574:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2574:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2577:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2577:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2567:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2567:6:1"
																},
																"nativeSrc": "2567:15:1",
																"nodeType": "YulFunctionCall",
																"src": "2567:15:1"
															},
															"nativeSrc": "2567:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "2567:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2598:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2598:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2601:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2601:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2591:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2591:6:1"
																},
																"nativeSrc": "2591:15:1",
																"nodeType": "YulFunctionCall",
																"src": "2591:15:1"
															},
															"nativeSrc": "2591:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "2591:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "2432:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "2432:180:1"
											},
											{
												"body": {
													"nativeSrc": "2663:149:1",
													"nodeType": "YulBlock",
													"src": "2663:149:1",
													"statements": [
														{
															"nativeSrc": "2673:25:1",
															"nodeType": "YulAssignment",
															"src": "2673:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2696:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2696:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2678:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "2678:17:1"
																},
																"nativeSrc": "2678:20:1",
																"nodeType": "YulFunctionCall",
																"src": "2678:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "2673:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "2673:1:1"
																}
															]
														},
														{
															"nativeSrc": "2707:25:1",
															"nodeType": "YulAssignment",
															"src": "2707:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "2730:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2730:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2712:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "2712:17:1"
																},
																"nativeSrc": "2712:20:1",
																"nodeType": "YulFunctionCall",
																"src": "2712:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "2707:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "2707:1:1"
																}
															]
														},
														{
															"nativeSrc": "2741:17:1",
															"nodeType": "YulAssignment",
															"src": "2741:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2753:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2753:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2756:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2756:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "2749:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2749:3:1"
																},
																"nativeSrc": "2749:9:1",
																"nodeType": "YulFunctionCall",
																"src": "2749:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "2741:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2741:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2783:22:1",
																"nodeType": "YulBlock",
																"src": "2783:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2785:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "2785:16:1"
																			},
																			"nativeSrc": "2785:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2785:18:1"
																		},
																		"nativeSrc": "2785:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2785:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "2774:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2774:4:1"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "2780:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2780:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2771:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2771:2:1"
																},
																"nativeSrc": "2771:11:1",
																"nodeType": "YulFunctionCall",
																"src": "2771:11:1"
															},
															"nativeSrc": "2768:37:1",
															"nodeType": "YulIf",
															"src": "2768:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "2618:194:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2649:1:1",
														"nodeType": "YulTypedName",
														"src": "2649:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2652:1:1",
														"nodeType": "YulTypedName",
														"src": "2652:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "2658:4:1",
														"nodeType": "YulTypedName",
														"src": "2658:4:1",
														"type": ""
													}
												],
												"src": "2618:194:1"
											},
											{
												"body": {
													"nativeSrc": "2862:147:1",
													"nodeType": "YulBlock",
													"src": "2862:147:1",
													"statements": [
														{
															"nativeSrc": "2872:25:1",
															"nodeType": "YulAssignment",
															"src": "2872:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2895:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2895:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2877:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "2877:17:1"
																},
																"nativeSrc": "2877:20:1",
																"nodeType": "YulFunctionCall",
																"src": "2877:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "2872:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "2872:1:1"
																}
															]
														},
														{
															"nativeSrc": "2906:25:1",
															"nodeType": "YulAssignment",
															"src": "2906:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "2929:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2929:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2911:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "2911:17:1"
																},
																"nativeSrc": "2911:20:1",
																"nodeType": "YulFunctionCall",
																"src": "2911:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "2906:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "2906:1:1"
																}
															]
														},
														{
															"nativeSrc": "2940:16:1",
															"nodeType": "YulAssignment",
															"src": "2940:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2951:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2951:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2954:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2954:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2947:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2947:3:1"
																},
																"nativeSrc": "2947:9:1",
																"nodeType": "YulFunctionCall",
																"src": "2947:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "2940:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2940:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2980:22:1",
																"nodeType": "YulBlock",
																"src": "2980:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2982:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "2982:16:1"
																			},
																			"nativeSrc": "2982:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2982:18:1"
																		},
																		"nativeSrc": "2982:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2982:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2972:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2972:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "2975:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2975:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2969:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2969:2:1"
																},
																"nativeSrc": "2969:10:1",
																"nodeType": "YulFunctionCall",
																"src": "2969:10:1"
															},
															"nativeSrc": "2966:36:1",
															"nodeType": "YulIf",
															"src": "2966:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "2818:191:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2849:1:1",
														"nodeType": "YulTypedName",
														"src": "2849:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2852:1:1",
														"nodeType": "YulTypedName",
														"src": "2852:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "2858:3:1",
														"nodeType": "YulTypedName",
														"src": "2858:3:1",
														"type": ""
													}
												],
												"src": "2818:191:1"
											},
											{
												"body": {
													"nativeSrc": "3058:190:1",
													"nodeType": "YulBlock",
													"src": "3058:190:1",
													"statements": [
														{
															"nativeSrc": "3068:33:1",
															"nodeType": "YulAssignment",
															"src": "3068:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3095:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3095:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3077:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "3077:17:1"
																},
																"nativeSrc": "3077:24:1",
																"nodeType": "YulFunctionCall",
																"src": "3077:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3068:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "3068:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3191:22:1",
																"nodeType": "YulBlock",
																"src": "3191:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3193:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "3193:16:1"
																			},
																			"nativeSrc": "3193:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3193:18:1"
																		},
																		"nativeSrc": "3193:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3193:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3116:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3116:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3123:66:1",
																		"nodeType": "YulLiteral",
																		"src": "3123:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3113:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3113:2:1"
																},
																"nativeSrc": "3113:77:1",
																"nodeType": "YulFunctionCall",
																"src": "3113:77:1"
															},
															"nativeSrc": "3110:103:1",
															"nodeType": "YulIf",
															"src": "3110:103:1"
														},
														{
															"nativeSrc": "3222:20:1",
															"nodeType": "YulAssignment",
															"src": "3222:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3233:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3233:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3240:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3240:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3229:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3229:3:1"
																},
																"nativeSrc": "3229:13:1",
																"nodeType": "YulFunctionCall",
																"src": "3229:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3222:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3222:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "3015:233:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3044:5:1",
														"nodeType": "YulTypedName",
														"src": "3044:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3054:3:1",
														"nodeType": "YulTypedName",
														"src": "3054:3:1",
														"type": ""
													}
												],
												"src": "3015:233:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // string\n    function abi_decode_t_string_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_string_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610029575f3560e01c8063bc62d8d81461002d575b5f5ffd5b6100476004803603810190610042919061034f565b61005d565b60405161005491906103b2565b60405180910390f35b5f5f83838080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f8201169050808301925050505050505090505f5f90505f5f90505b82518110156102d9575f8382815181106100cb576100ca6103cb565b5b602001015160f81c60f81b90505f5f5f837effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020015f205490505f8103610144575f955050505050506102e0565b5f5f9050600186516101569190610425565b8410156101de575f5f8760018761016d9190610458565b8151811061017e5761017d6103cb565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020015f205490505b808210156102ac575f5f9050600183148015610205575060058214806102045750600a82145b5b1561021d5782826102169190610425565b9050610283565b600a83148015610238575060328214806102375750606482145b5b156102505782826102499190610425565b9050610282565b60648314801561026d57506101f482148061026c57506103e882145b5b1561028157828261027e9190610425565b90505b5b5b5f8103610299575f9750505050505050506102e0565b80925084806102a79061048b565b955050505b5f8211156102c35781856102c09190610458565b94505b50505080806102d19061048b565b9150506100ae565b5080925050505b92915050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f84011261030f5761030e6102ee565b5b8235905067ffffffffffffffff81111561032c5761032b6102f2565b5b602083019150836001820283011115610348576103476102f6565b5b9250929050565b5f5f60208385031215610365576103646102e6565b5b5f83013567ffffffffffffffff811115610382576103816102ea565b5b61038e858286016102fa565b92509250509250929050565b5f819050919050565b6103ac8161039a565b82525050565b5f6020820190506103c55f8301846103a3565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61042f8261039a565b915061043a8361039a565b9250828203905081811115610452576104516103f8565b5b92915050565b5f6104628261039a565b915061046d8361039a565b9250828201905080821115610485576104846103f8565b5b92915050565b5f6104958261039a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036104c7576104c66103f8565b5b60018201905091905056fea2646970667358221220edf5064433e593702d3e0836501005bd645184fcbbe2437ca83c947c42e7a86b64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBC62D8D8 EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x47 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x34F JUMP JUMPDEST PUSH2 0x5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54 SWAP2 SWAP1 PUSH2 0x3B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH0 DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP1 POP PUSH0 PUSH0 SWAP1 POP PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x2D9 JUMPI PUSH0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xCB JUMPI PUSH2 0xCA PUSH2 0x3CB JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL SWAP1 POP PUSH0 PUSH0 PUSH0 DUP4 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 SUB PUSH2 0x144 JUMPI PUSH0 SWAP6 POP POP POP POP POP POP PUSH2 0x2E0 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP PUSH1 0x1 DUP7 MLOAD PUSH2 0x156 SWAP2 SWAP1 PUSH2 0x425 JUMP JUMPDEST DUP5 LT ISZERO PUSH2 0x1DE JUMPI PUSH0 PUSH0 DUP8 PUSH1 0x1 DUP8 PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x458 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x17E JUMPI PUSH2 0x17D PUSH2 0x3CB JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x2AC JUMPI PUSH0 PUSH0 SWAP1 POP PUSH1 0x1 DUP4 EQ DUP1 ISZERO PUSH2 0x205 JUMPI POP PUSH1 0x5 DUP3 EQ DUP1 PUSH2 0x204 JUMPI POP PUSH1 0xA DUP3 EQ JUMPDEST JUMPDEST ISZERO PUSH2 0x21D JUMPI DUP3 DUP3 PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x425 JUMP JUMPDEST SWAP1 POP PUSH2 0x283 JUMP JUMPDEST PUSH1 0xA DUP4 EQ DUP1 ISZERO PUSH2 0x238 JUMPI POP PUSH1 0x32 DUP3 EQ DUP1 PUSH2 0x237 JUMPI POP PUSH1 0x64 DUP3 EQ JUMPDEST JUMPDEST ISZERO PUSH2 0x250 JUMPI DUP3 DUP3 PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x425 JUMP JUMPDEST SWAP1 POP PUSH2 0x282 JUMP JUMPDEST PUSH1 0x64 DUP4 EQ DUP1 ISZERO PUSH2 0x26D JUMPI POP PUSH2 0x1F4 DUP3 EQ DUP1 PUSH2 0x26C JUMPI POP PUSH2 0x3E8 DUP3 EQ JUMPDEST JUMPDEST ISZERO PUSH2 0x281 JUMPI DUP3 DUP3 PUSH2 0x27E SWAP2 SWAP1 PUSH2 0x425 JUMP JUMPDEST SWAP1 POP JUMPDEST JUMPDEST JUMPDEST PUSH0 DUP2 SUB PUSH2 0x299 JUMPI PUSH0 SWAP8 POP POP POP POP POP POP POP POP PUSH2 0x2E0 JUMP JUMPDEST DUP1 SWAP3 POP DUP5 DUP1 PUSH2 0x2A7 SWAP1 PUSH2 0x48B JUMP JUMPDEST SWAP6 POP POP POP JUMPDEST PUSH0 DUP3 GT ISZERO PUSH2 0x2C3 JUMPI DUP2 DUP6 PUSH2 0x2C0 SWAP2 SWAP1 PUSH2 0x458 JUMP JUMPDEST SWAP5 POP JUMPDEST POP POP POP DUP1 DUP1 PUSH2 0x2D1 SWAP1 PUSH2 0x48B JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAE JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x30F JUMPI PUSH2 0x30E PUSH2 0x2EE JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x32C JUMPI PUSH2 0x32B PUSH2 0x2F2 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x348 JUMPI PUSH2 0x347 PUSH2 0x2F6 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x365 JUMPI PUSH2 0x364 PUSH2 0x2E6 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x382 JUMPI PUSH2 0x381 PUSH2 0x2EA JUMP JUMPDEST JUMPDEST PUSH2 0x38E DUP6 DUP3 DUP7 ADD PUSH2 0x2FA JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3AC DUP2 PUSH2 0x39A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3C5 PUSH0 DUP4 ADD DUP5 PUSH2 0x3A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x42F DUP3 PUSH2 0x39A JUMP JUMPDEST SWAP2 POP PUSH2 0x43A DUP4 PUSH2 0x39A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x452 JUMPI PUSH2 0x451 PUSH2 0x3F8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x462 DUP3 PUSH2 0x39A JUMP JUMPDEST SWAP2 POP PUSH2 0x46D DUP4 PUSH2 0x39A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x485 JUMPI PUSH2 0x484 PUSH2 0x3F8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x495 DUP3 PUSH2 0x39A JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x4C7 JUMPI PUSH2 0x4C6 PUSH2 0x3F8 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED CREATE2 MOD PREVRANDAO CALLER JUMPF 0x9370 0x2D RETURNDATACOPY ADDMOD CALLDATASIZE POP LT SDIV 0xBD PUSH5 0x5184FCBBE2 NUMBER PUSH29 0xA83C947C42E7A86B64736F6C634300081E003300000000000000000000 ",
							"sourceMap": "1067:1859:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1397:1527;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;1456:7;1475:23;1507:5;;1475:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1523:13;1539:1;1523:17;;1556:9;1568:1;1556:13;;1551:1345;1575:10;:17;1571:1;:21;1551:1345;;;1613:11;1627:10;1638:1;1627:13;;;;;;;;:::i;:::-;;;;;;;;;;1613:27;;1654:13;1670:11;:17;1682:4;1670:17;;;;;;;;;;;;;;;;;;1654:33;;1714:1;1705:5;:10;1701:57;;1742:1;1735:8;;;;;;;;;1701:57;1771:17;1791:1;1771:21;;1834:1;1814:10;:17;:21;;;;:::i;:::-;1810:1;:25;1806:106;;;1867:11;:30;1879:10;1894:1;1890;:5;;;;:::i;:::-;1879:17;;;;;;;;:::i;:::-;;;;;;;;;;1867:30;;;;;;;;;;;;;;;;;;1855:42;;1806:106;1938:9;1930:5;:17;1926:885;;;1967:16;1986:1;1967:20;;2079:1;2070:5;:10;:49;;;;;2098:1;2085:9;:14;:33;;;;2116:2;2103:9;:15;2085:33;2070:49;2066:591;;;2166:5;2154:9;:17;;;;:::i;:::-;2143:28;;2066:591;;;2288:2;2279:5;:11;:52;;;;;2308:2;2295:9;:15;:35;;;;2327:3;2314:9;:16;2295:35;2279:52;2275:382;;;2378:5;2366:9;:17;;;;:::i;:::-;2355:28;;2275:382;;;2523:3;2514:5;:12;:55;;;;;2544:3;2531:9;:16;:37;;;;2564:4;2551:9;:17;2531:37;2514:55;2489:168;;;2633:5;2621:9;:17;;;;:::i;:::-;2610:28;;2489:168;2275:382;2066:591;2690:1;2678:8;:13;2674:68;;2722:1;2715:8;;;;;;;;;;;2674:68;2767:8;2759:16;;2793:3;;;;;:::i;:::-;;;;1949:862;1926:885;2836:1;2828:5;:9;2824:62;;;2866:5;2857:14;;;;;:::i;:::-;;;2824:62;1599:1297;;;1594:3;;;;;:::i;:::-;;;;1551:1345;;;;2912:5;2905:12;;;;1397:1527;;;;;:::o;88:117:1:-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:117;689:1;686;679:12;717:553;775:8;785:6;835:3;828:4;820:6;816:17;812:27;802:122;;843:79;;:::i;:::-;802:122;956:6;943:20;933:30;;986:18;978:6;975:30;972:117;;;1008:79;;:::i;:::-;972:117;1122:4;1114:6;1110:17;1098:29;;1176:3;1168:4;1160:6;1156:17;1146:8;1142:32;1139:41;1136:128;;;1183:79;;:::i;:::-;1136:128;717:553;;;;;:::o;1276:529::-;1347:6;1355;1404:2;1392:9;1383:7;1379:23;1375:32;1372:119;;;1410:79;;:::i;:::-;1372:119;1558:1;1547:9;1543:17;1530:31;1588:18;1580:6;1577:30;1574:117;;;1610:79;;:::i;:::-;1574:117;1723:65;1780:7;1771:6;1760:9;1756:22;1723:65;:::i;:::-;1705:83;;;;1501:297;1276:529;;;;;:::o;1811:77::-;1848:7;1877:5;1866:16;;1811:77;;;:::o;1894:118::-;1981:24;1999:5;1981:24;:::i;:::-;1976:3;1969:37;1894:118;;:::o;2018:222::-;2111:4;2149:2;2138:9;2134:18;2126:26;;2162:71;2230:1;2219:9;2215:17;2206:6;2162:71;:::i;:::-;2018:222;;;;:::o;2246:180::-;2294:77;2291:1;2284:88;2391:4;2388:1;2381:15;2415:4;2412:1;2405:15;2432:180;2480:77;2477:1;2470:88;2577:4;2574:1;2567:15;2601:4;2598:1;2591:15;2618:194;2658:4;2678:20;2696:1;2678:20;:::i;:::-;2673:25;;2712:20;2730:1;2712:20;:::i;:::-;2707:25;;2756:1;2753;2749:9;2741:17;;2780:1;2774:4;2771:11;2768:37;;;2785:18;;:::i;:::-;2768:37;2618:194;;;;:::o;2818:191::-;2858:3;2877:20;2895:1;2877:20;:::i;:::-;2872:25;;2911:20;2929:1;2911:20;:::i;:::-;2906:25;;2954:1;2951;2947:9;2940:16;;2975:3;2972:1;2969:10;2966:36;;;2982:18;;:::i;:::-;2966:36;2818:191;;;;:::o;3015:233::-;3054:3;3077:24;3095:5;3077:24;:::i;:::-;3068:33;;3123:66;3116:5;3113:77;3110:103;;3193:18;;:::i;:::-;3110:103;3240:1;3233:5;3229:13;3222:20;;3015:233;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "257600",
								"executionCost": "155684",
								"totalCost": "413284"
							},
							"external": {
								"parse(string)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1067,
									"end": 2926,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1067,
									"end": 2926,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1067,
									"end": 2926,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1151,
									"end": 1391,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1151,
									"end": 1391,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1151,
									"end": 1391,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1151,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1151,
									"end": 1391,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1151,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1151,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1151,
									"end": 1391,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1151,
									"end": 1391,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1151,
									"end": 1391,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1151,
									"end": 1391,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1194,
									"end": 1195,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1175,
									"end": 1186,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1175,
									"end": 1191,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1175,
									"end": 1191,
									"name": "PUSH",
									"source": 0,
									"value": "4900000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1175,
									"end": 1191,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1175,
									"end": 1191,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1175,
									"end": 1191,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1175,
									"end": 1191,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1175,
									"end": 1191,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1175,
									"end": 1191,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1175,
									"end": 1191,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1175,
									"end": 1191,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1175,
									"end": 1191,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1175,
									"end": 1191,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1175,
									"end": 1191,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1175,
									"end": 1191,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1175,
									"end": 1191,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1175,
									"end": 1191,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 1175,
									"end": 1195,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1175,
									"end": 1195,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1175,
									"end": 1195,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1175,
									"end": 1195,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1224,
									"end": 1225,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1205,
									"end": 1216,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1205,
									"end": 1221,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1205,
									"end": 1221,
									"name": "PUSH",
									"source": 0,
									"value": "5600000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1205,
									"end": 1221,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1205,
									"end": 1221,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1205,
									"end": 1221,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1205,
									"end": 1221,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1205,
									"end": 1221,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1205,
									"end": 1221,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1205,
									"end": 1221,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1205,
									"end": 1221,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1205,
									"end": 1221,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1205,
									"end": 1221,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1205,
									"end": 1221,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1205,
									"end": 1221,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1205,
									"end": 1221,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1205,
									"end": 1221,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 1205,
									"end": 1225,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1205,
									"end": 1225,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1205,
									"end": 1225,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1205,
									"end": 1225,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1254,
									"end": 1256,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 1235,
									"end": 1246,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1235,
									"end": 1251,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1235,
									"end": 1251,
									"name": "PUSH",
									"source": 0,
									"value": "5800000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1235,
									"end": 1251,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1235,
									"end": 1251,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1235,
									"end": 1251,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1235,
									"end": 1251,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1235,
									"end": 1251,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1235,
									"end": 1251,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1235,
									"end": 1251,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1235,
									"end": 1251,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1235,
									"end": 1251,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1235,
									"end": 1251,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1235,
									"end": 1251,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1235,
									"end": 1251,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1235,
									"end": 1251,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1235,
									"end": 1251,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 1235,
									"end": 1256,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1235,
									"end": 1256,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1235,
									"end": 1256,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1235,
									"end": 1256,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1285,
									"end": 1287,
									"name": "PUSH",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 1266,
									"end": 1277,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1266,
									"end": 1282,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1266,
									"end": 1282,
									"name": "PUSH",
									"source": 0,
									"value": "4C00000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1266,
									"end": 1282,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1266,
									"end": 1282,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1266,
									"end": 1282,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1266,
									"end": 1282,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1266,
									"end": 1282,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1266,
									"end": 1282,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1266,
									"end": 1282,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1266,
									"end": 1282,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1266,
									"end": 1282,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1266,
									"end": 1282,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1266,
									"end": 1282,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1266,
									"end": 1282,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1266,
									"end": 1282,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1266,
									"end": 1282,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 1266,
									"end": 1287,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1266,
									"end": 1287,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1266,
									"end": 1287,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1266,
									"end": 1287,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1316,
									"end": 1319,
									"name": "PUSH",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 1297,
									"end": 1308,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1297,
									"end": 1313,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1297,
									"end": 1313,
									"name": "PUSH",
									"source": 0,
									"value": "4300000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1297,
									"end": 1313,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1297,
									"end": 1313,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1297,
									"end": 1313,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1297,
									"end": 1313,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1297,
									"end": 1313,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1297,
									"end": 1313,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1297,
									"end": 1313,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1297,
									"end": 1313,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1297,
									"end": 1313,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1297,
									"end": 1313,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1297,
									"end": 1313,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1297,
									"end": 1313,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1297,
									"end": 1313,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1297,
									"end": 1313,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 1297,
									"end": 1319,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1297,
									"end": 1319,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1297,
									"end": 1319,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1297,
									"end": 1319,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1348,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "1F4"
								},
								{
									"begin": 1329,
									"end": 1340,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1329,
									"end": 1345,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1329,
									"end": 1345,
									"name": "PUSH",
									"source": 0,
									"value": "4400000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1329,
									"end": 1345,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1329,
									"end": 1345,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1329,
									"end": 1345,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1329,
									"end": 1345,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1329,
									"end": 1345,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1329,
									"end": 1345,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1329,
									"end": 1345,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1329,
									"end": 1345,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1329,
									"end": 1345,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1329,
									"end": 1345,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1329,
									"end": 1345,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1329,
									"end": 1345,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1329,
									"end": 1345,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1329,
									"end": 1345,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 1329,
									"end": 1351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1329,
									"end": 1351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1329,
									"end": 1351,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1329,
									"end": 1351,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1380,
									"end": 1384,
									"name": "PUSH",
									"source": 0,
									"value": "3E8"
								},
								{
									"begin": 1361,
									"end": 1372,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1361,
									"end": 1377,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1361,
									"end": 1377,
									"name": "PUSH",
									"source": 0,
									"value": "4D00000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1361,
									"end": 1377,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1361,
									"end": 1377,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1361,
									"end": 1377,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1361,
									"end": 1377,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1361,
									"end": 1377,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1361,
									"end": 1377,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1361,
									"end": 1377,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1361,
									"end": 1377,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1361,
									"end": 1377,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1361,
									"end": 1377,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1361,
									"end": 1377,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1361,
									"end": 1377,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1361,
									"end": 1377,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1361,
									"end": 1377,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 1361,
									"end": 1384,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1361,
									"end": 1384,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1361,
									"end": 1384,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1361,
									"end": 1384,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1067,
									"end": 2926,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1067,
									"end": 2926,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1067,
									"end": 2926,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1067,
									"end": 2926,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1067,
									"end": 2926,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1067,
									"end": 2926,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1067,
									"end": 2926,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220edf5064433e593702d3e0836501005bd645184fcbbe2437ca83c947c42e7a86b64736f6c634300081e0033",
									".code": [
										{
											"begin": 1067,
											"end": 2926,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1067,
											"end": 2926,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1067,
											"end": 2926,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1067,
											"end": 2926,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1067,
											"end": 2926,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1067,
											"end": 2926,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1067,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1067,
											"end": 2926,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1067,
											"end": 2926,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1067,
											"end": 2926,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1067,
											"end": 2926,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1067,
											"end": 2926,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1067,
											"end": 2926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1067,
											"end": 2926,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1067,
											"end": 2926,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1067,
											"end": 2926,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1067,
											"end": 2926,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1067,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1067,
											"end": 2926,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1067,
											"end": 2926,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1067,
											"end": 2926,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1067,
											"end": 2926,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1067,
											"end": 2926,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1067,
											"end": 2926,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1067,
											"end": 2926,
											"name": "PUSH",
											"source": 0,
											"value": "BC62D8D8"
										},
										{
											"begin": 1067,
											"end": 2926,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1067,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1067,
											"end": 2926,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1067,
											"end": 2926,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1067,
											"end": 2926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1067,
											"end": 2926,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1067,
											"end": 2926,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1067,
											"end": 2926,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 2924,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1397,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1397,
											"end": 2924,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1397,
											"end": 2924,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 2924,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 2924,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 2924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 2924,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 2924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1397,
											"end": 2924,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 2924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1397,
											"end": 2924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 2924,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1397,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1397,
											"end": 2924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 2924,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1397,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 2924,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1397,
											"end": 2924,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1397,
											"end": 2924,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 2924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1397,
											"end": 2924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 2924,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1397,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 2924,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1397,
											"end": 2924,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 2924,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 2924,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 2924,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 2924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 2924,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 2924,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1397,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1456,
											"end": 1463,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1475,
											"end": 1498,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1507,
											"end": 1512,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1507,
											"end": 1512,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1523,
											"end": 1536,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1523,
											"end": 1540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1523,
											"end": 1540,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1556,
											"end": 1565,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1568,
											"end": 1569,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1556,
											"end": 1569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1556,
											"end": 1569,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1551,
											"end": 2896,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1551,
											"end": 2896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1575,
											"end": 1585,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1575,
											"end": 1592,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1592,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1551,
											"end": 2896,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1551,
											"end": 2896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1551,
											"end": 2896,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1613,
											"end": 1624,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1627,
											"end": 1637,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1639,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1627,
											"end": 1640,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1627,
											"end": 1640,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1627,
											"end": 1640,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1627,
											"end": 1640,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1627,
											"end": 1640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1627,
											"end": 1640,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1627,
											"end": 1640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1627,
											"end": 1640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1627,
											"end": 1640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1627,
											"end": 1640,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1627,
											"end": 1640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1627,
											"end": 1640,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1627,
											"end": 1640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1627,
											"end": 1640,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1627,
											"end": 1640,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1627,
											"end": 1640,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1627,
											"end": 1640,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1627,
											"end": 1640,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 1627,
											"end": 1640,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1627,
											"end": 1640,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 1627,
											"end": 1640,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1613,
											"end": 1640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1613,
											"end": 1640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1667,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1670,
											"end": 1681,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1670,
											"end": 1687,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1682,
											"end": 1686,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1687,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1670,
											"end": 1687,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1687,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1687,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1670,
											"end": 1687,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1687,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1687,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1687,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1687,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1670,
											"end": 1687,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1687,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1687,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1687,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1670,
											"end": 1687,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1687,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1670,
											"end": 1687,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1687,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1714,
											"end": 1715,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1705,
											"end": 1710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1705,
											"end": 1715,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1701,
											"end": 1758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1742,
											"end": 1743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1735,
											"end": 1743,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 1735,
											"end": 1743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1735,
											"end": 1743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1735,
											"end": 1743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1735,
											"end": 1743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1735,
											"end": 1743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1735,
											"end": 1743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1735,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1735,
											"end": 1743,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1758,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1701,
											"end": 1758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1788,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1791,
											"end": 1792,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1771,
											"end": 1792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1834,
											"end": 1835,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1814,
											"end": 1824,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1814,
											"end": 1831,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1814,
											"end": 1835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1814,
											"end": 1835,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1814,
											"end": 1835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1814,
											"end": 1835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1814,
											"end": 1835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1814,
											"end": 1835,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1814,
											"end": 1835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1810,
											"end": 1811,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1810,
											"end": 1835,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1806,
											"end": 1912,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1806,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1806,
											"end": 1912,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1867,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1867,
											"end": 1897,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1879,
											"end": 1889,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1894,
											"end": 1895,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1890,
											"end": 1891,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1890,
											"end": 1895,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1890,
											"end": 1895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1895,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1890,
											"end": 1895,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1879,
											"end": 1896,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1879,
											"end": 1896,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1879,
											"end": 1896,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1879,
											"end": 1896,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1879,
											"end": 1896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1879,
											"end": 1896,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1879,
											"end": 1896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1879,
											"end": 1896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1879,
											"end": 1896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1879,
											"end": 1896,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1879,
											"end": 1896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1879,
											"end": 1896,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1879,
											"end": 1896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1879,
											"end": 1896,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1879,
											"end": 1896,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1879,
											"end": 1896,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1879,
											"end": 1896,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1879,
											"end": 1896,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 1879,
											"end": 1896,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1879,
											"end": 1896,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 1879,
											"end": 1896,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1867,
											"end": 1897,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1867,
											"end": 1897,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1867,
											"end": 1897,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1867,
											"end": 1897,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1867,
											"end": 1897,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1867,
											"end": 1897,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1867,
											"end": 1897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1867,
											"end": 1897,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1867,
											"end": 1897,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1867,
											"end": 1897,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1867,
											"end": 1897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1867,
											"end": 1897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1867,
											"end": 1897,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1867,
											"end": 1897,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1867,
											"end": 1897,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1867,
											"end": 1897,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1867,
											"end": 1897,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1867,
											"end": 1897,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1897,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1806,
											"end": 1912,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1806,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 1947,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1930,
											"end": 1935,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1930,
											"end": 1947,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1926,
											"end": 2811,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1926,
											"end": 2811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1926,
											"end": 2811,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1967,
											"end": 1983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1986,
											"end": 1987,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1967,
											"end": 1987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1967,
											"end": 1987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2079,
											"end": 2080,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2070,
											"end": 2075,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2070,
											"end": 2080,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2070,
											"end": 2119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2070,
											"end": 2119,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2070,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2070,
											"end": 2119,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2070,
											"end": 2119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2098,
											"end": 2099,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2085,
											"end": 2094,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2099,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2118,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2085,
											"end": 2118,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2118,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2116,
											"end": 2118,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2103,
											"end": 2112,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2103,
											"end": 2118,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2118,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2085,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2070,
											"end": 2119,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2070,
											"end": 2119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2066,
											"end": 2657,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2066,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2066,
											"end": 2657,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2166,
											"end": 2171,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2163,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2154,
											"end": 2171,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2154,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2171,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2154,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2143,
											"end": 2171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2066,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2066,
											"end": 2657,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2066,
											"end": 2657,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2066,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2288,
											"end": 2290,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2279,
											"end": 2284,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2279,
											"end": 2290,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2279,
											"end": 2331,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2279,
											"end": 2331,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2279,
											"end": 2331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2279,
											"end": 2331,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2279,
											"end": 2331,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2308,
											"end": 2310,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2295,
											"end": 2304,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2310,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2330,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2295,
											"end": 2330,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2330,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2327,
											"end": 2330,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2314,
											"end": 2323,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2330,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2330,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2295,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2279,
											"end": 2331,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2279,
											"end": 2331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2275,
											"end": 2657,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2275,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2275,
											"end": 2657,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2383,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2366,
											"end": 2375,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2366,
											"end": 2383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2366,
											"end": 2383,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2366,
											"end": 2383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2366,
											"end": 2383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2366,
											"end": 2383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2366,
											"end": 2383,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2366,
											"end": 2383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2355,
											"end": 2383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2355,
											"end": 2383,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2275,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2275,
											"end": 2657,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2275,
											"end": 2657,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2275,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2523,
											"end": 2526,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2514,
											"end": 2519,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2514,
											"end": 2526,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2514,
											"end": 2569,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2514,
											"end": 2569,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2514,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2514,
											"end": 2569,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2514,
											"end": 2569,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2544,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "1F4"
										},
										{
											"begin": 2531,
											"end": 2540,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2531,
											"end": 2547,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2531,
											"end": 2568,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2531,
											"end": 2568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2531,
											"end": 2568,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2531,
											"end": 2568,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2568,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 2551,
											"end": 2560,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2551,
											"end": 2568,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2531,
											"end": 2568,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2531,
											"end": 2568,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2514,
											"end": 2569,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2514,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2489,
											"end": 2657,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2489,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2489,
											"end": 2657,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2638,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2621,
											"end": 2630,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2621,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2621,
											"end": 2638,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2621,
											"end": 2638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2621,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2621,
											"end": 2638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2621,
											"end": 2638,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2621,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2489,
											"end": 2657,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2489,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2275,
											"end": 2657,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2275,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2066,
											"end": 2657,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2066,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2690,
											"end": 2691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2678,
											"end": 2686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2678,
											"end": 2691,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2674,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2674,
											"end": 2742,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2722,
											"end": 2723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2715,
											"end": 2723,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 2715,
											"end": 2723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2715,
											"end": 2723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2715,
											"end": 2723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2715,
											"end": 2723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2715,
											"end": 2723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2715,
											"end": 2723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2715,
											"end": 2723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2715,
											"end": 2723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2715,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2715,
											"end": 2723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2674,
											"end": 2742,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2674,
											"end": 2742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2767,
											"end": 2775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2759,
											"end": 2775,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2759,
											"end": 2775,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2796,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2793,
											"end": 2796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2793,
											"end": 2796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2796,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2793,
											"end": 2796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2796,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1949,
											"end": 2811,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1926,
											"end": 2811,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1926,
											"end": 2811,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2836,
											"end": 2837,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2828,
											"end": 2833,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2828,
											"end": 2837,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2824,
											"end": 2886,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2824,
											"end": 2886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2824,
											"end": 2886,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2866,
											"end": 2871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2857,
											"end": 2871,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2857,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2857,
											"end": 2871,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2857,
											"end": 2871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2857,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2857,
											"end": 2871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2857,
											"end": 2871,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2857,
											"end": 2871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2857,
											"end": 2871,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2857,
											"end": 2871,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2824,
											"end": 2886,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2824,
											"end": 2886,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 2896,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 2896,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 2896,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1597,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1597,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1594,
											"end": 1597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1594,
											"end": 1597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1597,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1594,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1597,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1597,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1597,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1551,
											"end": 2896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1551,
											"end": 2896,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1551,
											"end": 2896,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1551,
											"end": 2896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1551,
											"end": 2896,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 2917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 2917,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 2917,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 2917,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 2917,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 2924,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1397,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 2924,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 2924,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 2924,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 2924,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 2924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 451,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 334,
											"end": 451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 443,
											"end": 444,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 440,
											"end": 441,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 433,
											"end": 445,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 457,
											"end": 574,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 457,
											"end": 574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 566,
											"end": 567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 563,
											"end": 564,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 556,
											"end": 568,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 580,
											"end": 697,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 580,
											"end": 697,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 689,
											"end": 690,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 686,
											"end": 687,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 679,
											"end": 691,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 717,
											"end": 1270,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 717,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 775,
											"end": 783,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 791,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 835,
											"end": 838,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 828,
											"end": 832,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 820,
											"end": 826,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 816,
											"end": 833,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 812,
											"end": 839,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 802,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 802,
											"end": 924,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 843,
											"end": 922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 843,
											"end": 922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 843,
											"end": 922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 843,
											"end": 922,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 843,
											"end": 922,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 802,
											"end": 924,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 802,
											"end": 924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 943,
											"end": 963,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 933,
											"end": 963,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 933,
											"end": 963,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 986,
											"end": 1004,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 978,
											"end": 984,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 975,
											"end": 1005,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1089,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 972,
											"end": 1089,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1008,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1008,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1008,
											"end": 1087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1008,
											"end": 1087,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1008,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1089,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 972,
											"end": 1089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1122,
											"end": 1126,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1114,
											"end": 1120,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1127,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1098,
											"end": 1127,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1098,
											"end": 1127,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1179,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1172,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1160,
											"end": 1166,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1173,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1154,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1142,
											"end": 1174,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1139,
											"end": 1180,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1264,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1136,
											"end": 1264,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1183,
											"end": 1262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1183,
											"end": 1262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1183,
											"end": 1262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1183,
											"end": 1262,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1183,
											"end": 1262,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1264,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1136,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 717,
											"end": 1270,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 717,
											"end": 1270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 717,
											"end": 1270,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 717,
											"end": 1270,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 717,
											"end": 1270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 717,
											"end": 1270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1805,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1276,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1347,
											"end": 1353,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1355,
											"end": 1361,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1404,
											"end": 1406,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1392,
											"end": 1401,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1383,
											"end": 1390,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1379,
											"end": 1402,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1375,
											"end": 1407,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1372,
											"end": 1491,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1372,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1372,
											"end": 1491,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1410,
											"end": 1489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1410,
											"end": 1489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1410,
											"end": 1489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1410,
											"end": 1489,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1410,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1372,
											"end": 1491,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1372,
											"end": 1491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1558,
											"end": 1559,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1547,
											"end": 1556,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1543,
											"end": 1560,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1530,
											"end": 1561,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1606,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1580,
											"end": 1586,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1577,
											"end": 1607,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1691,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1574,
											"end": 1691,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1610,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1610,
											"end": 1689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1689,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1610,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1691,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1574,
											"end": 1691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1780,
											"end": 1787,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1769,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1778,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1723,
											"end": 1788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1788,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1723,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1705,
											"end": 1788,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1705,
											"end": 1788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1705,
											"end": 1788,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1705,
											"end": 1788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1501,
											"end": 1798,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1805,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1805,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1805,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1805,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1805,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1811,
											"end": 1888,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1811,
											"end": 1888,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1848,
											"end": 1855,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1877,
											"end": 1882,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1882,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1811,
											"end": 1888,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1811,
											"end": 1888,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1811,
											"end": 1888,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1811,
											"end": 1888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 2012,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1894,
											"end": 2012,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1999,
											"end": 2004,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1981,
											"end": 2005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2005,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1981,
											"end": 2005,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 1979,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 2006,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 2012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 2012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 2012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2240,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2018,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2111,
											"end": 2115,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2149,
											"end": 2151,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2138,
											"end": 2147,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2134,
											"end": 2152,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2126,
											"end": 2152,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2126,
											"end": 2152,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2230,
											"end": 2231,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2219,
											"end": 2228,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2215,
											"end": 2232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2206,
											"end": 2212,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2162,
											"end": 2233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2162,
											"end": 2233,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2162,
											"end": 2233,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2240,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2240,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2240,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2240,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2426,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2246,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2294,
											"end": 2371,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2291,
											"end": 2292,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2284,
											"end": 2372,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2391,
											"end": 2395,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2388,
											"end": 2389,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2381,
											"end": 2396,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2415,
											"end": 2419,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2412,
											"end": 2413,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2405,
											"end": 2420,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2612,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2432,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2480,
											"end": 2557,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2477,
											"end": 2478,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2470,
											"end": 2558,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2577,
											"end": 2581,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2574,
											"end": 2575,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2567,
											"end": 2582,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2601,
											"end": 2605,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2598,
											"end": 2599,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2591,
											"end": 2606,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2618,
											"end": 2812,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2618,
											"end": 2812,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2658,
											"end": 2662,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2678,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2696,
											"end": 2697,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2678,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2678,
											"end": 2698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2678,
											"end": 2698,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2678,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2698,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2698,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2712,
											"end": 2732,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2730,
											"end": 2731,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2712,
											"end": 2732,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2712,
											"end": 2732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2712,
											"end": 2732,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2712,
											"end": 2732,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2732,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2732,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2756,
											"end": 2757,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2754,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 2758,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2741,
											"end": 2758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2741,
											"end": 2758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2780,
											"end": 2781,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2774,
											"end": 2778,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2771,
											"end": 2782,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2768,
											"end": 2805,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2768,
											"end": 2805,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2768,
											"end": 2805,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2785,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2785,
											"end": 2803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2803,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2785,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2768,
											"end": 2805,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2768,
											"end": 2805,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2618,
											"end": 2812,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2618,
											"end": 2812,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2618,
											"end": 2812,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2618,
											"end": 2812,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2618,
											"end": 2812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2818,
											"end": 3009,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2818,
											"end": 3009,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2858,
											"end": 2861,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2877,
											"end": 2897,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2895,
											"end": 2896,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2877,
											"end": 2897,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2877,
											"end": 2897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2877,
											"end": 2897,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2877,
											"end": 2897,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2872,
											"end": 2897,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2872,
											"end": 2897,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2911,
											"end": 2931,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2929,
											"end": 2930,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2911,
											"end": 2931,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2911,
											"end": 2931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2911,
											"end": 2931,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2911,
											"end": 2931,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2906,
											"end": 2931,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2906,
											"end": 2931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2955,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2951,
											"end": 2952,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 2956,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 2956,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 2956,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 2978,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2972,
											"end": 2973,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2969,
											"end": 2979,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 3002,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 3002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2966,
											"end": 3002,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2982,
											"end": 3000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2982,
											"end": 3000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2982,
											"end": 3000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2982,
											"end": 3000,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2982,
											"end": 3000,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 3002,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2966,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2818,
											"end": 3009,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2818,
											"end": 3009,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2818,
											"end": 3009,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2818,
											"end": 3009,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2818,
											"end": 3009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3015,
											"end": 3248,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3015,
											"end": 3248,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3054,
											"end": 3057,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3077,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 3095,
											"end": 3100,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3077,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3077,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3077,
											"end": 3101,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 3077,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3101,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3101,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3189,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3116,
											"end": 3121,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3113,
											"end": 3190,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3110,
											"end": 3213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 3110,
											"end": 3213,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3193,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3193,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3193,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3193,
											"end": 3211,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3193,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3110,
											"end": 3213,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 3110,
											"end": 3213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3240,
											"end": 3241,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3233,
											"end": 3238,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3229,
											"end": 3242,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3222,
											"end": 3242,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3222,
											"end": 3242,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3015,
											"end": 3248,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3015,
											"end": 3248,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3015,
											"end": 3248,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3015,
											"end": 3248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"task1/question3.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"parse(string)": "bc62d8d8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"parse\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"task1/question3.sol\":\"RomanNumber2Int\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"task1/question3.sol\":{\"keccak256\":\"0x8091d4fb8fe78e1f2cffd1d59cc13e014e58d2486ad0184ed2bdba200451eae6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0df5ecfe7e5bf770c7d0b9ac2517b20e79d61cb58cc2186c528dd8994a665256\",\"dweb:/ipfs/QmeUr3Em59yxj1r5QNAApx3cgac2so8XERTixdxu8EFtAr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": "task1/question3.sol:RomanNumber2Int",
								"label": "charMapping",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes1,t_uint256)"
							}
						],
						"types": {
							"t_bytes1": {
								"encoding": "inplace",
								"label": "bytes1",
								"numberOfBytes": "1"
							},
							"t_mapping(t_bytes1,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes1",
								"label": "mapping(bytes1 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"task1/question3.sol": {
				"ast": {
					"absolutePath": "task1/question3.sol",
					"exportedSymbols": {
						"RomanNumber2Int": [
							219
						]
					},
					"id": 220,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".21"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "RomanNumber2Int",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 219,
							"linearizedBaseContracts": [
								219
							],
							"name": "RomanNumber2Int",
							"nameLocation": "1076:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "charMapping",
									"nameLocation": "1133:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 219,
									"src": "1098:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes1_$_t_uint256_$",
										"typeString": "mapping(bytes1 => uint256)"
									},
									"typeName": {
										"id": 4,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2,
											"name": "bytes1",
											"nodeType": "ElementaryTypeName",
											"src": "1106:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes1",
												"typeString": "bytes1"
											}
										},
										"nodeType": "Mapping",
										"src": "1098:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes1_$_t_uint256_$",
											"typeString": "mapping(bytes1 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1116:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "1165:226:0",
										"statements": [
											{
												"expression": {
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 8,
															"name": "charMapping",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "1175:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes1_$_t_uint256_$",
																"typeString": "mapping(bytes1 => uint256)"
															}
														},
														"id": 10,
														"indexExpression": {
															"hexValue": "49",
															"id": 9,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1187:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d61ecf6e15472e15b1a0f63cd77f62aa57e6edcd3871d7a841f1056fb42b216",
																"typeString": "literal_string \"I\""
															},
															"value": "I"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1175:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1194:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1175:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 13,
												"nodeType": "ExpressionStatement",
												"src": "1175:20:0"
											},
											{
												"expression": {
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 14,
															"name": "charMapping",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "1205:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes1_$_t_uint256_$",
																"typeString": "mapping(bytes1 => uint256)"
															}
														},
														"id": 16,
														"indexExpression": {
															"hexValue": "56",
															"id": 15,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1217:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f0da850a6b7c61a66cdd43ac7529affc6000442af1c1bdda1db3bb7220bf7613",
																"typeString": "literal_string \"V\""
															},
															"value": "V"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1205:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "35",
														"id": 17,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1224:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"src": "1205:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 19,
												"nodeType": "ExpressionStatement",
												"src": "1205:20:0"
											},
											{
												"expression": {
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 20,
															"name": "charMapping",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "1235:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes1_$_t_uint256_$",
																"typeString": "mapping(bytes1 => uint256)"
															}
														},
														"id": 22,
														"indexExpression": {
															"hexValue": "58",
															"id": 21,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1247:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_550c64a15031c3064454c19adc6243a6122c138a242eaa098da50bb114fc8d56",
																"typeString": "literal_string \"X\""
															},
															"value": "X"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1235:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3130",
														"id": 23,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1254:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "1235:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 25,
												"nodeType": "ExpressionStatement",
												"src": "1235:21:0"
											},
											{
												"expression": {
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 26,
															"name": "charMapping",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "1266:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes1_$_t_uint256_$",
																"typeString": "mapping(bytes1 => uint256)"
															}
														},
														"id": 28,
														"indexExpression": {
															"hexValue": "4c",
															"id": 27,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1278:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8aa64f937099b65a4febc243a5ae0f2d6416bb9e473c30dd29c1ee498fb7c5a8",
																"typeString": "literal_string \"L\""
															},
															"value": "L"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1266:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3530",
														"id": 29,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1285:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_50_by_1",
															"typeString": "int_const 50"
														},
														"value": "50"
													},
													"src": "1266:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 31,
												"nodeType": "ExpressionStatement",
												"src": "1266:21:0"
											},
											{
												"expression": {
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 32,
															"name": "charMapping",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "1297:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes1_$_t_uint256_$",
																"typeString": "mapping(bytes1 => uint256)"
															}
														},
														"id": 34,
														"indexExpression": {
															"hexValue": "43",
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1309:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_017e667f4b8c174291d1543c466717566e206df1bfd6f30271055ddafdb18f72",
																"typeString": "literal_string \"C\""
															},
															"value": "C"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1297:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "313030",
														"id": 35,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1316:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "1297:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "1297:22:0"
											},
											{
												"expression": {
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 38,
															"name": "charMapping",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "1329:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes1_$_t_uint256_$",
																"typeString": "mapping(bytes1 => uint256)"
															}
														},
														"id": 40,
														"indexExpression": {
															"hexValue": "44",
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1341:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6c3fd336b49dcb1c57dd4fbeaf5f898320b0da06a5ef64e798c6497600bb79f2",
																"typeString": "literal_string \"D\""
															},
															"value": "D"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1329:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "353030",
														"id": 41,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1348:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_500_by_1",
															"typeString": "int_const 500"
														},
														"value": "500"
													},
													"src": "1329:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1329:22:0"
											},
											{
												"expression": {
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 44,
															"name": "charMapping",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "1361:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes1_$_t_uint256_$",
																"typeString": "mapping(bytes1 => uint256)"
															}
														},
														"id": 46,
														"indexExpression": {
															"hexValue": "4d",
															"id": 45,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1373:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7d61fdc86cb928ea48fbf22d28ed5341c2e6a2599c550270b824b71dfa078d06",
																"typeString": "literal_string \"M\""
															},
															"value": "M"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1361:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31303030",
														"id": 47,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1380:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "1361:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "1361:23:0"
											}
										]
									},
									"id": 51,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1162:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1165:0:0"
									},
									"scope": 219,
									"src": "1151:240:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 217,
										"nodeType": "Block",
										"src": "1465:1459:0",
										"statements": [
											{
												"assignments": [
													59
												],
												"declarations": [
													{
														"constant": false,
														"id": 59,
														"mutability": "mutable",
														"name": "inputBytes",
														"nameLocation": "1488:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 217,
														"src": "1475:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 58,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1475:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 64,
												"initialValue": {
													"arguments": [
														{
															"id": 62,
															"name": "input",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 53,
															"src": "1507:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														],
														"id": 61,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1501:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 60,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1501:5:0",
															"typeDescriptions": {}
														}
													},
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1501:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1475:38:0"
											},
											{
												"assignments": [
													66
												],
												"declarations": [
													{
														"constant": false,
														"id": 66,
														"mutability": "mutable",
														"name": "total",
														"nameLocation": "1531:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 217,
														"src": "1523:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 65,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1523:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 68,
												"initialValue": {
													"hexValue": "30",
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1539:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1523:17:0"
											},
											{
												"body": {
													"id": 213,
													"nodeType": "Block",
													"src": "1599:1297:0",
													"statements": [
														{
															"assignments": [
																81
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 81,
																	"mutability": "mutable",
																	"name": "char",
																	"nameLocation": "1620:4:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 213,
																	"src": "1613:11:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	},
																	"typeName": {
																		"id": 80,
																		"name": "bytes1",
																		"nodeType": "ElementaryTypeName",
																		"src": "1613:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes1",
																			"typeString": "bytes1"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 85,
															"initialValue": {
																"baseExpression": {
																	"id": 82,
																	"name": "inputBytes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 59,
																	"src": "1627:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 84,
																"indexExpression": {
																	"id": 83,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 70,
																	"src": "1638:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1627:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1613:27:0"
														},
														{
															"assignments": [
																87
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 87,
																	"mutability": "mutable",
																	"name": "value",
																	"nameLocation": "1662:5:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 213,
																	"src": "1654:13:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 86,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1654:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 91,
															"initialValue": {
																"baseExpression": {
																	"id": 88,
																	"name": "charMapping",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "1670:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes1_$_t_uint256_$",
																		"typeString": "mapping(bytes1 => uint256)"
																	}
																},
																"id": 90,
																"indexExpression": {
																	"id": 89,
																	"name": "char",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 81,
																	"src": "1682:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1670:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1654:33:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 94,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 92,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 87,
																	"src": "1705:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1714:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1705:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 98,
															"nodeType": "IfStatement",
															"src": "1701:57:0",
															"trueBody": {
																"id": 97,
																"nodeType": "Block",
																"src": "1717:41:0",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "30",
																			"id": 95,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1742:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"functionReturnParameters": 57,
																		"id": 96,
																		"nodeType": "Return",
																		"src": "1735:8:0"
																	}
																]
															}
														},
														{
															"assignments": [
																100
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 100,
																	"mutability": "mutable",
																	"name": "valueNext",
																	"nameLocation": "1779:9:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 213,
																	"src": "1771:17:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 99,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1771:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 102,
															"initialValue": {
																"hexValue": "30",
																"id": 101,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1791:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1771:21:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 103,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 70,
																	"src": "1810:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 107,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 104,
																			"name": "inputBytes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 59,
																			"src": "1814:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1825:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "1814:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 106,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1834:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1814:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1810:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 120,
															"nodeType": "IfStatement",
															"src": "1806:106:0",
															"trueBody": {
																"id": 119,
																"nodeType": "Block",
																"src": "1837:75:0",
																"statements": [
																	{
																		"expression": {
																			"id": 117,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 109,
																				"name": "valueNext",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 100,
																				"src": "1855:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 110,
																					"name": "charMapping",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 5,
																					"src": "1867:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_bytes1_$_t_uint256_$",
																						"typeString": "mapping(bytes1 => uint256)"
																					}
																				},
																				"id": 116,
																				"indexExpression": {
																					"baseExpression": {
																						"id": 111,
																						"name": "inputBytes",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 59,
																						"src": "1879:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					},
																					"id": 115,
																					"indexExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 114,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 112,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 70,
																							"src": "1890:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 113,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1894:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "1890:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "1879:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1867:30:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1855:42:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 118,
																		"nodeType": "ExpressionStatement",
																		"src": "1855:42:0"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 121,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 87,
																	"src": "1930:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 122,
																	"name": "valueNext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 100,
																	"src": "1938:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1930:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 203,
															"nodeType": "IfStatement",
															"src": "1926:885:0",
															"trueBody": {
																"id": 202,
																"nodeType": "Block",
																"src": "1949:862:0",
																"statements": [
																	{
																		"assignments": [
																			125
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 125,
																				"mutability": "mutable",
																				"name": "twoValue",
																				"nameLocation": "1975:8:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 202,
																				"src": "1967:16:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 124,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "1967:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 127,
																		"initialValue": {
																			"hexValue": "30",
																			"id": 126,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1986:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "1967:20:0"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 139,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 130,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 128,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 87,
																					"src": "2070:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 129,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2079:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "2070:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						},
																						"id": 137,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 133,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 131,
																								"name": "valueNext",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 100,
																								"src": "2085:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "==",
																							"rightExpression": {
																								"hexValue": "35",
																								"id": 132,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "2098:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_5_by_1",
																									"typeString": "int_const 5"
																								},
																								"value": "5"
																							},
																							"src": "2085:14:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "||",
																						"rightExpression": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 136,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 134,
																								"name": "valueNext",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 100,
																								"src": "2103:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "==",
																							"rightExpression": {
																								"hexValue": "3130",
																								"id": 135,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "2116:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_10_by_1",
																									"typeString": "int_const 10"
																								},
																								"value": "10"
																							},
																							"src": "2103:15:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"src": "2085:33:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					}
																				],
																				"id": 138,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "2084:35:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "2070:49:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"id": 158,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 149,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 147,
																						"name": "value",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 87,
																						"src": "2279:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "3130",
																						"id": 148,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2288:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"src": "2279:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "&&",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							"id": 156,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 152,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 150,
																									"name": "valueNext",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 100,
																									"src": "2295:9:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "==",
																								"rightExpression": {
																									"hexValue": "3530",
																									"id": 151,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "2308:2:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_50_by_1",
																										"typeString": "int_const 50"
																									},
																									"value": "50"
																								},
																								"src": "2295:15:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "||",
																							"rightExpression": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 155,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 153,
																									"name": "valueNext",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 100,
																									"src": "2314:9:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "==",
																								"rightExpression": {
																									"hexValue": "313030",
																									"id": 154,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "2327:3:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_100_by_1",
																										"typeString": "int_const 100"
																									},
																									"value": "100"
																								},
																								"src": "2314:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							},
																							"src": "2295:35:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						}
																					],
																					"id": 157,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "2294:37:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"src": "2279:52:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseBody": {
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"id": 177,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 168,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 166,
																							"name": "value",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 87,
																							"src": "2514:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "313030",
																							"id": 167,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "2523:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_100_by_1",
																								"typeString": "int_const 100"
																							},
																							"value": "100"
																						},
																						"src": "2514:12:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "&&",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								},
																								"id": 175,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 171,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"id": 169,
																										"name": "valueNext",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 100,
																										"src": "2531:9:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "==",
																									"rightExpression": {
																										"hexValue": "353030",
																										"id": 170,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "2544:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_500_by_1",
																											"typeString": "int_const 500"
																										},
																										"value": "500"
																									},
																									"src": "2531:16:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "||",
																								"rightExpression": {
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 174,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"id": 172,
																										"name": "valueNext",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 100,
																										"src": "2551:9:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "==",
																									"rightExpression": {
																										"hexValue": "31303030",
																										"id": 173,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "2564:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_1000_by_1",
																											"typeString": "int_const 1000"
																										},
																										"value": "1000"
																									},
																									"src": "2551:17:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									}
																								},
																								"src": "2531:37:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							}
																						],
																						"id": 176,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "2530:39:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"src": "2514:55:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 185,
																				"nodeType": "IfStatement",
																				"src": "2489:168:0",
																				"trueBody": {
																					"id": 184,
																					"nodeType": "Block",
																					"src": "2588:69:0",
																					"statements": [
																						{
																							"expression": {
																								"id": 182,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"id": 178,
																									"name": "twoValue",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 125,
																									"src": "2610:8:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 181,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"id": 179,
																										"name": "valueNext",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 100,
																										"src": "2621:9:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "-",
																									"rightExpression": {
																										"id": 180,
																										"name": "value",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 87,
																										"src": "2633:5:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "2621:17:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "2610:28:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 183,
																							"nodeType": "ExpressionStatement",
																							"src": "2610:28:0"
																						}
																					]
																				}
																			},
																			"id": 186,
																			"nodeType": "IfStatement",
																			"src": "2275:382:0",
																			"trueBody": {
																				"id": 165,
																				"nodeType": "Block",
																				"src": "2333:69:0",
																				"statements": [
																					{
																						"expression": {
																							"id": 163,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftHandSide": {
																								"id": 159,
																								"name": "twoValue",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 125,
																								"src": "2355:8:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "Assignment",
																							"operator": "=",
																							"rightHandSide": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 162,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 160,
																									"name": "valueNext",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 100,
																									"src": "2366:9:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"id": 161,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 87,
																									"src": "2378:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "2366:17:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "2355:28:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 164,
																						"nodeType": "ExpressionStatement",
																						"src": "2355:28:0"
																					}
																				]
																			}
																		},
																		"id": 187,
																		"nodeType": "IfStatement",
																		"src": "2066:591:0",
																		"trueBody": {
																			"id": 146,
																			"nodeType": "Block",
																			"src": "2121:69:0",
																			"statements": [
																				{
																					"expression": {
																						"id": 144,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 140,
																							"name": "twoValue",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 125,
																							"src": "2143:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 143,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 141,
																								"name": "valueNext",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 100,
																								"src": "2154:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"id": 142,
																								"name": "value",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 87,
																								"src": "2166:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "2154:17:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "2143:28:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 145,
																					"nodeType": "ExpressionStatement",
																					"src": "2143:28:0"
																				}
																			]
																		}
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 190,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 188,
																				"name": "twoValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 125,
																				"src": "2678:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 189,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2690:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2678:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 194,
																		"nodeType": "IfStatement",
																		"src": "2674:68:0",
																		"trueBody": {
																			"id": 193,
																			"nodeType": "Block",
																			"src": "2693:49:0",
																			"statements": [
																				{
																					"expression": {
																						"hexValue": "30",
																						"id": 191,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2722:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"functionReturnParameters": 57,
																					"id": 192,
																					"nodeType": "Return",
																					"src": "2715:8:0"
																				}
																			]
																		}
																	},
																	{
																		"expression": {
																			"id": 197,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 195,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 87,
																				"src": "2759:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 196,
																				"name": "twoValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 125,
																				"src": "2767:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2759:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 198,
																		"nodeType": "ExpressionStatement",
																		"src": "2759:16:0"
																	},
																	{
																		"expression": {
																			"id": 200,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "2793:3:0",
																			"subExpression": {
																				"id": 199,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 70,
																				"src": "2793:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 201,
																		"nodeType": "ExpressionStatement",
																		"src": "2793:3:0"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 204,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 87,
																	"src": "2828:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2836:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2828:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 212,
															"nodeType": "IfStatement",
															"src": "2824:62:0",
															"trueBody": {
																"id": 211,
																"nodeType": "Block",
																"src": "2839:47:0",
																"statements": [
																	{
																		"expression": {
																			"id": 209,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 207,
																				"name": "total",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 66,
																				"src": "2857:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 208,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 87,
																				"src": "2866:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2857:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 210,
																		"nodeType": "ExpressionStatement",
																		"src": "2857:14:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 73,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 70,
														"src": "1571:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 74,
															"name": "inputBytes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "1575:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1586:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1575:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1571:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 214,
												"initializationExpression": {
													"assignments": [
														70
													],
													"declarations": [
														{
															"constant": false,
															"id": 70,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1564:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 214,
															"src": "1556:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 69,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1556:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 72,
													"initialValue": {
														"hexValue": "30",
														"id": 71,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1568:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1556:13:0"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 78,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1594:3:0",
														"subExpression": {
															"id": 77,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 70,
															"src": "1594:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 79,
													"nodeType": "ExpressionStatement",
													"src": "1594:3:0"
												},
												"nodeType": "ForStatement",
												"src": "1551:1345:0"
											},
											{
												"expression": {
													"id": 215,
													"name": "total",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 66,
													"src": "2912:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 57,
												"id": 216,
												"nodeType": "Return",
												"src": "2905:12:0"
											}
										]
									},
									"functionSelector": "bc62d8d8",
									"id": 218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "parse",
									"nameLocation": "1406:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "input",
												"nameLocation": "1428:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "1412:21:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 52,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1412:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1411:23:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "1456:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1456:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1455:9:0"
									},
									"scope": 219,
									"src": "1397:1527:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 220,
							"src": "1067:1859:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:2895:0"
				},
				"id": 0
			}
		}
	}
}