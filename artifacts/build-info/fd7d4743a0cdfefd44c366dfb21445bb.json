{
	"id": "fd7d4743a0cdfefd44c366dfb21445bb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"task2/question1.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\n// 任务：参考 openzeppelin-contracts/contracts/token/ERC20/IERC20.sol实现一个简单的 ERC20 代币合约。要求：\n// 合约包含以下标准 ERC20 功能：\n// balanceOf：查询账户余额。\n// transfer：转账。\n// approve 和 transferFrom：授权和代扣转账。\n// 使用 event 记录转账和授权操作。\n// 提供 mint 函数，允许合约所有者增发代币。\n\ncontract MyERC20  {\n\n    string private _name;\n    string private _symbol;\n\n    // 所有者地址\n    address public owner;\n    uint256 private totalSupply;\n\n    constructor() {\n        _name=\"MyToken\";\n        _symbol=\"MTK\";\n        owner = msg.sender;\n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == owner,\"only owner can call this function\");\n        _;\n    }\n\n    // 账户余额\n    mapping(address account => uint256) private _balances;\n    // 授权额度\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n    // 日志\n    event TransferLog(address indexed from, address indexed to, uint256 value);\n    event ApprovalLog(address indexed owner, address indexed spender, uint256 value);\n\n    // mint函数\n    function mint(address to, uint256 amount) public onlyOwner {\n        require(to !=address(0),\"receive address error\");\n        require(amount > 0, \"amount must be greater than 0\");\n        _balances[to] += amount;\n        totalSupply += amount;\n    }\n\n\n    // 余额查询函数\n    function balanceOf(address account) public view returns (uint256) {\n        require(account !=address(0),\"receive address error\");\n        return _balances[account];\n    }\n\n    // 转账函数\n    function transfer(address to, uint256 amount) public returns (bool) {\n        // 参数判断\n        require(to !=address(0),\"receive address error\");\n        require(amount > 0,\"amount must greet than 0\");\n\n        // 检查余额\n        uint256 ownerValue = _balances[msg.sender];\n        if (ownerValue < amount) {\n            revert(\"owner balance not enough\");\n        } else {\n            // 扣款\n            _balances[msg.sender] -= amount;\n        }\n        // 转账\n        _balances[to] += amount;\n\n        // 日志\n        emit TransferLog(msg.sender, to, amount);\n        return true;\n    }\n\n    // 授权函数\n    function approve(address spender, uint256 amount)  public returns (bool) {\n        // 参数判断\n        require(spender !=address(0),\"spender address error\");\n        require(amount > 0,\"amount must greet than 0\");\n\n        _allowances[msg.sender][spender] = amount;\n\n        emit ApprovalLog(msg.sender, spender, amount);\n        return true;\n    }\n\n    // 转账函数\n    function transferFrom(address from, address to, uint256 amount) public returns (bool) {\n        // 参数判断\n        require(from !=address(0),\"from address error\");\n        require(to !=address(0),\"to address error\");\n        require(amount > 0,\"amount must greet than 0\");\n        // 授权额度不足\n        require(_allowances[from][msg.sender] >= amount,\"allowance exceeded\");\n\n        // 检查余额\n        uint256 ownerValue = _balances[from];\n        if (ownerValue < amount) {\n            revert(\"owner balance not enough\");\n        } else {\n            // 扣款\n            _balances[from] -= amount;\n        }\n        // 转账\n        _balances[to] += amount;\n        _allowances[from][msg.sender] -= amount;\n\n        // 日志\n        emit TransferLog(from, to, amount);\n        return true;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /// @inheritdoc IERC20\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /// @inheritdoc IERC20\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /// @inheritdoc IERC20\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"task2/question1.sol": {
				"MyERC20": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "ApprovalLog",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferLog",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"task2/question1.sol\":510:3594  contract MyERC20  {... */\n  mstore(0x40, 0x80)\n    /* \"task2/question1.sol\":673:770  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"task2/question1.sol\":697:712  _name=\"MyToken\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x07\n  dup2\n  mstore\n  0x20\n  add\n  0x4d79546f6b656e00000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"task2/question1.sol\":697:702  _name */\n  0x00\n    /* \"task2/question1.sol\":697:712  _name=\"MyToken\" */\n  swap1\n  dup2\n  tag_4\n  swap2\n  swap1\n  tag_5\n  jump\t// in\ntag_4:\n  pop\n    /* \"task2/question1.sol\":722:735  _symbol=\"MTK\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x4d544b0000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"task2/question1.sol\":722:729  _symbol */\n  0x01\n    /* \"task2/question1.sol\":722:735  _symbol=\"MTK\" */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_5\n  jump\t// in\ntag_6:\n  pop\n    /* \"task2/question1.sol\":753:763  msg.sender */\n  caller\n    /* \"task2/question1.sol\":745:750  owner */\n  0x02\n  0x00\n    /* \"task2/question1.sol\":745:763  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"task2/question1.sol\":510:3594  contract MyERC20  {... */\n  jump(tag_7)\n    /* \"#utility.yul\":7:106   */\ntag_8:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_9:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_10:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_11:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_33:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_34\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_35\n  tag_10\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":714:798   */\ntag_34:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_12:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_13:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_14:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_15:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_40\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_14\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1429:1468   */\n  tag_41\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_14\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_16:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_17:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_18:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_45\n    /* \"#utility.yul\":1818:1852   */\n  tag_46\n    /* \"#utility.yul\":1827:1851   */\n  tag_47\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_16\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1818:1852   */\n  tag_17\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1800:1853   */\n  tag_16\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_19:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_20:\n    /* \"#utility.yul\":2056:2095   */\n  tag_50\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_18\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":2117:2208   */\n  tag_51\n    /* \"#utility.yul\":2166:2207   */\n  tag_52\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_19\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_15\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_21:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2287:2288   */\n  0x00\n    /* \"#utility.yul\":2280:2288   */\n  swap1\n  pop\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_22:\n    /* \"#utility.yul\":2377:2409   */\n  tag_55\n  tag_21\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":2418:2483   */\n  tag_56\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_20\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_23:\n    /* \"#utility.yul\":2555:2675   */\ntag_58:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_61\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_22\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_58)\ntag_60:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_24:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_63\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_64\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_12\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":2906:2935   */\n  tag_65\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_13\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_66\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_66:\n    /* \"#utility.yul\":3133:3213   */\n  tag_67\n    /* \"#utility.yul\":3189:3211   */\n  tag_68\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_13\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_23\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_63:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_25:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_26:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_71\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_25\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_27:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_73\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_26\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_5:\n    /* \"#utility.yul\":3950:3987   */\n  tag_75\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_8\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_77\n  tag_9\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":4038:4094   */\ntag_76:\n    /* \"#utility.yul\":4118:4156   */\n  tag_78\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_11\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":4203:4270   */\n  tag_79\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_24\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_81\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_82\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_82:\n    /* \"#utility.yul\":5144:5211   */\n  tag_83\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_27\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_80)\n    /* \"#utility.yul\":4365:4983   */\ntag_81:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_84\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_12\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_85:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_87\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_85)\ntag_87:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_88\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_89\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_26\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_88:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_80:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"task2/question1.sol\":510:3594  contract MyERC20  {... */\ntag_7:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"task2/question1.sol\":510:3594  contract MyERC20  {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"task2/question1.sol\":2396:2748  function approve(address spender, uint256 amount)  public returns (bool) {... */\n    tag_3:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"task2/question1.sol\":2774:3592  function transferFrom(address from, address to, uint256 amount) public returns (bool) {... */\n    tag_4:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"task2/question1.sol\":1282:1532  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_5:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_21:\n      tag_22\n      jump\t// in\n    tag_20:\n      stop\n        /* \"task2/question1.sol\":1565:1736  function balanceOf(address account) public view returns (uint256) {... */\n    tag_6:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"task2/question1.sol\":613:633  address public owner */\n    tag_7:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"task2/question1.sol\":1762:2370  function transfer(address to, uint256 amount) public returns (bool) {... */\n    tag_8:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_34:\n      tag_35\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"task2/question1.sol\":2396:2748  function approve(address spender, uint256 amount)  public returns (bool) {... */\n    tag_12:\n        /* \"task2/question1.sol\":2463:2467  bool */\n      0x00\n        /* \"task2/question1.sol\":2529:2530  0 */\n      0x00\n        /* \"task2/question1.sol\":2511:2531  spender !=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"task2/question1.sol\":2511:2518  spender */\n      dup4\n        /* \"task2/question1.sol\":2511:2531  spender !=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"task2/question1.sol\":2503:2556  require(spender !=address(0),\"spender address error\") */\n      tag_38\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_39\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_38:\n        /* \"task2/question1.sol\":2583:2584  0 */\n      0x00\n        /* \"task2/question1.sol\":2574:2580  amount */\n      dup3\n        /* \"task2/question1.sol\":2574:2584  amount > 0 */\n      gt\n        /* \"task2/question1.sol\":2566:2612  require(amount > 0,\"amount must greet than 0\") */\n      tag_41\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_42\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_41:\n        /* \"task2/question1.sol\":2658:2664  amount */\n      dup2\n        /* \"task2/question1.sol\":2623:2634  _allowances */\n      0x05\n        /* \"task2/question1.sol\":2623:2646  _allowances[msg.sender] */\n      0x00\n        /* \"task2/question1.sol\":2635:2645  msg.sender */\n      caller\n        /* \"task2/question1.sol\":2623:2646  _allowances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"task2/question1.sol\":2623:2655  _allowances[msg.sender][spender] */\n      0x00\n        /* \"task2/question1.sol\":2647:2654  spender */\n      dup6\n        /* \"task2/question1.sol\":2623:2655  _allowances[msg.sender][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"task2/question1.sol\":2623:2664  _allowances[msg.sender][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"task2/question1.sol\":2704:2711  spender */\n      dup3\n        /* \"task2/question1.sol\":2680:2720  ApprovalLog(msg.sender, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"task2/question1.sol\":2692:2702  msg.sender */\n      caller\n        /* \"task2/question1.sol\":2680:2720  ApprovalLog(msg.sender, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x08dffe93edf65c77e66e298bcf7ba5ba81a3f70c8641f098066df4e8ed21e684\n        /* \"task2/question1.sol\":2713:2719  amount */\n      dup5\n        /* \"task2/question1.sol\":2680:2720  ApprovalLog(msg.sender, spender, amount) */\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"task2/question1.sol\":2737:2741  true */\n      0x01\n        /* \"task2/question1.sol\":2730:2741  return true */\n      swap1\n      pop\n        /* \"task2/question1.sol\":2396:2748  function approve(address spender, uint256 amount)  public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"task2/question1.sol\":2774:3592  function transferFrom(address from, address to, uint256 amount) public returns (bool) {... */\n    tag_18:\n        /* \"task2/question1.sol\":2854:2858  bool */\n      0x00\n        /* \"task2/question1.sol\":2917:2918  0 */\n      0x00\n        /* \"task2/question1.sol\":2902:2919  from !=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"task2/question1.sol\":2902:2906  from */\n      dup5\n        /* \"task2/question1.sol\":2902:2919  from !=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"task2/question1.sol\":2894:2941  require(from !=address(0),\"from address error\") */\n      tag_46\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_47\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_46:\n        /* \"task2/question1.sol\":2972:2973  0 */\n      0x00\n        /* \"task2/question1.sol\":2959:2974  to !=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"task2/question1.sol\":2959:2961  to */\n      dup4\n        /* \"task2/question1.sol\":2959:2974  to !=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"task2/question1.sol\":2951:2994  require(to !=address(0),\"to address error\") */\n      tag_49\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_50\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_49:\n        /* \"task2/question1.sol\":3021:3022  0 */\n      0x00\n        /* \"task2/question1.sol\":3012:3018  amount */\n      dup3\n        /* \"task2/question1.sol\":3012:3022  amount > 0 */\n      gt\n        /* \"task2/question1.sol\":3004:3050  require(amount > 0,\"amount must greet than 0\") */\n      tag_52\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_53\n      swap1\n      tag_43\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_52:\n        /* \"task2/question1.sol\":3131:3137  amount */\n      dup2\n        /* \"task2/question1.sol\":3098:3109  _allowances */\n      0x05\n        /* \"task2/question1.sol\":3098:3115  _allowances[from] */\n      0x00\n        /* \"task2/question1.sol\":3110:3114  from */\n      dup7\n        /* \"task2/question1.sol\":3098:3115  _allowances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"task2/question1.sol\":3098:3127  _allowances[from][msg.sender] */\n      0x00\n        /* \"task2/question1.sol\":3116:3126  msg.sender */\n      caller\n        /* \"task2/question1.sol\":3098:3127  _allowances[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"task2/question1.sol\":3098:3137  _allowances[from][msg.sender] >= amount */\n      lt\n      iszero\n        /* \"task2/question1.sol\":3090:3159  require(_allowances[from][msg.sender] >= amount,\"allowance exceeded\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n        /* \"task2/question1.sol\":3194:3212  uint256 ownerValue */\n      0x00\n        /* \"task2/question1.sol\":3215:3224  _balances */\n      0x04\n        /* \"task2/question1.sol\":3215:3230  _balances[from] */\n      0x00\n        /* \"task2/question1.sol\":3225:3229  from */\n      dup7\n        /* \"task2/question1.sol\":3215:3230  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"task2/question1.sol\":3194:3230  uint256 ownerValue = _balances[from] */\n      swap1\n      pop\n        /* \"task2/question1.sol\":3257:3263  amount */\n      dup3\n        /* \"task2/question1.sol\":3244:3254  ownerValue */\n      dup2\n        /* \"task2/question1.sol\":3244:3263  ownerValue < amount */\n      lt\n        /* \"task2/question1.sol\":3240:3402  if (ownerValue < amount) {... */\n      iszero\n      tag_57\n      jumpi\n        /* \"task2/question1.sol\":3279:3313  revert(\"owner balance not enough\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_58\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"task2/question1.sol\":3240:3402  if (ownerValue < amount) {... */\n    tag_57:\n        /* \"task2/question1.sol\":3385:3391  amount */\n      dup3\n        /* \"task2/question1.sol\":3366:3375  _balances */\n      0x04\n        /* \"task2/question1.sol\":3366:3381  _balances[from] */\n      0x00\n        /* \"task2/question1.sol\":3376:3380  from */\n      dup8\n        /* \"task2/question1.sol\":3366:3381  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"task2/question1.sol\":3366:3391  _balances[from] -= amount */\n      dup3\n      dup3\n      sload\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"task2/question1.sol\":3446:3452  amount */\n      dup3\n        /* \"task2/question1.sol\":3429:3438  _balances */\n      0x04\n        /* \"task2/question1.sol\":3429:3442  _balances[to] */\n      0x00\n        /* \"task2/question1.sol\":3439:3441  to */\n      dup7\n        /* \"task2/question1.sol\":3429:3442  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"task2/question1.sol\":3429:3452  _balances[to] += amount */\n      dup3\n      dup3\n      sload\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"task2/question1.sol\":3495:3501  amount */\n      dup3\n        /* \"task2/question1.sol\":3462:3473  _allowances */\n      0x05\n        /* \"task2/question1.sol\":3462:3479  _allowances[from] */\n      0x00\n        /* \"task2/question1.sol\":3474:3478  from */\n      dup8\n        /* \"task2/question1.sol\":3462:3479  _allowances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"task2/question1.sol\":3462:3491  _allowances[from][msg.sender] */\n      0x00\n        /* \"task2/question1.sol\":3480:3490  msg.sender */\n      caller\n        /* \"task2/question1.sol\":3462:3491  _allowances[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"task2/question1.sol\":3462:3501  _allowances[from][msg.sender] -= amount */\n      dup3\n      dup3\n      sload\n      tag_65\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_65:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"task2/question1.sol\":3553:3555  to */\n      dup4\n        /* \"task2/question1.sol\":3535:3564  TransferLog(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"task2/question1.sol\":3547:3551  from */\n      dup6\n        /* \"task2/question1.sol\":3535:3564  TransferLog(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x21425341546d2023146851fb583db9b7c6be5fed0d287293c85a8ede5193c6ea\n        /* \"task2/question1.sol\":3557:3563  amount */\n      dup6\n        /* \"task2/question1.sol\":3535:3564  TransferLog(from, to, amount) */\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"task2/question1.sol\":3581:3585  true */\n      0x01\n        /* \"task2/question1.sol\":3574:3585  return true */\n      swap2\n      pop\n      pop\n        /* \"task2/question1.sol\":2774:3592  function transferFrom(address from, address to, uint256 amount) public returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"task2/question1.sol\":1282:1532  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_22:\n        /* \"task2/question1.sol\":829:834  owner */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"task2/question1.sol\":815:834  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"task2/question1.sol\":815:825  msg.sender */\n      caller\n        /* \"task2/question1.sol\":815:834  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"task2/question1.sol\":807:871  require(msg.sender == owner,\"only owner can call this function\") */\n      tag_68\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_68:\n        /* \"task2/question1.sol\":1372:1373  0 */\n      0x00\n        /* \"task2/question1.sol\":1359:1374  to !=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"task2/question1.sol\":1359:1361  to */\n      dup3\n        /* \"task2/question1.sol\":1359:1374  to !=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"task2/question1.sol\":1351:1399  require(to !=address(0),\"receive address error\") */\n      tag_72\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_73\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_72:\n        /* \"task2/question1.sol\":1426:1427  0 */\n      0x00\n        /* \"task2/question1.sol\":1417:1423  amount */\n      dup2\n        /* \"task2/question1.sol\":1417:1427  amount > 0 */\n      gt\n        /* \"task2/question1.sol\":1409:1461  require(amount > 0, \"amount must be greater than 0\") */\n      tag_75\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_76\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_75:\n        /* \"task2/question1.sol\":1488:1494  amount */\n      dup1\n        /* \"task2/question1.sol\":1471:1480  _balances */\n      0x04\n        /* \"task2/question1.sol\":1471:1484  _balances[to] */\n      0x00\n        /* \"task2/question1.sol\":1481:1483  to */\n      dup5\n        /* \"task2/question1.sol\":1471:1484  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"task2/question1.sol\":1471:1494  _balances[to] += amount */\n      dup3\n      dup3\n      sload\n      tag_78\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_78:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"task2/question1.sol\":1519:1525  amount */\n      dup1\n        /* \"task2/question1.sol\":1504:1515  totalSupply */\n      0x03\n      0x00\n        /* \"task2/question1.sol\":1504:1525  totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_79\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_79:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"task2/question1.sol\":1282:1532  function mint(address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"task2/question1.sol\":1565:1736  function balanceOf(address account) public view returns (uint256) {... */\n    tag_26:\n        /* \"task2/question1.sol\":1622:1629  uint256 */\n      0x00\n        /* \"task2/question1.sol\":1667:1668  0 */\n      0x00\n        /* \"task2/question1.sol\":1649:1669  account !=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"task2/question1.sol\":1649:1656  account */\n      dup3\n        /* \"task2/question1.sol\":1649:1669  account !=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"task2/question1.sol\":1641:1694  require(account !=address(0),\"receive address error\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_74\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_81:\n        /* \"task2/question1.sol\":1711:1720  _balances */\n      0x04\n        /* \"task2/question1.sol\":1711:1729  _balances[account] */\n      0x00\n        /* \"task2/question1.sol\":1721:1728  account */\n      dup4\n        /* \"task2/question1.sol\":1711:1729  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"task2/question1.sol\":1704:1729  return _balances[account] */\n      swap1\n      pop\n        /* \"task2/question1.sol\":1565:1736  function balanceOf(address account) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"task2/question1.sol\":613:633  address public owner */\n    tag_30:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"task2/question1.sol\":1762:2370  function transfer(address to, uint256 amount) public returns (bool) {... */\n    tag_35:\n        /* \"task2/question1.sol\":1824:1828  bool */\n      0x00\n        /* \"task2/question1.sol\":1885:1886  0 */\n      0x00\n        /* \"task2/question1.sol\":1872:1887  to !=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"task2/question1.sol\":1872:1874  to */\n      dup4\n        /* \"task2/question1.sol\":1872:1887  to !=address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"task2/question1.sol\":1864:1912  require(to !=address(0),\"receive address error\") */\n      tag_84\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap1\n      tag_74\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_84:\n        /* \"task2/question1.sol\":1939:1940  0 */\n      0x00\n        /* \"task2/question1.sol\":1930:1936  amount */\n      dup3\n        /* \"task2/question1.sol\":1930:1940  amount > 0 */\n      gt\n        /* \"task2/question1.sol\":1922:1968  require(amount > 0,\"amount must greet than 0\") */\n      tag_86\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_87\n      swap1\n      tag_43\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_86:\n        /* \"task2/question1.sol\":2003:2021  uint256 ownerValue */\n      0x00\n        /* \"task2/question1.sol\":2024:2033  _balances */\n      0x04\n        /* \"task2/question1.sol\":2024:2045  _balances[msg.sender] */\n      0x00\n        /* \"task2/question1.sol\":2034:2044  msg.sender */\n      caller\n        /* \"task2/question1.sol\":2024:2045  _balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"task2/question1.sol\":2003:2045  uint256 ownerValue = _balances[msg.sender] */\n      swap1\n      pop\n        /* \"task2/question1.sol\":2072:2078  amount */\n      dup3\n        /* \"task2/question1.sol\":2059:2069  ownerValue */\n      dup2\n        /* \"task2/question1.sol\":2059:2078  ownerValue < amount */\n      lt\n        /* \"task2/question1.sol\":2055:2223  if (ownerValue < amount) {... */\n      iszero\n      tag_88\n      jumpi\n        /* \"task2/question1.sol\":2094:2128  revert(\"owner balance not enough\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap1\n      tag_59\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"task2/question1.sol\":2055:2223  if (ownerValue < amount) {... */\n    tag_88:\n        /* \"task2/question1.sol\":2206:2212  amount */\n      dup3\n        /* \"task2/question1.sol\":2181:2190  _balances */\n      0x04\n        /* \"task2/question1.sol\":2181:2202  _balances[msg.sender] */\n      0x00\n        /* \"task2/question1.sol\":2191:2201  msg.sender */\n      caller\n        /* \"task2/question1.sol\":2181:2202  _balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"task2/question1.sol\":2181:2212  _balances[msg.sender] -= amount */\n      dup3\n      dup3\n      sload\n      tag_91\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_91:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"task2/question1.sol\":2267:2273  amount */\n      dup3\n        /* \"task2/question1.sol\":2250:2259  _balances */\n      0x04\n        /* \"task2/question1.sol\":2250:2263  _balances[to] */\n      0x00\n        /* \"task2/question1.sol\":2260:2262  to */\n      dup7\n        /* \"task2/question1.sol\":2250:2263  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"task2/question1.sol\":2250:2273  _balances[to] += amount */\n      dup3\n      dup3\n      sload\n      tag_92\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_92:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"task2/question1.sol\":2331:2333  to */\n      dup4\n        /* \"task2/question1.sol\":2307:2342  TransferLog(msg.sender, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"task2/question1.sol\":2319:2329  msg.sender */\n      caller\n        /* \"task2/question1.sol\":2307:2342  TransferLog(msg.sender, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x21425341546d2023146851fb583db9b7c6be5fed0d287293c85a8ede5193c6ea\n        /* \"task2/question1.sol\":2335:2341  amount */\n      dup6\n        /* \"task2/question1.sol\":2307:2342  TransferLog(msg.sender, to, amount) */\n      mload(0x40)\n      tag_93\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"task2/question1.sol\":2359:2363  true */\n      0x01\n        /* \"task2/question1.sol\":2352:2363  return true */\n      swap2\n      pop\n      pop\n        /* \"task2/question1.sol\":1762:2370  function transfer(address to, uint256 amount) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_95:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_97:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_98:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_134\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_97\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_99:\n        /* \"#utility.yul\":641:665   */\n      tag_136\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_98\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_137\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_137:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_100:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_139\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_99\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_101:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_102:\n        /* \"#utility.yul\":997:1021   */\n      tag_142\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_101\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_143\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      0x00\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_143:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_103:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_145\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_102\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_11:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      0x00\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_148\n      tag_95\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":1290:1409   */\n    tag_147:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_149\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_100\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_150\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_103\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1767   */\n    tag_104:\n        /* \"#utility.yul\":1711:1718   */\n      0x00\n        /* \"#utility.yul\":1754:1759   */\n      dup2\n        /* \"#utility.yul\":1747:1760   */\n      iszero\n        /* \"#utility.yul\":1740:1761   */\n      iszero\n        /* \"#utility.yul\":1729:1761   */\n      swap1\n      pop\n        /* \"#utility.yul\":1677:1767   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1773:1882   */\n    tag_105:\n        /* \"#utility.yul\":1854:1875   */\n      tag_153\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1854:1875   */\n      tag_104\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":1849:1852   */\n      dup3\n        /* \"#utility.yul\":1842:1876   */\n      mstore\n        /* \"#utility.yul\":1773:1882   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1888:2098   */\n    tag_14:\n        /* \"#utility.yul\":1975:1979   */\n      0x00\n        /* \"#utility.yul\":2013:2015   */\n      0x20\n        /* \"#utility.yul\":2002:2011   */\n      dup3\n        /* \"#utility.yul\":1998:2016   */\n      add\n        /* \"#utility.yul\":1990:2016   */\n      swap1\n      pop\n        /* \"#utility.yul\":2026:2091   */\n      tag_155\n        /* \"#utility.yul\":2088:2089   */\n      0x00\n        /* \"#utility.yul\":2077:2086   */\n      dup4\n        /* \"#utility.yul\":2073:2090   */\n      add\n        /* \"#utility.yul\":2064:2070   */\n      dup5\n        /* \"#utility.yul\":2026:2091   */\n      tag_105\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":1888:2098   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2104:2723   */\n    tag_17:\n        /* \"#utility.yul\":2181:2187   */\n      0x00\n        /* \"#utility.yul\":2189:2195   */\n      0x00\n        /* \"#utility.yul\":2197:2203   */\n      0x00\n        /* \"#utility.yul\":2246:2248   */\n      0x60\n        /* \"#utility.yul\":2234:2243   */\n      dup5\n        /* \"#utility.yul\":2225:2232   */\n      dup7\n        /* \"#utility.yul\":2221:2244   */\n      sub\n        /* \"#utility.yul\":2217:2249   */\n      slt\n        /* \"#utility.yul\":2214:2333   */\n      iszero\n      tag_157\n      jumpi\n        /* \"#utility.yul\":2252:2331   */\n      tag_158\n      tag_95\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":2214:2333   */\n    tag_157:\n        /* \"#utility.yul\":2372:2373   */\n      0x00\n        /* \"#utility.yul\":2397:2450   */\n      tag_159\n        /* \"#utility.yul\":2442:2449   */\n      dup7\n        /* \"#utility.yul\":2433:2439   */\n      dup3\n        /* \"#utility.yul\":2422:2431   */\n      dup8\n        /* \"#utility.yul\":2418:2440   */\n      add\n        /* \"#utility.yul\":2397:2450   */\n      tag_100\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":2387:2450   */\n      swap4\n      pop\n        /* \"#utility.yul\":2343:2460   */\n      pop\n        /* \"#utility.yul\":2499:2501   */\n      0x20\n        /* \"#utility.yul\":2525:2578   */\n      tag_160\n        /* \"#utility.yul\":2570:2577   */\n      dup7\n        /* \"#utility.yul\":2561:2567   */\n      dup3\n        /* \"#utility.yul\":2550:2559   */\n      dup8\n        /* \"#utility.yul\":2546:2568   */\n      add\n        /* \"#utility.yul\":2525:2578   */\n      tag_100\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":2515:2578   */\n      swap3\n      pop\n        /* \"#utility.yul\":2470:2588   */\n      pop\n        /* \"#utility.yul\":2627:2629   */\n      0x40\n        /* \"#utility.yul\":2653:2706   */\n      tag_161\n        /* \"#utility.yul\":2698:2705   */\n      dup7\n        /* \"#utility.yul\":2689:2695   */\n      dup3\n        /* \"#utility.yul\":2678:2687   */\n      dup8\n        /* \"#utility.yul\":2674:2696   */\n      add\n        /* \"#utility.yul\":2653:2706   */\n      tag_103\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":2643:2706   */\n      swap2\n      pop\n        /* \"#utility.yul\":2598:2716   */\n      pop\n        /* \"#utility.yul\":2104:2723   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2729:3058   */\n    tag_25:\n        /* \"#utility.yul\":2788:2794   */\n      0x00\n        /* \"#utility.yul\":2837:2839   */\n      0x20\n        /* \"#utility.yul\":2825:2834   */\n      dup3\n        /* \"#utility.yul\":2816:2823   */\n      dup5\n        /* \"#utility.yul\":2812:2835   */\n      sub\n        /* \"#utility.yul\":2808:2840   */\n      slt\n        /* \"#utility.yul\":2805:2924   */\n      iszero\n      tag_163\n      jumpi\n        /* \"#utility.yul\":2843:2922   */\n      tag_164\n      tag_95\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":2805:2924   */\n    tag_163:\n        /* \"#utility.yul\":2963:2964   */\n      0x00\n        /* \"#utility.yul\":2988:3041   */\n      tag_165\n        /* \"#utility.yul\":3033:3040   */\n      dup5\n        /* \"#utility.yul\":3024:3030   */\n      dup3\n        /* \"#utility.yul\":3013:3022   */\n      dup6\n        /* \"#utility.yul\":3009:3031   */\n      add\n        /* \"#utility.yul\":2988:3041   */\n      tag_100\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":2978:3041   */\n      swap2\n      pop\n        /* \"#utility.yul\":2934:3051   */\n      pop\n        /* \"#utility.yul\":2729:3058   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3064:3182   */\n    tag_106:\n        /* \"#utility.yul\":3151:3175   */\n      tag_167\n        /* \"#utility.yul\":3169:3174   */\n      dup2\n        /* \"#utility.yul\":3151:3175   */\n      tag_101\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":3146:3149   */\n      dup3\n        /* \"#utility.yul\":3139:3176   */\n      mstore\n        /* \"#utility.yul\":3064:3182   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3188:3410   */\n    tag_28:\n        /* \"#utility.yul\":3281:3285   */\n      0x00\n        /* \"#utility.yul\":3319:3321   */\n      0x20\n        /* \"#utility.yul\":3308:3317   */\n      dup3\n        /* \"#utility.yul\":3304:3322   */\n      add\n        /* \"#utility.yul\":3296:3322   */\n      swap1\n      pop\n        /* \"#utility.yul\":3332:3403   */\n      tag_169\n        /* \"#utility.yul\":3400:3401   */\n      0x00\n        /* \"#utility.yul\":3389:3398   */\n      dup4\n        /* \"#utility.yul\":3385:3402   */\n      add\n        /* \"#utility.yul\":3376:3382   */\n      dup5\n        /* \"#utility.yul\":3332:3403   */\n      tag_106\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":3188:3410   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3416:3534   */\n    tag_107:\n        /* \"#utility.yul\":3503:3527   */\n      tag_171\n        /* \"#utility.yul\":3521:3526   */\n      dup2\n        /* \"#utility.yul\":3503:3527   */\n      tag_98\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":3498:3501   */\n      dup3\n        /* \"#utility.yul\":3491:3528   */\n      mstore\n        /* \"#utility.yul\":3416:3534   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3540:3762   */\n    tag_32:\n        /* \"#utility.yul\":3633:3637   */\n      0x00\n        /* \"#utility.yul\":3671:3673   */\n      0x20\n        /* \"#utility.yul\":3660:3669   */\n      dup3\n        /* \"#utility.yul\":3656:3674   */\n      add\n        /* \"#utility.yul\":3648:3674   */\n      swap1\n      pop\n        /* \"#utility.yul\":3684:3755   */\n      tag_173\n        /* \"#utility.yul\":3752:3753   */\n      0x00\n        /* \"#utility.yul\":3741:3750   */\n      dup4\n        /* \"#utility.yul\":3737:3754   */\n      add\n        /* \"#utility.yul\":3728:3734   */\n      dup5\n        /* \"#utility.yul\":3684:3755   */\n      tag_107\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":3540:3762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3768:3937   */\n    tag_108:\n        /* \"#utility.yul\":3852:3863   */\n      0x00\n        /* \"#utility.yul\":3886:3892   */\n      dup3\n        /* \"#utility.yul\":3881:3884   */\n      dup3\n        /* \"#utility.yul\":3874:3893   */\n      mstore\n        /* \"#utility.yul\":3926:3930   */\n      0x20\n        /* \"#utility.yul\":3921:3924   */\n      dup3\n        /* \"#utility.yul\":3917:3931   */\n      add\n        /* \"#utility.yul\":3902:3931   */\n      swap1\n      pop\n        /* \"#utility.yul\":3768:3937   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3943:4114   */\n    tag_109:\n        /* \"#utility.yul\":4083:4106   */\n      0x7370656e6465722061646472657373206572726f720000000000000000000000\n        /* \"#utility.yul\":4079:4080   */\n      0x00\n        /* \"#utility.yul\":4071:4077   */\n      dup3\n        /* \"#utility.yul\":4067:4081   */\n      add\n        /* \"#utility.yul\":4060:4107   */\n      mstore\n        /* \"#utility.yul\":3943:4114   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4120:4486   */\n    tag_110:\n        /* \"#utility.yul\":4262:4265   */\n      0x00\n        /* \"#utility.yul\":4283:4350   */\n      tag_177\n        /* \"#utility.yul\":4347:4349   */\n      0x15\n        /* \"#utility.yul\":4342:4345   */\n      dup4\n        /* \"#utility.yul\":4283:4350   */\n      tag_108\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":4276:4350   */\n      swap2\n      pop\n        /* \"#utility.yul\":4359:4452   */\n      tag_178\n        /* \"#utility.yul\":4448:4451   */\n      dup3\n        /* \"#utility.yul\":4359:4452   */\n      tag_109\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":4477:4479   */\n      0x20\n        /* \"#utility.yul\":4472:4475   */\n      dup3\n        /* \"#utility.yul\":4468:4480   */\n      add\n        /* \"#utility.yul\":4461:4480   */\n      swap1\n      pop\n        /* \"#utility.yul\":4120:4486   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4492:4911   */\n    tag_40:\n        /* \"#utility.yul\":4658:4662   */\n      0x00\n        /* \"#utility.yul\":4696:4698   */\n      0x20\n        /* \"#utility.yul\":4685:4694   */\n      dup3\n        /* \"#utility.yul\":4681:4699   */\n      add\n        /* \"#utility.yul\":4673:4699   */\n      swap1\n      pop\n        /* \"#utility.yul\":4745:4754   */\n      dup2\n        /* \"#utility.yul\":4739:4743   */\n      dup2\n        /* \"#utility.yul\":4735:4755   */\n      sub\n        /* \"#utility.yul\":4731:4732   */\n      0x00\n        /* \"#utility.yul\":4720:4729   */\n      dup4\n        /* \"#utility.yul\":4716:4733   */\n      add\n        /* \"#utility.yul\":4709:4756   */\n      mstore\n        /* \"#utility.yul\":4773:4904   */\n      tag_180\n        /* \"#utility.yul\":4899:4903   */\n      dup2\n        /* \"#utility.yul\":4773:4904   */\n      tag_110\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":4765:4904   */\n      swap1\n      pop\n        /* \"#utility.yul\":4492:4911   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4917:5091   */\n    tag_111:\n        /* \"#utility.yul\":5057:5083   */\n      0x616d6f756e74206d757374206772656574207468616e20300000000000000000\n        /* \"#utility.yul\":5053:5054   */\n      0x00\n        /* \"#utility.yul\":5045:5051   */\n      dup3\n        /* \"#utility.yul\":5041:5055   */\n      add\n        /* \"#utility.yul\":5034:5084   */\n      mstore\n        /* \"#utility.yul\":4917:5091   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5097:5463   */\n    tag_112:\n        /* \"#utility.yul\":5239:5242   */\n      0x00\n        /* \"#utility.yul\":5260:5327   */\n      tag_183\n        /* \"#utility.yul\":5324:5326   */\n      0x18\n        /* \"#utility.yul\":5319:5322   */\n      dup4\n        /* \"#utility.yul\":5260:5327   */\n      tag_108\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":5253:5327   */\n      swap2\n      pop\n        /* \"#utility.yul\":5336:5429   */\n      tag_184\n        /* \"#utility.yul\":5425:5428   */\n      dup3\n        /* \"#utility.yul\":5336:5429   */\n      tag_111\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":5454:5456   */\n      0x20\n        /* \"#utility.yul\":5449:5452   */\n      dup3\n        /* \"#utility.yul\":5445:5457   */\n      add\n        /* \"#utility.yul\":5438:5457   */\n      swap1\n      pop\n        /* \"#utility.yul\":5097:5463   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5469:5888   */\n    tag_43:\n        /* \"#utility.yul\":5635:5639   */\n      0x00\n        /* \"#utility.yul\":5673:5675   */\n      0x20\n        /* \"#utility.yul\":5662:5671   */\n      dup3\n        /* \"#utility.yul\":5658:5676   */\n      add\n        /* \"#utility.yul\":5650:5676   */\n      swap1\n      pop\n        /* \"#utility.yul\":5722:5731   */\n      dup2\n        /* \"#utility.yul\":5716:5720   */\n      dup2\n        /* \"#utility.yul\":5712:5732   */\n      sub\n        /* \"#utility.yul\":5708:5709   */\n      0x00\n        /* \"#utility.yul\":5697:5706   */\n      dup4\n        /* \"#utility.yul\":5693:5710   */\n      add\n        /* \"#utility.yul\":5686:5733   */\n      mstore\n        /* \"#utility.yul\":5750:5881   */\n      tag_186\n        /* \"#utility.yul\":5876:5880   */\n      dup2\n        /* \"#utility.yul\":5750:5881   */\n      tag_112\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":5742:5881   */\n      swap1\n      pop\n        /* \"#utility.yul\":5469:5888   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5894:6062   */\n    tag_113:\n        /* \"#utility.yul\":6034:6054   */\n      0x66726f6d2061646472657373206572726f720000000000000000000000000000\n        /* \"#utility.yul\":6030:6031   */\n      0x00\n        /* \"#utility.yul\":6022:6028   */\n      dup3\n        /* \"#utility.yul\":6018:6032   */\n      add\n        /* \"#utility.yul\":6011:6055   */\n      mstore\n        /* \"#utility.yul\":5894:6062   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6068:6434   */\n    tag_114:\n        /* \"#utility.yul\":6210:6213   */\n      0x00\n        /* \"#utility.yul\":6231:6298   */\n      tag_189\n        /* \"#utility.yul\":6295:6297   */\n      0x12\n        /* \"#utility.yul\":6290:6293   */\n      dup4\n        /* \"#utility.yul\":6231:6298   */\n      tag_108\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":6224:6298   */\n      swap2\n      pop\n        /* \"#utility.yul\":6307:6400   */\n      tag_190\n        /* \"#utility.yul\":6396:6399   */\n      dup3\n        /* \"#utility.yul\":6307:6400   */\n      tag_113\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":6425:6427   */\n      0x20\n        /* \"#utility.yul\":6420:6423   */\n      dup3\n        /* \"#utility.yul\":6416:6428   */\n      add\n        /* \"#utility.yul\":6409:6428   */\n      swap1\n      pop\n        /* \"#utility.yul\":6068:6434   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6440:6859   */\n    tag_48:\n        /* \"#utility.yul\":6606:6610   */\n      0x00\n        /* \"#utility.yul\":6644:6646   */\n      0x20\n        /* \"#utility.yul\":6633:6642   */\n      dup3\n        /* \"#utility.yul\":6629:6647   */\n      add\n        /* \"#utility.yul\":6621:6647   */\n      swap1\n      pop\n        /* \"#utility.yul\":6693:6702   */\n      dup2\n        /* \"#utility.yul\":6687:6691   */\n      dup2\n        /* \"#utility.yul\":6683:6703   */\n      sub\n        /* \"#utility.yul\":6679:6680   */\n      0x00\n        /* \"#utility.yul\":6668:6677   */\n      dup4\n        /* \"#utility.yul\":6664:6681   */\n      add\n        /* \"#utility.yul\":6657:6704   */\n      mstore\n        /* \"#utility.yul\":6721:6852   */\n      tag_192\n        /* \"#utility.yul\":6847:6851   */\n      dup2\n        /* \"#utility.yul\":6721:6852   */\n      tag_114\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":6713:6852   */\n      swap1\n      pop\n        /* \"#utility.yul\":6440:6859   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6865:7031   */\n    tag_115:\n        /* \"#utility.yul\":7005:7023   */\n      0x746f2061646472657373206572726f7200000000000000000000000000000000\n        /* \"#utility.yul\":7001:7002   */\n      0x00\n        /* \"#utility.yul\":6993:6999   */\n      dup3\n        /* \"#utility.yul\":6989:7003   */\n      add\n        /* \"#utility.yul\":6982:7024   */\n      mstore\n        /* \"#utility.yul\":6865:7031   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7037:7403   */\n    tag_116:\n        /* \"#utility.yul\":7179:7182   */\n      0x00\n        /* \"#utility.yul\":7200:7267   */\n      tag_195\n        /* \"#utility.yul\":7264:7266   */\n      0x10\n        /* \"#utility.yul\":7259:7262   */\n      dup4\n        /* \"#utility.yul\":7200:7267   */\n      tag_108\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":7193:7267   */\n      swap2\n      pop\n        /* \"#utility.yul\":7276:7369   */\n      tag_196\n        /* \"#utility.yul\":7365:7368   */\n      dup3\n        /* \"#utility.yul\":7276:7369   */\n      tag_115\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":7394:7396   */\n      0x20\n        /* \"#utility.yul\":7389:7392   */\n      dup3\n        /* \"#utility.yul\":7385:7397   */\n      add\n        /* \"#utility.yul\":7378:7397   */\n      swap1\n      pop\n        /* \"#utility.yul\":7037:7403   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7409:7828   */\n    tag_51:\n        /* \"#utility.yul\":7575:7579   */\n      0x00\n        /* \"#utility.yul\":7613:7615   */\n      0x20\n        /* \"#utility.yul\":7602:7611   */\n      dup3\n        /* \"#utility.yul\":7598:7616   */\n      add\n        /* \"#utility.yul\":7590:7616   */\n      swap1\n      pop\n        /* \"#utility.yul\":7662:7671   */\n      dup2\n        /* \"#utility.yul\":7656:7660   */\n      dup2\n        /* \"#utility.yul\":7652:7672   */\n      sub\n        /* \"#utility.yul\":7648:7649   */\n      0x00\n        /* \"#utility.yul\":7637:7646   */\n      dup4\n        /* \"#utility.yul\":7633:7650   */\n      add\n        /* \"#utility.yul\":7626:7673   */\n      mstore\n        /* \"#utility.yul\":7690:7821   */\n      tag_198\n        /* \"#utility.yul\":7816:7820   */\n      dup2\n        /* \"#utility.yul\":7690:7821   */\n      tag_116\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":7682:7821   */\n      swap1\n      pop\n        /* \"#utility.yul\":7409:7828   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7834:8002   */\n    tag_117:\n        /* \"#utility.yul\":7974:7994   */\n      0x616c6c6f77616e63652065786365656465640000000000000000000000000000\n        /* \"#utility.yul\":7970:7971   */\n      0x00\n        /* \"#utility.yul\":7962:7968   */\n      dup3\n        /* \"#utility.yul\":7958:7972   */\n      add\n        /* \"#utility.yul\":7951:7995   */\n      mstore\n        /* \"#utility.yul\":7834:8002   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8008:8374   */\n    tag_118:\n        /* \"#utility.yul\":8150:8153   */\n      0x00\n        /* \"#utility.yul\":8171:8238   */\n      tag_201\n        /* \"#utility.yul\":8235:8237   */\n      0x12\n        /* \"#utility.yul\":8230:8233   */\n      dup4\n        /* \"#utility.yul\":8171:8238   */\n      tag_108\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":8164:8238   */\n      swap2\n      pop\n        /* \"#utility.yul\":8247:8340   */\n      tag_202\n        /* \"#utility.yul\":8336:8339   */\n      dup3\n        /* \"#utility.yul\":8247:8340   */\n      tag_117\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":8365:8367   */\n      0x20\n        /* \"#utility.yul\":8360:8363   */\n      dup3\n        /* \"#utility.yul\":8356:8368   */\n      add\n        /* \"#utility.yul\":8349:8368   */\n      swap1\n      pop\n        /* \"#utility.yul\":8008:8374   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8380:8799   */\n    tag_56:\n        /* \"#utility.yul\":8546:8550   */\n      0x00\n        /* \"#utility.yul\":8584:8586   */\n      0x20\n        /* \"#utility.yul\":8573:8582   */\n      dup3\n        /* \"#utility.yul\":8569:8587   */\n      add\n        /* \"#utility.yul\":8561:8587   */\n      swap1\n      pop\n        /* \"#utility.yul\":8633:8642   */\n      dup2\n        /* \"#utility.yul\":8627:8631   */\n      dup2\n        /* \"#utility.yul\":8623:8643   */\n      sub\n        /* \"#utility.yul\":8619:8620   */\n      0x00\n        /* \"#utility.yul\":8608:8617   */\n      dup4\n        /* \"#utility.yul\":8604:8621   */\n      add\n        /* \"#utility.yul\":8597:8644   */\n      mstore\n        /* \"#utility.yul\":8661:8792   */\n      tag_204\n        /* \"#utility.yul\":8787:8791   */\n      dup2\n        /* \"#utility.yul\":8661:8792   */\n      tag_118\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":8653:8792   */\n      swap1\n      pop\n        /* \"#utility.yul\":8380:8799   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8805:8979   */\n    tag_119:\n        /* \"#utility.yul\":8945:8971   */\n      0x6f776e65722062616c616e6365206e6f7420656e6f7567680000000000000000\n        /* \"#utility.yul\":8941:8942   */\n      0x00\n        /* \"#utility.yul\":8933:8939   */\n      dup3\n        /* \"#utility.yul\":8929:8943   */\n      add\n        /* \"#utility.yul\":8922:8972   */\n      mstore\n        /* \"#utility.yul\":8805:8979   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8985:9351   */\n    tag_120:\n        /* \"#utility.yul\":9127:9130   */\n      0x00\n        /* \"#utility.yul\":9148:9215   */\n      tag_207\n        /* \"#utility.yul\":9212:9214   */\n      0x18\n        /* \"#utility.yul\":9207:9210   */\n      dup4\n        /* \"#utility.yul\":9148:9215   */\n      tag_108\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":9141:9215   */\n      swap2\n      pop\n        /* \"#utility.yul\":9224:9317   */\n      tag_208\n        /* \"#utility.yul\":9313:9316   */\n      dup3\n        /* \"#utility.yul\":9224:9317   */\n      tag_119\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":9342:9344   */\n      0x20\n        /* \"#utility.yul\":9337:9340   */\n      dup3\n        /* \"#utility.yul\":9333:9345   */\n      add\n        /* \"#utility.yul\":9326:9345   */\n      swap1\n      pop\n        /* \"#utility.yul\":8985:9351   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9357:9776   */\n    tag_59:\n        /* \"#utility.yul\":9523:9527   */\n      0x00\n        /* \"#utility.yul\":9561:9563   */\n      0x20\n        /* \"#utility.yul\":9550:9559   */\n      dup3\n        /* \"#utility.yul\":9546:9564   */\n      add\n        /* \"#utility.yul\":9538:9564   */\n      swap1\n      pop\n        /* \"#utility.yul\":9610:9619   */\n      dup2\n        /* \"#utility.yul\":9604:9608   */\n      dup2\n        /* \"#utility.yul\":9600:9620   */\n      sub\n        /* \"#utility.yul\":9596:9597   */\n      0x00\n        /* \"#utility.yul\":9585:9594   */\n      dup4\n        /* \"#utility.yul\":9581:9598   */\n      add\n        /* \"#utility.yul\":9574:9621   */\n      mstore\n        /* \"#utility.yul\":9638:9769   */\n      tag_210\n        /* \"#utility.yul\":9764:9768   */\n      dup2\n        /* \"#utility.yul\":9638:9769   */\n      tag_120\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":9630:9769   */\n      swap1\n      pop\n        /* \"#utility.yul\":9357:9776   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9782:9962   */\n    tag_121:\n        /* \"#utility.yul\":9830:9907   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9827:9828   */\n      0x00\n        /* \"#utility.yul\":9820:9908   */\n      mstore\n        /* \"#utility.yul\":9927:9931   */\n      0x11\n        /* \"#utility.yul\":9924:9925   */\n      0x04\n        /* \"#utility.yul\":9917:9932   */\n      mstore\n        /* \"#utility.yul\":9951:9955   */\n      0x24\n        /* \"#utility.yul\":9948:9949   */\n      0x00\n        /* \"#utility.yul\":9941:9956   */\n      revert\n        /* \"#utility.yul\":9968:10162   */\n    tag_62:\n        /* \"#utility.yul\":10008:10012   */\n      0x00\n        /* \"#utility.yul\":10028:10048   */\n      tag_213\n        /* \"#utility.yul\":10046:10047   */\n      dup3\n        /* \"#utility.yul\":10028:10048   */\n      tag_101\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":10023:10048   */\n      swap2\n      pop\n        /* \"#utility.yul\":10062:10082   */\n      tag_214\n        /* \"#utility.yul\":10080:10081   */\n      dup4\n        /* \"#utility.yul\":10062:10082   */\n      tag_101\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":10057:10082   */\n      swap3\n      pop\n        /* \"#utility.yul\":10106:10107   */\n      dup3\n        /* \"#utility.yul\":10103:10104   */\n      dup3\n        /* \"#utility.yul\":10099:10108   */\n      sub\n        /* \"#utility.yul\":10091:10108   */\n      swap1\n      pop\n        /* \"#utility.yul\":10130:10131   */\n      dup2\n        /* \"#utility.yul\":10124:10128   */\n      dup2\n        /* \"#utility.yul\":10121:10132   */\n      gt\n        /* \"#utility.yul\":10118:10155   */\n      iszero\n      tag_215\n      jumpi\n        /* \"#utility.yul\":10135:10153   */\n      tag_216\n      tag_121\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":10118:10155   */\n    tag_215:\n        /* \"#utility.yul\":9968:10162   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10168:10359   */\n    tag_64:\n        /* \"#utility.yul\":10208:10211   */\n      0x00\n        /* \"#utility.yul\":10227:10247   */\n      tag_218\n        /* \"#utility.yul\":10245:10246   */\n      dup3\n        /* \"#utility.yul\":10227:10247   */\n      tag_101\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":10222:10247   */\n      swap2\n      pop\n        /* \"#utility.yul\":10261:10281   */\n      tag_219\n        /* \"#utility.yul\":10279:10280   */\n      dup4\n        /* \"#utility.yul\":10261:10281   */\n      tag_101\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":10256:10281   */\n      swap3\n      pop\n        /* \"#utility.yul\":10304:10305   */\n      dup3\n        /* \"#utility.yul\":10301:10302   */\n      dup3\n        /* \"#utility.yul\":10297:10306   */\n      add\n        /* \"#utility.yul\":10290:10306   */\n      swap1\n      pop\n        /* \"#utility.yul\":10325:10328   */\n      dup1\n        /* \"#utility.yul\":10322:10323   */\n      dup3\n        /* \"#utility.yul\":10319:10329   */\n      gt\n        /* \"#utility.yul\":10316:10352   */\n      iszero\n      tag_220\n      jumpi\n        /* \"#utility.yul\":10332:10350   */\n      tag_221\n      tag_121\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":10316:10352   */\n    tag_220:\n        /* \"#utility.yul\":10168:10359   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10365:10585   */\n    tag_122:\n        /* \"#utility.yul\":10505:10539   */\n      0x6f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f\n        /* \"#utility.yul\":10501:10502   */\n      0x00\n        /* \"#utility.yul\":10493:10499   */\n      dup3\n        /* \"#utility.yul\":10489:10503   */\n      add\n        /* \"#utility.yul\":10482:10540   */\n      mstore\n        /* \"#utility.yul\":10574:10577   */\n      0x6e00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10569:10571   */\n      0x20\n        /* \"#utility.yul\":10561:10567   */\n      dup3\n        /* \"#utility.yul\":10557:10572   */\n      add\n        /* \"#utility.yul\":10550:10578   */\n      mstore\n        /* \"#utility.yul\":10365:10585   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10591:10957   */\n    tag_123:\n        /* \"#utility.yul\":10733:10736   */\n      0x00\n        /* \"#utility.yul\":10754:10821   */\n      tag_224\n        /* \"#utility.yul\":10818:10820   */\n      0x21\n        /* \"#utility.yul\":10813:10816   */\n      dup4\n        /* \"#utility.yul\":10754:10821   */\n      tag_108\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":10747:10821   */\n      swap2\n      pop\n        /* \"#utility.yul\":10830:10923   */\n      tag_225\n        /* \"#utility.yul\":10919:10922   */\n      dup3\n        /* \"#utility.yul\":10830:10923   */\n      tag_122\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":10948:10950   */\n      0x40\n        /* \"#utility.yul\":10943:10946   */\n      dup3\n        /* \"#utility.yul\":10939:10951   */\n      add\n        /* \"#utility.yul\":10932:10951   */\n      swap1\n      pop\n        /* \"#utility.yul\":10591:10957   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10963:11382   */\n    tag_70:\n        /* \"#utility.yul\":11129:11133   */\n      0x00\n        /* \"#utility.yul\":11167:11169   */\n      0x20\n        /* \"#utility.yul\":11156:11165   */\n      dup3\n        /* \"#utility.yul\":11152:11170   */\n      add\n        /* \"#utility.yul\":11144:11170   */\n      swap1\n      pop\n        /* \"#utility.yul\":11216:11225   */\n      dup2\n        /* \"#utility.yul\":11210:11214   */\n      dup2\n        /* \"#utility.yul\":11206:11226   */\n      sub\n        /* \"#utility.yul\":11202:11203   */\n      0x00\n        /* \"#utility.yul\":11191:11200   */\n      dup4\n        /* \"#utility.yul\":11187:11204   */\n      add\n        /* \"#utility.yul\":11180:11227   */\n      mstore\n        /* \"#utility.yul\":11244:11375   */\n      tag_227\n        /* \"#utility.yul\":11370:11374   */\n      dup2\n        /* \"#utility.yul\":11244:11375   */\n      tag_123\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":11236:11375   */\n      swap1\n      pop\n        /* \"#utility.yul\":10963:11382   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11388:11559   */\n    tag_124:\n        /* \"#utility.yul\":11528:11551   */\n      0x726563656976652061646472657373206572726f720000000000000000000000\n        /* \"#utility.yul\":11524:11525   */\n      0x00\n        /* \"#utility.yul\":11516:11522   */\n      dup3\n        /* \"#utility.yul\":11512:11526   */\n      add\n        /* \"#utility.yul\":11505:11552   */\n      mstore\n        /* \"#utility.yul\":11388:11559   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11565:11931   */\n    tag_125:\n        /* \"#utility.yul\":11707:11710   */\n      0x00\n        /* \"#utility.yul\":11728:11795   */\n      tag_230\n        /* \"#utility.yul\":11792:11794   */\n      0x15\n        /* \"#utility.yul\":11787:11790   */\n      dup4\n        /* \"#utility.yul\":11728:11795   */\n      tag_108\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":11721:11795   */\n      swap2\n      pop\n        /* \"#utility.yul\":11804:11897   */\n      tag_231\n        /* \"#utility.yul\":11893:11896   */\n      dup3\n        /* \"#utility.yul\":11804:11897   */\n      tag_124\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":11922:11924   */\n      0x20\n        /* \"#utility.yul\":11917:11920   */\n      dup3\n        /* \"#utility.yul\":11913:11925   */\n      add\n        /* \"#utility.yul\":11906:11925   */\n      swap1\n      pop\n        /* \"#utility.yul\":11565:11931   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11937:12356   */\n    tag_74:\n        /* \"#utility.yul\":12103:12107   */\n      0x00\n        /* \"#utility.yul\":12141:12143   */\n      0x20\n        /* \"#utility.yul\":12130:12139   */\n      dup3\n        /* \"#utility.yul\":12126:12144   */\n      add\n        /* \"#utility.yul\":12118:12144   */\n      swap1\n      pop\n        /* \"#utility.yul\":12190:12199   */\n      dup2\n        /* \"#utility.yul\":12184:12188   */\n      dup2\n        /* \"#utility.yul\":12180:12200   */\n      sub\n        /* \"#utility.yul\":12176:12177   */\n      0x00\n        /* \"#utility.yul\":12165:12174   */\n      dup4\n        /* \"#utility.yul\":12161:12178   */\n      add\n        /* \"#utility.yul\":12154:12201   */\n      mstore\n        /* \"#utility.yul\":12218:12349   */\n      tag_233\n        /* \"#utility.yul\":12344:12348   */\n      dup2\n        /* \"#utility.yul\":12218:12349   */\n      tag_125\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":12210:12349   */\n      swap1\n      pop\n        /* \"#utility.yul\":11937:12356   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12362:12541   */\n    tag_126:\n        /* \"#utility.yul\":12502:12533   */\n      0x616d6f756e74206d7573742062652067726561746572207468616e2030000000\n        /* \"#utility.yul\":12498:12499   */\n      0x00\n        /* \"#utility.yul\":12490:12496   */\n      dup3\n        /* \"#utility.yul\":12486:12500   */\n      add\n        /* \"#utility.yul\":12479:12534   */\n      mstore\n        /* \"#utility.yul\":12362:12541   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12547:12913   */\n    tag_127:\n        /* \"#utility.yul\":12689:12692   */\n      0x00\n        /* \"#utility.yul\":12710:12777   */\n      tag_236\n        /* \"#utility.yul\":12774:12776   */\n      0x1d\n        /* \"#utility.yul\":12769:12772   */\n      dup4\n        /* \"#utility.yul\":12710:12777   */\n      tag_108\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":12703:12777   */\n      swap2\n      pop\n        /* \"#utility.yul\":12786:12879   */\n      tag_237\n        /* \"#utility.yul\":12875:12878   */\n      dup3\n        /* \"#utility.yul\":12786:12879   */\n      tag_126\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":12904:12906   */\n      0x20\n        /* \"#utility.yul\":12899:12902   */\n      dup3\n        /* \"#utility.yul\":12895:12907   */\n      add\n        /* \"#utility.yul\":12888:12907   */\n      swap1\n      pop\n        /* \"#utility.yul\":12547:12913   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12919:13338   */\n    tag_77:\n        /* \"#utility.yul\":13085:13089   */\n      0x00\n        /* \"#utility.yul\":13123:13125   */\n      0x20\n        /* \"#utility.yul\":13112:13121   */\n      dup3\n        /* \"#utility.yul\":13108:13126   */\n      add\n        /* \"#utility.yul\":13100:13126   */\n      swap1\n      pop\n        /* \"#utility.yul\":13172:13181   */\n      dup2\n        /* \"#utility.yul\":13166:13170   */\n      dup2\n        /* \"#utility.yul\":13162:13182   */\n      sub\n        /* \"#utility.yul\":13158:13159   */\n      0x00\n        /* \"#utility.yul\":13147:13156   */\n      dup4\n        /* \"#utility.yul\":13143:13160   */\n      add\n        /* \"#utility.yul\":13136:13183   */\n      mstore\n        /* \"#utility.yul\":13200:13331   */\n      tag_239\n        /* \"#utility.yul\":13326:13330   */\n      dup2\n        /* \"#utility.yul\":13200:13331   */\n      tag_127\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":13192:13331   */\n      swap1\n      pop\n        /* \"#utility.yul\":12919:13338   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d9adb284910910483c3986d2d4eb73773aaae8d79c088eca136dd96262a8b57164736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_813": {
									"entryPoint": null,
									"id": 813,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 370,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 222,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 658,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 496,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 514,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 795,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 388,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 322,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 768,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 505,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 740,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 277,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 232,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 547,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 403,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 728,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 600,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 415,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 556,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 593,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5231:6",
										"nodeType": "YulBlock",
										"src": "0:5231:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:6",
													"nodeType": "YulBlock",
													"src": "66:40:6",
													"statements": [
														{
															"nativeSrc": "77:22:6",
															"nodeType": "YulAssignment",
															"src": "77:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:6"
																},
																"nativeSrc": "87:12:6",
																"nodeType": "YulFunctionCall",
																"src": "87:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:6",
														"nodeType": "YulTypedName",
														"src": "49:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:6",
														"nodeType": "YulTypedName",
														"src": "59:6:6",
														"type": ""
													}
												],
												"src": "7:99:6"
											},
											{
												"body": {
													"nativeSrc": "140:152:6",
													"nodeType": "YulBlock",
													"src": "140:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:6",
																		"nodeType": "YulLiteral",
																		"src": "157:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:6",
																		"nodeType": "YulLiteral",
																		"src": "160:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:6"
																},
																"nativeSrc": "150:88:6",
																"nodeType": "YulFunctionCall",
																"src": "150:88:6"
															},
															"nativeSrc": "150:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:6",
																		"nodeType": "YulLiteral",
																		"src": "254:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:6",
																		"nodeType": "YulLiteral",
																		"src": "257:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:6"
																},
																"nativeSrc": "247:15:6",
																"nodeType": "YulFunctionCall",
																"src": "247:15:6"
															},
															"nativeSrc": "247:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:6",
																		"nodeType": "YulLiteral",
																		"src": "278:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:6",
																		"nodeType": "YulLiteral",
																		"src": "281:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:6"
																},
																"nativeSrc": "271:15:6",
																"nodeType": "YulFunctionCall",
																"src": "271:15:6"
															},
															"nativeSrc": "271:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:6"
											},
											{
												"body": {
													"nativeSrc": "326:152:6",
													"nodeType": "YulBlock",
													"src": "326:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:6",
																		"nodeType": "YulLiteral",
																		"src": "343:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:6",
																		"nodeType": "YulLiteral",
																		"src": "346:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:6"
																},
																"nativeSrc": "336:88:6",
																"nodeType": "YulFunctionCall",
																"src": "336:88:6"
															},
															"nativeSrc": "336:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:6",
																		"nodeType": "YulLiteral",
																		"src": "440:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:6",
																		"nodeType": "YulLiteral",
																		"src": "443:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:6"
																},
																"nativeSrc": "433:15:6",
																"nodeType": "YulFunctionCall",
																"src": "433:15:6"
															},
															"nativeSrc": "433:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:6",
																		"nodeType": "YulLiteral",
																		"src": "464:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:6",
																		"nodeType": "YulLiteral",
																		"src": "467:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:6"
																},
																"nativeSrc": "457:15:6",
																"nodeType": "YulFunctionCall",
																"src": "457:15:6"
															},
															"nativeSrc": "457:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:6"
											},
											{
												"body": {
													"nativeSrc": "535:269:6",
													"nodeType": "YulBlock",
													"src": "535:269:6",
													"statements": [
														{
															"nativeSrc": "545:22:6",
															"nodeType": "YulAssignment",
															"src": "545:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:6",
																		"nodeType": "YulLiteral",
																		"src": "565:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:6"
																},
																"nativeSrc": "555:12:6",
																"nodeType": "YulFunctionCall",
																"src": "555:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:6"
																}
															]
														},
														{
															"nativeSrc": "576:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:6",
																		"nodeType": "YulLiteral",
																		"src": "612:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:6"
																},
																"nativeSrc": "602:12:6",
																"nodeType": "YulFunctionCall",
																"src": "602:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:6",
																	"nodeType": "YulTypedName",
																	"src": "580:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:6",
																"nodeType": "YulBlock",
																"src": "653:51:6",
																"statements": [
																	{
																		"nativeSrc": "667:27:6",
																		"nodeType": "YulAssignment",
																		"src": "667:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:6",
																					"nodeType": "YulLiteral",
																					"src": "689:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:6"
																			},
																			"nativeSrc": "677:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:6"
																},
																"nativeSrc": "626:26:6",
																"nodeType": "YulFunctionCall",
																"src": "626:26:6"
															},
															"nativeSrc": "623:81:6",
															"nodeType": "YulIf",
															"src": "623:81:6"
														},
														{
															"body": {
																"nativeSrc": "756:42:6",
																"nodeType": "YulBlock",
																"src": "756:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:6"
																			},
																			"nativeSrc": "770:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:6"
																		},
																		"nativeSrc": "770:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:6",
																				"nodeType": "YulLiteral",
																				"src": "751:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:6"
																		},
																		"nativeSrc": "740:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:6"
																},
																"nativeSrc": "717:38:6",
																"nodeType": "YulFunctionCall",
																"src": "717:38:6"
															},
															"nativeSrc": "714:84:6",
															"nodeType": "YulIf",
															"src": "714:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:6",
														"nodeType": "YulTypedName",
														"src": "519:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:6",
														"nodeType": "YulTypedName",
														"src": "528:6:6",
														"type": ""
													}
												],
												"src": "484:320:6"
											},
											{
												"body": {
													"nativeSrc": "864:87:6",
													"nodeType": "YulBlock",
													"src": "864:87:6",
													"statements": [
														{
															"nativeSrc": "874:11:6",
															"nodeType": "YulAssignment",
															"src": "874:11:6",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:6",
																"nodeType": "YulIdentifier",
																"src": "882:3:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:6",
																		"nodeType": "YulLiteral",
																		"src": "902:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:6"
																},
																"nativeSrc": "895:14:6",
																"nodeType": "YulFunctionCall",
																"src": "895:14:6"
															},
															"nativeSrc": "895:14:6",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:6"
														},
														{
															"nativeSrc": "918:26:6",
															"nodeType": "YulAssignment",
															"src": "918:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:6",
																		"nodeType": "YulLiteral",
																		"src": "936:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:6",
																		"nodeType": "YulLiteral",
																		"src": "939:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:6"
																},
																"nativeSrc": "926:18:6",
																"nodeType": "YulFunctionCall",
																"src": "926:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:6",
														"nodeType": "YulTypedName",
														"src": "851:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:6",
														"nodeType": "YulTypedName",
														"src": "859:4:6",
														"type": ""
													}
												],
												"src": "810:141:6"
											},
											{
												"body": {
													"nativeSrc": "1001:49:6",
													"nodeType": "YulBlock",
													"src": "1001:49:6",
													"statements": [
														{
															"nativeSrc": "1011:33:6",
															"nodeType": "YulAssignment",
															"src": "1011:33:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:6"
																		},
																		"nativeSrc": "1025:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:6"
																},
																"nativeSrc": "1021:23:6",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:6"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:6",
														"nodeType": "YulTypedName",
														"src": "984:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:6",
														"nodeType": "YulTypedName",
														"src": "994:6:6",
														"type": ""
													}
												],
												"src": "957:93:6"
											},
											{
												"body": {
													"nativeSrc": "1109:54:6",
													"nodeType": "YulBlock",
													"src": "1109:54:6",
													"statements": [
														{
															"nativeSrc": "1119:37:6",
															"nodeType": "YulAssignment",
															"src": "1119:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:6"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:6"
																},
																"nativeSrc": "1140:16:6",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:6"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:6",
														"nodeType": "YulTypedName",
														"src": "1084:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:6",
														"nodeType": "YulTypedName",
														"src": "1090:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:6",
														"nodeType": "YulTypedName",
														"src": "1100:8:6",
														"type": ""
													}
												],
												"src": "1056:107:6"
											},
											{
												"body": {
													"nativeSrc": "1245:317:6",
													"nodeType": "YulBlock",
													"src": "1245:317:6",
													"statements": [
														{
															"nativeSrc": "1255:35:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:6",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:6"
																},
																"nativeSrc": "1272:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:6"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:6",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:6",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:6"
																},
																"nativeSrc": "1311:97:6",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:6",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:6",
															"nodeType": "YulAssignment",
															"src": "1417:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:6"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:6"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:6"
																},
																"nativeSrc": "1429:39:6",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:6"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:6"
																}
															]
														},
														{
															"nativeSrc": "1477:30:6",
															"nodeType": "YulAssignment",
															"src": "1477:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:6"
																		},
																		"nativeSrc": "1497:9:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:6"
																},
																"nativeSrc": "1486:21:6",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:6"
																}
															]
														},
														{
															"nativeSrc": "1516:40:6",
															"nodeType": "YulAssignment",
															"src": "1516:40:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:6"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:6"
																		},
																		"nativeSrc": "1536:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:6"
																},
																"nativeSrc": "1526:30:6",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:6"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:6",
														"nodeType": "YulTypedName",
														"src": "1206:5:6",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:6",
														"nodeType": "YulTypedName",
														"src": "1213:10:6",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:6",
														"nodeType": "YulTypedName",
														"src": "1225:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:6",
														"nodeType": "YulTypedName",
														"src": "1238:6:6",
														"type": ""
													}
												],
												"src": "1169:393:6"
											},
											{
												"body": {
													"nativeSrc": "1613:32:6",
													"nodeType": "YulBlock",
													"src": "1613:32:6",
													"statements": [
														{
															"nativeSrc": "1623:16:6",
															"nodeType": "YulAssignment",
															"src": "1623:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:6",
																"nodeType": "YulIdentifier",
																"src": "1634:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:6",
														"nodeType": "YulTypedName",
														"src": "1595:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:6",
														"nodeType": "YulTypedName",
														"src": "1605:7:6",
														"type": ""
													}
												],
												"src": "1568:77:6"
											},
											{
												"body": {
													"nativeSrc": "1683:28:6",
													"nodeType": "YulBlock",
													"src": "1683:28:6",
													"statements": [
														{
															"nativeSrc": "1693:12:6",
															"nodeType": "YulAssignment",
															"src": "1693:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:6",
																"nodeType": "YulIdentifier",
																"src": "1700:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:6",
														"nodeType": "YulTypedName",
														"src": "1669:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:6",
														"nodeType": "YulTypedName",
														"src": "1679:3:6",
														"type": ""
													}
												],
												"src": "1651:60:6"
											},
											{
												"body": {
													"nativeSrc": "1777:82:6",
													"nodeType": "YulBlock",
													"src": "1777:82:6",
													"statements": [
														{
															"nativeSrc": "1787:66:6",
															"nodeType": "YulAssignment",
															"src": "1787:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:6"
																				},
																				"nativeSrc": "1827:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:6"
																		},
																		"nativeSrc": "1818:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:6"
																},
																"nativeSrc": "1800:53:6",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:6",
														"nodeType": "YulTypedName",
														"src": "1757:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:6",
														"nodeType": "YulTypedName",
														"src": "1767:9:6",
														"type": ""
													}
												],
												"src": "1717:142:6"
											},
											{
												"body": {
													"nativeSrc": "1912:28:6",
													"nodeType": "YulBlock",
													"src": "1912:28:6",
													"statements": [
														{
															"nativeSrc": "1922:12:6",
															"nodeType": "YulAssignment",
															"src": "1922:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:6",
																"nodeType": "YulIdentifier",
																"src": "1929:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:6"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:6",
														"nodeType": "YulTypedName",
														"src": "1898:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:6",
														"nodeType": "YulTypedName",
														"src": "1908:3:6",
														"type": ""
													}
												],
												"src": "1865:75:6"
											},
											{
												"body": {
													"nativeSrc": "2022:193:6",
													"nodeType": "YulBlock",
													"src": "2022:193:6",
													"statements": [
														{
															"nativeSrc": "2032:63:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:6",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:6"
																},
																"nativeSrc": "2056:39:6",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:6"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:6",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:6"
																				},
																				"nativeSrc": "2145:11:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:6"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:6",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:6"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:6",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:6"
																				},
																				"nativeSrc": "2166:41:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:6"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:6",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:6"
																		},
																		"nativeSrc": "2117:91:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:6"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:6"
																},
																"nativeSrc": "2104:105:6",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:6"
															},
															"nativeSrc": "2104:105:6",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:6"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:6",
														"nodeType": "YulTypedName",
														"src": "1999:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:6",
														"nodeType": "YulTypedName",
														"src": "2005:6:6",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:6",
														"nodeType": "YulTypedName",
														"src": "2013:7:6",
														"type": ""
													}
												],
												"src": "1946:269:6"
											},
											{
												"body": {
													"nativeSrc": "2270:24:6",
													"nodeType": "YulBlock",
													"src": "2270:24:6",
													"statements": [
														{
															"nativeSrc": "2280:8:6",
															"nodeType": "YulAssignment",
															"src": "2280:8:6",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:6",
																"nodeType": "YulLiteral",
																"src": "2287:1:6",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:6"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:6",
														"nodeType": "YulTypedName",
														"src": "2266:3:6",
														"type": ""
													}
												],
												"src": "2221:73:6"
											},
											{
												"body": {
													"nativeSrc": "2353:136:6",
													"nodeType": "YulBlock",
													"src": "2353:136:6",
													"statements": [
														{
															"nativeSrc": "2363:46:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:6"
																},
																"nativeSrc": "2377:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:6"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:6",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:6"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:6"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:6"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:6"
																},
																"nativeSrc": "2418:65:6",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:6"
															},
															"nativeSrc": "2418:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:6"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:6",
														"nodeType": "YulTypedName",
														"src": "2339:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:6",
														"nodeType": "YulTypedName",
														"src": "2345:6:6",
														"type": ""
													}
												],
												"src": "2300:189:6"
											},
											{
												"body": {
													"nativeSrc": "2545:136:6",
													"nodeType": "YulBlock",
													"src": "2545:136:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:6",
																"nodeType": "YulBlock",
																"src": "2612:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:6",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:6"
																			},
																			"nativeSrc": "2626:39:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:6"
																		},
																		"nativeSrc": "2626:39:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:6"
																},
																"nativeSrc": "2562:14:6",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:6"
															},
															"nativeSrc": "2555:120:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:6",
																"nodeType": "YulBlock",
																"src": "2577:26:6",
																"statements": [
																	{
																		"nativeSrc": "2579:22:6",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:6"
																			},
																			"nativeSrc": "2588:13:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:6"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:6",
																"nodeType": "YulBlock",
																"src": "2559:2:6",
																"statements": []
															},
															"src": "2555:120:6"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:6",
														"nodeType": "YulTypedName",
														"src": "2533:5:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:6",
														"nodeType": "YulTypedName",
														"src": "2540:3:6",
														"type": ""
													}
												],
												"src": "2495:186:6"
											},
											{
												"body": {
													"nativeSrc": "2766:464:6",
													"nodeType": "YulBlock",
													"src": "2766:464:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:6",
																"nodeType": "YulBlock",
																"src": "2792:431:6",
																"statements": [
																	{
																		"nativeSrc": "2806:54:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:6"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:6",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:6"
																			},
																			"nativeSrc": "2822:38:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:6"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:6",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:6",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:6"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:6",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:6"
																					},
																					"nativeSrc": "2906:29:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:6"
																			},
																			"nativeSrc": "2892:44:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:6",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:6",
																			"nodeType": "YulBlock",
																			"src": "3093:27:6",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:6",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:6",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:6",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:6",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:6"
																			},
																			"nativeSrc": "3074:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:6"
																		},
																		"nativeSrc": "3071:49:6",
																		"nodeType": "YulIf",
																		"src": "3071:49:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:6",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:6"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:6",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:6"
																							},
																							"nativeSrc": "3189:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:6"
																					},
																					"nativeSrc": "3175:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:6"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:6",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:6"
																			},
																			"nativeSrc": "3133:80:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:6"
																		},
																		"nativeSrc": "3133:80:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:6"
																},
																"nativeSrc": "2780:11:6",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:6"
															},
															"nativeSrc": "2777:446:6",
															"nodeType": "YulIf",
															"src": "2777:446:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:6",
														"nodeType": "YulTypedName",
														"src": "2742:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:6",
														"nodeType": "YulTypedName",
														"src": "2749:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:6",
														"nodeType": "YulTypedName",
														"src": "2754:10:6",
														"type": ""
													}
												],
												"src": "2687:543:6"
											},
											{
												"body": {
													"nativeSrc": "3299:54:6",
													"nodeType": "YulBlock",
													"src": "3299:54:6",
													"statements": [
														{
															"nativeSrc": "3309:37:6",
															"nodeType": "YulAssignment",
															"src": "3309:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:6"
																},
																"nativeSrc": "3330:16:6",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:6"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:6",
														"nodeType": "YulTypedName",
														"src": "3274:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:6",
														"nodeType": "YulTypedName",
														"src": "3280:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:6",
														"nodeType": "YulTypedName",
														"src": "3290:8:6",
														"type": ""
													}
												],
												"src": "3236:117:6"
											},
											{
												"body": {
													"nativeSrc": "3410:118:6",
													"nodeType": "YulBlock",
													"src": "3410:118:6",
													"statements": [
														{
															"nativeSrc": "3420:68:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:6",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:6",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:6"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:6"
																				},
																				"nativeSrc": "3465:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:6",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:6"
																				},
																				"nativeSrc": "3480:6:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:6"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:6"
																		},
																		"nativeSrc": "3436:51:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:6"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:6"
																},
																"nativeSrc": "3432:56:6",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:6",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:6",
															"nodeType": "YulAssignment",
															"src": "3497:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:6"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:6"
																},
																"nativeSrc": "3507:15:6",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:6"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:6",
														"nodeType": "YulTypedName",
														"src": "3387:4:6",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:6",
														"nodeType": "YulTypedName",
														"src": "3393:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:6",
														"nodeType": "YulTypedName",
														"src": "3403:6:6",
														"type": ""
													}
												],
												"src": "3359:169:6"
											},
											{
												"body": {
													"nativeSrc": "3614:214:6",
													"nodeType": "YulBlock",
													"src": "3614:214:6",
													"statements": [
														{
															"nativeSrc": "3747:37:6",
															"nodeType": "YulAssignment",
															"src": "3747:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:6"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:6"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:6"
																},
																"nativeSrc": "3755:29:6",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:6"
																}
															]
														},
														{
															"nativeSrc": "3793:29:6",
															"nodeType": "YulAssignment",
															"src": "3793:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:6",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:6"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:6"
																		},
																		"nativeSrc": "3810:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:6"
																},
																"nativeSrc": "3801:21:6",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:6",
														"nodeType": "YulTypedName",
														"src": "3595:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:6",
														"nodeType": "YulTypedName",
														"src": "3601:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:6",
														"nodeType": "YulTypedName",
														"src": "3609:4:6",
														"type": ""
													}
												],
												"src": "3533:295:6"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:6",
													"nodeType": "YulBlock",
													"src": "3925:1303:6",
													"statements": [
														{
															"nativeSrc": "3936:51:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:6"
																},
																"nativeSrc": "3950:37:6",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:6",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:6",
																"nodeType": "YulBlock",
																"src": "4072:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:6"
																			},
																			"nativeSrc": "4074:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:6"
																		},
																		"nativeSrc": "4074:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:6",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:6"
																},
																"nativeSrc": "4041:30:6",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:6"
															},
															"nativeSrc": "4038:56:6",
															"nodeType": "YulIf",
															"src": "4038:56:6"
														},
														{
															"nativeSrc": "4104:52:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:6"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:6"
																		},
																		"nativeSrc": "4144:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:6"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:6",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:6"
																},
																"nativeSrc": "4118:38:6",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:6"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:6",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:6"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:6"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:6",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:6"
																},
																"nativeSrc": "4203:67:6",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:6"
															},
															"nativeSrc": "4203:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:6"
														},
														{
															"nativeSrc": "4280:18:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:6",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:6",
																"nodeType": "YulLiteral",
																"src": "4297:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:6",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:6",
															"nodeType": "YulAssignment",
															"src": "4308:17:6",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:6",
																"nodeType": "YulLiteral",
																"src": "4321:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:6",
																		"nodeType": "YulBlock",
																		"src": "4372:611:6",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:6",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:6",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:6"
																							},
																							"nativeSrc": "4413:9:6",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:6"
																					},
																					"nativeSrc": "4401:22:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:6",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:6",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:6"
																					},
																					"nativeSrc": "4451:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:6",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:6",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:6",
																					"nodeType": "YulBlock",
																					"src": "4569:163:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:6",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:6"
																												},
																												"nativeSrc": "4608:19:6",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:6"
																										},
																										"nativeSrc": "4602:26:6",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:6"
																								},
																								"nativeSrc": "4587:42:6",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:6"
																							},
																							"nativeSrc": "4587:42:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:6"
																						},
																						{
																							"nativeSrc": "4646:24:6",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:6",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:6"
																								},
																								"nativeSrc": "4656:14:6",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:6"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:6",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:6",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:6",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:6",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:6"
																								},
																								"nativeSrc": "4700:18:6",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:6"
																					},
																					"nativeSrc": "4532:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:6"
																				},
																				"nativeSrc": "4524:208:6",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:6",
																					"nodeType": "YulBlock",
																					"src": "4547:21:6",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:6",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:6",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:6",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:6"
																								},
																								"nativeSrc": "4554:12:6",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:6",
																					"nodeType": "YulBlock",
																					"src": "4528:3:6",
																					"statements": []
																				},
																				"src": "4524:208:6"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:6",
																					"nodeType": "YulBlock",
																					"src": "4768:156:6",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:6",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:6"
																										},
																										"nativeSrc": "4809:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:6"
																								},
																								"nativeSrc": "4803:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:6",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:6",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:6"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:6",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:6",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:6"
																												},
																												"nativeSrc": "4891:17:6",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:6"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:6",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:6"
																										},
																										"nativeSrc": "4861:48:6",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:6"
																								},
																								"nativeSrc": "4846:64:6",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:6"
																							},
																							"nativeSrc": "4846:64:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:6"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:6"
																					},
																					"nativeSrc": "4748:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:6"
																				},
																				"nativeSrc": "4745:179:6",
																				"nodeType": "YulIf",
																				"src": "4745:179:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:6"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:6",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:6",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:6"
																									},
																									"nativeSrc": "4954:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:6",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:6"
																							},
																							"nativeSrc": "4950:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:6"
																					},
																					"nativeSrc": "4937:36:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:6"
																				},
																				"nativeSrc": "4937:36:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:6"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:6",
																	"nodeType": "YulCase",
																	"src": "4365:618:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:6",
																		"nodeType": "YulBlock",
																		"src": "5000:222:6",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:6",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:6",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:6",
																					"nodeType": "YulBlock",
																					"src": "5051:67:6",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:6",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:6"
																										},
																										"nativeSrc": "5084:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:6"
																								},
																								"nativeSrc": "5078:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:6"
																				},
																				"nativeSrc": "5041:77:6",
																				"nodeType": "YulIf",
																				"src": "5041:77:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:6"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:6",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:6"
																							},
																							"nativeSrc": "5144:67:6",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:6"
																					},
																					"nativeSrc": "5131:81:6",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:6"
																				},
																				"nativeSrc": "5131:81:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:6"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:6",
																	"nodeType": "YulCase",
																	"src": "4992:230:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:6"
																},
																"nativeSrc": "4342:14:6",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:6"
															},
															"nativeSrc": "4335:887:6",
															"nodeType": "YulSwitch",
															"src": "4335:887:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:6",
														"nodeType": "YulTypedName",
														"src": "3914:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:6",
														"nodeType": "YulTypedName",
														"src": "3920:3:6",
														"type": ""
													}
												],
												"src": "3833:1395:6"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506040518060400160405280600781526020017f4d79546f6b656e000000000000000000000000000000000000000000000000008152505f9081610053919061031b565b506040518060400160405280600381526020017f4d544b000000000000000000000000000000000000000000000000000000000081525060019081610098919061031b565b503360025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506103ea565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061015957607f821691505b60208210810361016c5761016b610115565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026101ce7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610193565b6101d88683610193565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61021c610217610212846101f0565b6101f9565b6101f0565b9050919050565b5f819050919050565b61023583610202565b61024961024182610223565b84845461019f565b825550505050565b5f5f905090565b610260610251565b61026b81848461022c565b505050565b5b8181101561028e576102835f82610258565b600181019050610271565b5050565b601f8211156102d3576102a481610172565b6102ad84610184565b810160208510156102bc578190505b6102d06102c885610184565b830182610270565b50505b505050565b5f82821c905092915050565b5f6102f35f19846008026102d8565b1980831691505092915050565b5f61030b83836102e4565b9150826002028217905092915050565b610324826100de565b67ffffffffffffffff81111561033d5761033c6100e8565b5b6103478254610142565b610352828285610292565b5f60209050601f831160018114610383575f8415610371578287015190505b61037b8582610300565b8655506103e2565b601f19841661039186610172565b5f5b828110156103b857848901518255600182019150602085019450602081019050610393565b868310156103d557848901516103d1601f8916826102e4565b8355505b6001600288020188555050505b505050505050565b611244806103f75f395ff3fe608060405234801561000f575f5ffd5b5060043610610060575f3560e01c8063095ea7b31461006457806323b872dd1461009457806340c10f19146100c457806370a08231146100e05780638da5cb5b14610110578063a9059cbb1461012e575b5f5ffd5b61007e60048036038101906100799190610c61565b61015e565b60405161008b9190610cb9565b60405180910390f35b6100ae60048036038101906100a99190610cd2565b6102fb565b6040516100bb9190610cb9565b60405180910390f35b6100de60048036038101906100d99190610c61565b6106fe565b005b6100fa60048036038101906100f59190610d22565b6108ac565b6040516101079190610d5c565b60405180910390f35b610118610960565b6040516101259190610d84565b60405180910390f35b61014860048036038101906101439190610c61565b610985565b6040516101559190610cb9565b60405180910390f35b5f5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036101cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c490610df7565b60405180910390fd5b5f821161020f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020690610e5f565b60405180910390fd5b8160055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f08dffe93edf65c77e66e298bcf7ba5ba81a3f70c8641f098066df4e8ed21e684846040516102e99190610d5c565b60405180910390a36001905092915050565b5f5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361036a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036190610ec7565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036103d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103cf90610f2f565b60405180910390fd5b5f821161041a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041190610e5f565b60405180910390fd5b8160055f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205410156104d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104cc90610f97565b60405180910390fd5b5f60045f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905082811015610559576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055090610fff565b60405180910390fd5b8260045f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546105a5919061104a565b925050819055508260045f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546105f8919061107d565b925050819055508260055f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610686919061104a565b925050819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f21425341546d2023146851fb583db9b7c6be5fed0d287293c85a8ede5193c6ea856040516106ea9190610d5c565b60405180910390a360019150509392505050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461078d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078490611120565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f290611188565b60405180910390fd5b5f811161083d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610834906111f0565b60405180910390fd5b8060045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610889919061107d565b925050819055508060035f8282546108a1919061107d565b925050819055505050565b5f5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361091b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091290611188565b60405180910390fd5b60045f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109eb90611188565b60405180910390fd5b5f8211610a36576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2d90610e5f565b60405180910390fd5b5f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905082811015610aba576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab190610fff565b60405180910390fd5b8260045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610b06919061104a565b925050819055508260045f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610b59919061107d565b925050819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f21425341546d2023146851fb583db9b7c6be5fed0d287293c85a8ede5193c6ea85604051610bbd9190610d5c565b60405180910390a3600191505092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610bfd82610bd4565b9050919050565b610c0d81610bf3565b8114610c17575f5ffd5b50565b5f81359050610c2881610c04565b92915050565b5f819050919050565b610c4081610c2e565b8114610c4a575f5ffd5b50565b5f81359050610c5b81610c37565b92915050565b5f5f60408385031215610c7757610c76610bd0565b5b5f610c8485828601610c1a565b9250506020610c9585828601610c4d565b9150509250929050565b5f8115159050919050565b610cb381610c9f565b82525050565b5f602082019050610ccc5f830184610caa565b92915050565b5f5f5f60608486031215610ce957610ce8610bd0565b5b5f610cf686828701610c1a565b9350506020610d0786828701610c1a565b9250506040610d1886828701610c4d565b9150509250925092565b5f60208284031215610d3757610d36610bd0565b5b5f610d4484828501610c1a565b91505092915050565b610d5681610c2e565b82525050565b5f602082019050610d6f5f830184610d4d565b92915050565b610d7e81610bf3565b82525050565b5f602082019050610d975f830184610d75565b92915050565b5f82825260208201905092915050565b7f7370656e6465722061646472657373206572726f7200000000000000000000005f82015250565b5f610de1601583610d9d565b9150610dec82610dad565b602082019050919050565b5f6020820190508181035f830152610e0e81610dd5565b9050919050565b7f616d6f756e74206d757374206772656574207468616e203000000000000000005f82015250565b5f610e49601883610d9d565b9150610e5482610e15565b602082019050919050565b5f6020820190508181035f830152610e7681610e3d565b9050919050565b7f66726f6d2061646472657373206572726f7200000000000000000000000000005f82015250565b5f610eb1601283610d9d565b9150610ebc82610e7d565b602082019050919050565b5f6020820190508181035f830152610ede81610ea5565b9050919050565b7f746f2061646472657373206572726f72000000000000000000000000000000005f82015250565b5f610f19601083610d9d565b9150610f2482610ee5565b602082019050919050565b5f6020820190508181035f830152610f4681610f0d565b9050919050565b7f616c6c6f77616e636520657863656564656400000000000000000000000000005f82015250565b5f610f81601283610d9d565b9150610f8c82610f4d565b602082019050919050565b5f6020820190508181035f830152610fae81610f75565b9050919050565b7f6f776e65722062616c616e6365206e6f7420656e6f75676800000000000000005f82015250565b5f610fe9601883610d9d565b9150610ff482610fb5565b602082019050919050565b5f6020820190508181035f83015261101681610fdd565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61105482610c2e565b915061105f83610c2e565b92508282039050818111156110775761107661101d565b5b92915050565b5f61108782610c2e565b915061109283610c2e565b92508282019050808211156110aa576110a961101d565b5b92915050565b7f6f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f5f8201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b5f61110a602183610d9d565b9150611115826110b0565b604082019050919050565b5f6020820190508181035f830152611137816110fe565b9050919050565b7f726563656976652061646472657373206572726f7200000000000000000000005f82015250565b5f611172601583610d9d565b915061117d8261113e565b602082019050919050565b5f6020820190508181035f83015261119f81611166565b9050919050565b7f616d6f756e74206d7573742062652067726561746572207468616e20300000005f82015250565b5f6111da601d83610d9d565b91506111e5826111a6565b602082019050919050565b5f6020820190508181035f830152611207816111ce565b905091905056fea2646970667358221220d9adb284910910483c3986d2d4eb73773aaae8d79c088eca136dd96262a8b57164736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D79546F6B656E00000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH0 SWAP1 DUP2 PUSH2 0x53 SWAP2 SWAP1 PUSH2 0x31B JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D544B0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x1 SWAP1 DUP2 PUSH2 0x98 SWAP2 SWAP1 PUSH2 0x31B JUMP JUMPDEST POP CALLER PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x3EA JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x159 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x16C JUMPI PUSH2 0x16B PUSH2 0x115 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x1CE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x193 JUMP JUMPDEST PUSH2 0x1D8 DUP7 DUP4 PUSH2 0x193 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x21C PUSH2 0x217 PUSH2 0x212 DUP5 PUSH2 0x1F0 JUMP JUMPDEST PUSH2 0x1F9 JUMP JUMPDEST PUSH2 0x1F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x235 DUP4 PUSH2 0x202 JUMP JUMPDEST PUSH2 0x249 PUSH2 0x241 DUP3 PUSH2 0x223 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x19F JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x260 PUSH2 0x251 JUMP JUMPDEST PUSH2 0x26B DUP2 DUP5 DUP5 PUSH2 0x22C JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x28E JUMPI PUSH2 0x283 PUSH0 DUP3 PUSH2 0x258 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x271 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2D3 JUMPI PUSH2 0x2A4 DUP2 PUSH2 0x172 JUMP JUMPDEST PUSH2 0x2AD DUP5 PUSH2 0x184 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2BC JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2D0 PUSH2 0x2C8 DUP6 PUSH2 0x184 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x270 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2F3 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2D8 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x30B DUP4 DUP4 PUSH2 0x2E4 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x324 DUP3 PUSH2 0xDE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x33D JUMPI PUSH2 0x33C PUSH2 0xE8 JUMP JUMPDEST JUMPDEST PUSH2 0x347 DUP3 SLOAD PUSH2 0x142 JUMP JUMPDEST PUSH2 0x352 DUP3 DUP3 DUP6 PUSH2 0x292 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x383 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x371 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x37B DUP6 DUP3 PUSH2 0x300 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3E2 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x391 DUP7 PUSH2 0x172 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3B8 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x393 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x3D5 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x3D1 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2E4 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1244 DUP1 PUSH2 0x3F7 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x60 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0xC4 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x12E JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x7E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0xC61 JUMP JUMPDEST PUSH2 0x15E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0xCB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xCD2 JUMP JUMPDEST PUSH2 0x2FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBB SWAP2 SWAP1 PUSH2 0xCB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD9 SWAP2 SWAP1 PUSH2 0xC61 JUMP JUMPDEST PUSH2 0x6FE JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF5 SWAP2 SWAP1 PUSH2 0xD22 JUMP JUMPDEST PUSH2 0x8AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x107 SWAP2 SWAP1 PUSH2 0xD5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x118 PUSH2 0x960 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x125 SWAP2 SWAP1 PUSH2 0xD84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x148 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x143 SWAP2 SWAP1 PUSH2 0xC61 JUMP JUMPDEST PUSH2 0x985 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP2 SWAP1 PUSH2 0xCB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C4 SWAP1 PUSH2 0xDF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x20F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x206 SWAP1 PUSH2 0xE5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8DFFE93EDF65C77E66E298BCF7BA5BA81A3F70C8641F098066DF4E8ED21E684 DUP5 PUSH1 0x40 MLOAD PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0xD5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x36A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x361 SWAP1 PUSH2 0xEC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CF SWAP1 PUSH2 0xF2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x41A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x411 SWAP1 PUSH2 0xE5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x5 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CC SWAP1 PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x559 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x550 SWAP1 PUSH2 0xFFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x4 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x5A5 SWAP2 SWAP1 PUSH2 0x104A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x4 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x5F8 SWAP2 SWAP1 PUSH2 0x107D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x5 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x686 SWAP2 SWAP1 PUSH2 0x104A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x21425341546D2023146851FB583DB9B7C6BE5FED0D287293C85A8EDE5193C6EA DUP6 PUSH1 0x40 MLOAD PUSH2 0x6EA SWAP2 SWAP1 PUSH2 0xD5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x78D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x784 SWAP1 PUSH2 0x1120 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F2 SWAP1 PUSH2 0x1188 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x83D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x834 SWAP1 PUSH2 0x11F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x889 SWAP2 SWAP1 PUSH2 0x107D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8A1 SWAP2 SWAP1 PUSH2 0x107D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x91B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x912 SWAP1 PUSH2 0x1188 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9EB SWAP1 PUSH2 0x1188 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0xA36 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA2D SWAP1 PUSH2 0xE5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0xABA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAB1 SWAP1 PUSH2 0xFFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB06 SWAP2 SWAP1 PUSH2 0x104A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x4 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB59 SWAP2 SWAP1 PUSH2 0x107D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x21425341546D2023146851FB583DB9B7C6BE5FED0D287293C85A8EDE5193C6EA DUP6 PUSH1 0x40 MLOAD PUSH2 0xBBD SWAP2 SWAP1 PUSH2 0xD5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xBFD DUP3 PUSH2 0xBD4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC0D DUP2 PUSH2 0xBF3 JUMP JUMPDEST DUP2 EQ PUSH2 0xC17 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC28 DUP2 PUSH2 0xC04 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC40 DUP2 PUSH2 0xC2E JUMP JUMPDEST DUP2 EQ PUSH2 0xC4A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC5B DUP2 PUSH2 0xC37 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC77 JUMPI PUSH2 0xC76 PUSH2 0xBD0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC84 DUP6 DUP3 DUP7 ADD PUSH2 0xC1A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC95 DUP6 DUP3 DUP7 ADD PUSH2 0xC4D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCB3 DUP2 PUSH2 0xC9F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCCC PUSH0 DUP4 ADD DUP5 PUSH2 0xCAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xCE9 JUMPI PUSH2 0xCE8 PUSH2 0xBD0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCF6 DUP7 DUP3 DUP8 ADD PUSH2 0xC1A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xD07 DUP7 DUP3 DUP8 ADD PUSH2 0xC1A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xD18 DUP7 DUP3 DUP8 ADD PUSH2 0xC4D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD37 JUMPI PUSH2 0xD36 PUSH2 0xBD0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD44 DUP5 DUP3 DUP6 ADD PUSH2 0xC1A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD56 DUP2 PUSH2 0xC2E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD6F PUSH0 DUP4 ADD DUP5 PUSH2 0xD4D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD7E DUP2 PUSH2 0xBF3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD97 PUSH0 DUP4 ADD DUP5 PUSH2 0xD75 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x7370656E6465722061646472657373206572726F720000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xDE1 PUSH1 0x15 DUP4 PUSH2 0xD9D JUMP JUMPDEST SWAP2 POP PUSH2 0xDEC DUP3 PUSH2 0xDAD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE0E DUP2 PUSH2 0xDD5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x616D6F756E74206D757374206772656574207468616E20300000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE49 PUSH1 0x18 DUP4 PUSH2 0xD9D JUMP JUMPDEST SWAP2 POP PUSH2 0xE54 DUP3 PUSH2 0xE15 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE76 DUP2 PUSH2 0xE3D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x66726F6D2061646472657373206572726F720000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xEB1 PUSH1 0x12 DUP4 PUSH2 0xD9D JUMP JUMPDEST SWAP2 POP PUSH2 0xEBC DUP3 PUSH2 0xE7D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEDE DUP2 PUSH2 0xEA5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x746F2061646472657373206572726F7200000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF19 PUSH1 0x10 DUP4 PUSH2 0xD9D JUMP JUMPDEST SWAP2 POP PUSH2 0xF24 DUP3 PUSH2 0xEE5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF46 DUP2 PUSH2 0xF0D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x616C6C6F77616E63652065786365656465640000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF81 PUSH1 0x12 DUP4 PUSH2 0xD9D JUMP JUMPDEST SWAP2 POP PUSH2 0xF8C DUP3 PUSH2 0xF4D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFAE DUP2 PUSH2 0xF75 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6F776E65722062616C616E6365206E6F7420656E6F7567680000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xFE9 PUSH1 0x18 DUP4 PUSH2 0xD9D JUMP JUMPDEST SWAP2 POP PUSH2 0xFF4 DUP3 PUSH2 0xFB5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1016 DUP2 PUSH2 0xFDD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1054 DUP3 PUSH2 0xC2E JUMP JUMPDEST SWAP2 POP PUSH2 0x105F DUP4 PUSH2 0xC2E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1077 JUMPI PUSH2 0x1076 PUSH2 0x101D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1087 DUP3 PUSH2 0xC2E JUMP JUMPDEST SWAP2 POP PUSH2 0x1092 DUP4 PUSH2 0xC2E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x10AA JUMPI PUSH2 0x10A9 PUSH2 0x101D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6F6E6C79206F776E65722063616E2063616C6C20746869732066756E6374696F PUSH0 DUP3 ADD MSTORE PUSH32 0x6E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x110A PUSH1 0x21 DUP4 PUSH2 0xD9D JUMP JUMPDEST SWAP2 POP PUSH2 0x1115 DUP3 PUSH2 0x10B0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1137 DUP2 PUSH2 0x10FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x726563656976652061646472657373206572726F720000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1172 PUSH1 0x15 DUP4 PUSH2 0xD9D JUMP JUMPDEST SWAP2 POP PUSH2 0x117D DUP3 PUSH2 0x113E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x119F DUP2 PUSH2 0x1166 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x616D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x11DA PUSH1 0x1D DUP4 PUSH2 0xD9D JUMP JUMPDEST SWAP2 POP PUSH2 0x11E5 DUP3 PUSH2 0x11A6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1207 DUP2 PUSH2 0x11CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 0xAD 0xB2 DUP5 SWAP2 MULMOD LT BASEFEE EXTCODECOPY CODECOPY DUP7 0xD2 0xD4 0xEB PUSH20 0x773AAAE8D79C088ECA136DD96262A8B57164736F PUSH13 0x634300081E0033000000000000 ",
							"sourceMap": "510:3084:5:-:0;;;673:97;;;;;;;;;;697:15;;;;;;;;;;;;;;;;;:5;:15;;;;;;:::i;:::-;;722:13;;;;;;;;;;;;;;;;;:7;:13;;;;;;:::i;:::-;;753:10;745:5;;:18;;;;;;;;;;;;;;;;;;510:3084;;7:99:6;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2287:1;2280:8;;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;510:3084:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@approve_1021": {
									"entryPoint": 350,
									"id": 1021,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_910": {
									"entryPoint": 2220,
									"id": 910,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mint_888": {
									"entryPoint": 1790,
									"id": 888,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@owner_794": {
									"entryPoint": 2400,
									"id": 794,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferFrom_1117": {
									"entryPoint": 763,
									"id": 1117,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_976": {
									"entryPoint": 2437,
									"id": 976,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3098,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3149,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3362,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3282,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3169,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3242,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_163a280d316d32dc884d8457bf7b961a97d91b637bc569fca476bdb5ef7f2712_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4350,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_24018abc2e20db31c7585e8930c7a4fe2930c0a68008931d64fd3f2cdfd1e43d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3853,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_28b2d23fc7282e29dd6685636c48a0f08799ad87e79d7f33b89f14976d6c6b0b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4061,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_71ce96f7bba828c9ec9c6caf13e767d67b4d6da65d7a1997a314facbf8a8502f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4558,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b198f41273ae43355193a8300bb5ca36ff0987665ede60997dd7b775f59a923a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4454,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d34e25fd6fb189c977249e70288827f495cca9d3e0ff8af33f277d1e83d12455_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3541,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d750f031ea2bf7a16d7a01258babc175afde3c4015f1663fe4d238ebe276e772_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e266b1228aea8c08bdeb8988184a32966f3ca9a4b22161e6f51997748691201f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3957,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ff820c3afa365cbbe14eae723bf721d1ee023b7ff02e0161c41be7e8280872af_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3645,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3405,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3460,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3257,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_163a280d316d32dc884d8457bf7b961a97d91b637bc569fca476bdb5ef7f2712__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24018abc2e20db31c7585e8930c7a4fe2930c0a68008931d64fd3f2cdfd1e43d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3887,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_28b2d23fc7282e29dd6685636c48a0f08799ad87e79d7f33b89f14976d6c6b0b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4095,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_71ce96f7bba828c9ec9c6caf13e767d67b4d6da65d7a1997a314facbf8a8502f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4592,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b198f41273ae43355193a8300bb5ca36ff0987665ede60997dd7b775f59a923a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4488,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d34e25fd6fb189c977249e70288827f495cca9d3e0ff8af33f277d1e83d12455__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3575,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d750f031ea2bf7a16d7a01258babc175afde3c4015f1663fe4d238ebe276e772__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3783,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e266b1228aea8c08bdeb8988184a32966f3ca9a4b22161e6f51997748691201f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3991,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ff820c3afa365cbbe14eae723bf721d1ee023b7ff02e0161c41be7e8280872af__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3679,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3420,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3485,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4221,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4170,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3059,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3231,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3028,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3118,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4125,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3024,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_163a280d316d32dc884d8457bf7b961a97d91b637bc569fca476bdb5ef7f2712": {
									"entryPoint": 4272,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_24018abc2e20db31c7585e8930c7a4fe2930c0a68008931d64fd3f2cdfd1e43d": {
									"entryPoint": 3813,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_28b2d23fc7282e29dd6685636c48a0f08799ad87e79d7f33b89f14976d6c6b0b": {
									"entryPoint": 4021,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_71ce96f7bba828c9ec9c6caf13e767d67b4d6da65d7a1997a314facbf8a8502f": {
									"entryPoint": 4518,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b198f41273ae43355193a8300bb5ca36ff0987665ede60997dd7b775f59a923a": {
									"entryPoint": 4414,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d34e25fd6fb189c977249e70288827f495cca9d3e0ff8af33f277d1e83d12455": {
									"entryPoint": 3501,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d750f031ea2bf7a16d7a01258babc175afde3c4015f1663fe4d238ebe276e772": {
									"entryPoint": 3709,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e266b1228aea8c08bdeb8988184a32966f3ca9a4b22161e6f51997748691201f": {
									"entryPoint": 3917,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ff820c3afa365cbbe14eae723bf721d1ee023b7ff02e0161c41be7e8280872af": {
									"entryPoint": 3605,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3076,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3127,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13341:6",
										"nodeType": "YulBlock",
										"src": "0:13341:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:81:6",
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nativeSrc": "389:65:6",
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:6",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nativeSrc": "400:54:6",
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nativeSrc": "511:51:6",
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nativeSrc": "521:35:6",
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nativeSrc": "532:24:6",
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:6",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:6",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nativeSrc": "611:79:6",
													"nodeType": "YulBlock",
													"src": "611:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:6",
																"nodeType": "YulBlock",
																"src": "668:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:6",
																					"nodeType": "YulLiteral",
																					"src": "677:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:6",
																					"nodeType": "YulLiteral",
																					"src": "680:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:6"
																			},
																			"nativeSrc": "670:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:6"
																		},
																		"nativeSrc": "670:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:6"
																				},
																				"nativeSrc": "641:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:6"
																		},
																		"nativeSrc": "631:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:6"
																},
																"nativeSrc": "624:43:6",
																"nodeType": "YulFunctionCall",
																"src": "624:43:6"
															},
															"nativeSrc": "621:63:6",
															"nodeType": "YulIf",
															"src": "621:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:6",
														"nodeType": "YulTypedName",
														"src": "604:5:6",
														"type": ""
													}
												],
												"src": "568:122:6"
											},
											{
												"body": {
													"nativeSrc": "748:87:6",
													"nodeType": "YulBlock",
													"src": "748:87:6",
													"statements": [
														{
															"nativeSrc": "758:29:6",
															"nodeType": "YulAssignment",
															"src": "758:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:6"
																},
																"nativeSrc": "767:20:6",
																"nodeType": "YulFunctionCall",
																"src": "767:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:6"
																},
																"nativeSrc": "796:33:6",
																"nodeType": "YulFunctionCall",
																"src": "796:33:6"
															},
															"nativeSrc": "796:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:6",
														"nodeType": "YulTypedName",
														"src": "726:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:6",
														"nodeType": "YulTypedName",
														"src": "734:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:6",
														"nodeType": "YulTypedName",
														"src": "742:5:6",
														"type": ""
													}
												],
												"src": "696:139:6"
											},
											{
												"body": {
													"nativeSrc": "886:32:6",
													"nodeType": "YulBlock",
													"src": "886:32:6",
													"statements": [
														{
															"nativeSrc": "896:16:6",
															"nodeType": "YulAssignment",
															"src": "896:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "907:5:6",
																"nodeType": "YulIdentifier",
																"src": "907:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "896:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "841:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "868:5:6",
														"nodeType": "YulTypedName",
														"src": "868:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "878:7:6",
														"nodeType": "YulTypedName",
														"src": "878:7:6",
														"type": ""
													}
												],
												"src": "841:77:6"
											},
											{
												"body": {
													"nativeSrc": "967:79:6",
													"nodeType": "YulBlock",
													"src": "967:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1024:16:6",
																"nodeType": "YulBlock",
																"src": "1024:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1033:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1036:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1026:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:6"
																			},
																			"nativeSrc": "1026:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:6"
																		},
																		"nativeSrc": "1026:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "990:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1015:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "997:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:6"
																				},
																				"nativeSrc": "997:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "987:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:6"
																		},
																		"nativeSrc": "987:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "980:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:6"
																},
																"nativeSrc": "980:43:6",
																"nodeType": "YulFunctionCall",
																"src": "980:43:6"
															},
															"nativeSrc": "977:63:6",
															"nodeType": "YulIf",
															"src": "977:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "924:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "960:5:6",
														"nodeType": "YulTypedName",
														"src": "960:5:6",
														"type": ""
													}
												],
												"src": "924:122:6"
											},
											{
												"body": {
													"nativeSrc": "1104:87:6",
													"nodeType": "YulBlock",
													"src": "1104:87:6",
													"statements": [
														{
															"nativeSrc": "1114:29:6",
															"nodeType": "YulAssignment",
															"src": "1114:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1136:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1123:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:6"
																},
																"nativeSrc": "1123:20:6",
																"nodeType": "YulFunctionCall",
																"src": "1123:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1114:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1179:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1152:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:6"
																},
																"nativeSrc": "1152:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1152:33:6"
															},
															"nativeSrc": "1152:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1052:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1082:6:6",
														"nodeType": "YulTypedName",
														"src": "1082:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1090:3:6",
														"nodeType": "YulTypedName",
														"src": "1090:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1098:5:6",
														"nodeType": "YulTypedName",
														"src": "1098:5:6",
														"type": ""
													}
												],
												"src": "1052:139:6"
											},
											{
												"body": {
													"nativeSrc": "1280:391:6",
													"nodeType": "YulBlock",
													"src": "1280:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1326:83:6",
																"nodeType": "YulBlock",
																"src": "1326:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1328:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:6"
																			},
																			"nativeSrc": "1328:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:6"
																		},
																		"nativeSrc": "1328:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1301:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1310:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1297:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:6"
																		},
																		"nativeSrc": "1297:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1322:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1293:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:6"
																},
																"nativeSrc": "1293:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1293:32:6"
															},
															"nativeSrc": "1290:119:6",
															"nodeType": "YulIf",
															"src": "1290:119:6"
														},
														{
															"nativeSrc": "1419:117:6",
															"nodeType": "YulBlock",
															"src": "1419:117:6",
															"statements": [
																{
																	"nativeSrc": "1434:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1448:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1438:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1463:63:6",
																	"nodeType": "YulAssignment",
																	"src": "1463:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1498:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1509:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1494:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:6"
																				},
																				"nativeSrc": "1494:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1518:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1473:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:6"
																		},
																		"nativeSrc": "1473:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1463:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1546:118:6",
															"nodeType": "YulBlock",
															"src": "1546:118:6",
															"statements": [
																{
																	"nativeSrc": "1561:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1575:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1565:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1591:63:6",
																	"nodeType": "YulAssignment",
																	"src": "1591:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1626:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1637:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1622:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:6"
																				},
																				"nativeSrc": "1622:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1646:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1601:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:6"
																		},
																		"nativeSrc": "1601:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1591:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1197:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1242:9:6",
														"nodeType": "YulTypedName",
														"src": "1242:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1253:7:6",
														"nodeType": "YulTypedName",
														"src": "1253:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1265:6:6",
														"nodeType": "YulTypedName",
														"src": "1265:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1273:6:6",
														"nodeType": "YulTypedName",
														"src": "1273:6:6",
														"type": ""
													}
												],
												"src": "1197:474:6"
											},
											{
												"body": {
													"nativeSrc": "1719:48:6",
													"nodeType": "YulBlock",
													"src": "1719:48:6",
													"statements": [
														{
															"nativeSrc": "1729:32:6",
															"nodeType": "YulAssignment",
															"src": "1729:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1754:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1754:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1747:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1747:6:6"
																		},
																		"nativeSrc": "1747:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1747:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1740:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1740:6:6"
																},
																"nativeSrc": "1740:21:6",
																"nodeType": "YulFunctionCall",
																"src": "1740:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1729:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1729:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1677:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1701:5:6",
														"nodeType": "YulTypedName",
														"src": "1701:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1711:7:6",
														"nodeType": "YulTypedName",
														"src": "1711:7:6",
														"type": ""
													}
												],
												"src": "1677:90:6"
											},
											{
												"body": {
													"nativeSrc": "1832:50:6",
													"nodeType": "YulBlock",
													"src": "1832:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1849:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1849:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1854:14:6",
																			"nodeType": "YulIdentifier",
																			"src": "1854:14:6"
																		},
																		"nativeSrc": "1854:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1854:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1842:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1842:6:6"
																},
																"nativeSrc": "1842:34:6",
																"nodeType": "YulFunctionCall",
																"src": "1842:34:6"
															},
															"nativeSrc": "1842:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "1842:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1773:109:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1820:5:6",
														"nodeType": "YulTypedName",
														"src": "1820:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1827:3:6",
														"nodeType": "YulTypedName",
														"src": "1827:3:6",
														"type": ""
													}
												],
												"src": "1773:109:6"
											},
											{
												"body": {
													"nativeSrc": "1980:118:6",
													"nodeType": "YulBlock",
													"src": "1980:118:6",
													"statements": [
														{
															"nativeSrc": "1990:26:6",
															"nodeType": "YulAssignment",
															"src": "1990:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2002:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2002:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2013:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2013:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1998:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1998:3:6"
																},
																"nativeSrc": "1998:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1998:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1990:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1990:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2064:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2064:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2077:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2077:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2088:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2088:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2073:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2073:3:6"
																		},
																		"nativeSrc": "2073:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2073:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "2026:37:6",
																	"nodeType": "YulIdentifier",
																	"src": "2026:37:6"
																},
																"nativeSrc": "2026:65:6",
																"nodeType": "YulFunctionCall",
																"src": "2026:65:6"
															},
															"nativeSrc": "2026:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "2026:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1888:210:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1952:9:6",
														"nodeType": "YulTypedName",
														"src": "1952:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1964:6:6",
														"nodeType": "YulTypedName",
														"src": "1964:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1975:4:6",
														"nodeType": "YulTypedName",
														"src": "1975:4:6",
														"type": ""
													}
												],
												"src": "1888:210:6"
											},
											{
												"body": {
													"nativeSrc": "2204:519:6",
													"nodeType": "YulBlock",
													"src": "2204:519:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2250:83:6",
																"nodeType": "YulBlock",
																"src": "2250:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2252:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2252:77:6"
																			},
																			"nativeSrc": "2252:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2252:79:6"
																		},
																		"nativeSrc": "2252:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2252:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2225:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2225:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2234:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2234:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2221:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2221:3:6"
																		},
																		"nativeSrc": "2221:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2221:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2246:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2246:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2217:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2217:3:6"
																},
																"nativeSrc": "2217:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2217:32:6"
															},
															"nativeSrc": "2214:119:6",
															"nodeType": "YulIf",
															"src": "2214:119:6"
														},
														{
															"nativeSrc": "2343:117:6",
															"nodeType": "YulBlock",
															"src": "2343:117:6",
															"statements": [
																{
																	"nativeSrc": "2358:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2358:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2372:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2372:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2362:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2362:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2387:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2387:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2422:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2422:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2433:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2433:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2418:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2418:3:6"
																				},
																				"nativeSrc": "2418:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2418:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2442:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2442:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2397:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2397:20:6"
																		},
																		"nativeSrc": "2397:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2397:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2387:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2387:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2470:118:6",
															"nodeType": "YulBlock",
															"src": "2470:118:6",
															"statements": [
																{
																	"nativeSrc": "2485:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2485:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2499:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2499:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2489:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2489:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2515:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2515:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2550:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2550:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2561:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2561:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2546:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2546:3:6"
																				},
																				"nativeSrc": "2546:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2546:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2570:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2570:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2525:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2525:20:6"
																		},
																		"nativeSrc": "2525:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2525:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2515:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2515:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2598:118:6",
															"nodeType": "YulBlock",
															"src": "2598:118:6",
															"statements": [
																{
																	"nativeSrc": "2613:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2613:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2627:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2627:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2617:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2617:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2643:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2643:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2678:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2678:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2689:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2689:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2674:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2674:3:6"
																				},
																				"nativeSrc": "2674:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2674:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2698:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2698:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2653:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2653:20:6"
																		},
																		"nativeSrc": "2653:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2653:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "2643:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2643:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "2104:619:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2158:9:6",
														"nodeType": "YulTypedName",
														"src": "2158:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2169:7:6",
														"nodeType": "YulTypedName",
														"src": "2169:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2181:6:6",
														"nodeType": "YulTypedName",
														"src": "2181:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2189:6:6",
														"nodeType": "YulTypedName",
														"src": "2189:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2197:6:6",
														"nodeType": "YulTypedName",
														"src": "2197:6:6",
														"type": ""
													}
												],
												"src": "2104:619:6"
											},
											{
												"body": {
													"nativeSrc": "2795:263:6",
													"nodeType": "YulBlock",
													"src": "2795:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2841:83:6",
																"nodeType": "YulBlock",
																"src": "2841:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2843:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2843:77:6"
																			},
																			"nativeSrc": "2843:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2843:79:6"
																		},
																		"nativeSrc": "2843:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2843:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2816:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2816:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2825:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2825:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2812:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2812:3:6"
																		},
																		"nativeSrc": "2812:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2812:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2837:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2837:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2808:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2808:3:6"
																},
																"nativeSrc": "2808:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2808:32:6"
															},
															"nativeSrc": "2805:119:6",
															"nodeType": "YulIf",
															"src": "2805:119:6"
														},
														{
															"nativeSrc": "2934:117:6",
															"nodeType": "YulBlock",
															"src": "2934:117:6",
															"statements": [
																{
																	"nativeSrc": "2949:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2949:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2963:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2963:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2953:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2953:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2978:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2978:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3013:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3013:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3024:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3024:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3009:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3009:3:6"
																				},
																				"nativeSrc": "3009:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3009:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3033:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3033:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2988:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2988:20:6"
																		},
																		"nativeSrc": "2988:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2988:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2978:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2978:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2729:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2765:9:6",
														"nodeType": "YulTypedName",
														"src": "2765:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2776:7:6",
														"nodeType": "YulTypedName",
														"src": "2776:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2788:6:6",
														"nodeType": "YulTypedName",
														"src": "2788:6:6",
														"type": ""
													}
												],
												"src": "2729:329:6"
											},
											{
												"body": {
													"nativeSrc": "3129:53:6",
													"nodeType": "YulBlock",
													"src": "3129:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3146:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3146:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3169:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3169:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3151:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "3151:17:6"
																		},
																		"nativeSrc": "3151:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3151:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3139:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3139:6:6"
																},
																"nativeSrc": "3139:37:6",
																"nodeType": "YulFunctionCall",
																"src": "3139:37:6"
															},
															"nativeSrc": "3139:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "3139:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3064:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3117:5:6",
														"nodeType": "YulTypedName",
														"src": "3117:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3124:3:6",
														"nodeType": "YulTypedName",
														"src": "3124:3:6",
														"type": ""
													}
												],
												"src": "3064:118:6"
											},
											{
												"body": {
													"nativeSrc": "3286:124:6",
													"nodeType": "YulBlock",
													"src": "3286:124:6",
													"statements": [
														{
															"nativeSrc": "3296:26:6",
															"nodeType": "YulAssignment",
															"src": "3296:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3308:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3308:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3319:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3319:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3304:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3304:3:6"
																},
																"nativeSrc": "3304:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3304:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3296:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3296:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3376:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3376:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3389:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3389:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3400:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3400:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3385:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3385:3:6"
																		},
																		"nativeSrc": "3385:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3385:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3332:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "3332:43:6"
																},
																"nativeSrc": "3332:71:6",
																"nodeType": "YulFunctionCall",
																"src": "3332:71:6"
															},
															"nativeSrc": "3332:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "3332:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3188:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3258:9:6",
														"nodeType": "YulTypedName",
														"src": "3258:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3270:6:6",
														"nodeType": "YulTypedName",
														"src": "3270:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3281:4:6",
														"nodeType": "YulTypedName",
														"src": "3281:4:6",
														"type": ""
													}
												],
												"src": "3188:222:6"
											},
											{
												"body": {
													"nativeSrc": "3481:53:6",
													"nodeType": "YulBlock",
													"src": "3481:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3498:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3498:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3521:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3521:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3503:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "3503:17:6"
																		},
																		"nativeSrc": "3503:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3503:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3491:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3491:6:6"
																},
																"nativeSrc": "3491:37:6",
																"nodeType": "YulFunctionCall",
																"src": "3491:37:6"
															},
															"nativeSrc": "3491:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "3491:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3416:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3469:5:6",
														"nodeType": "YulTypedName",
														"src": "3469:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3476:3:6",
														"nodeType": "YulTypedName",
														"src": "3476:3:6",
														"type": ""
													}
												],
												"src": "3416:118:6"
											},
											{
												"body": {
													"nativeSrc": "3638:124:6",
													"nodeType": "YulBlock",
													"src": "3638:124:6",
													"statements": [
														{
															"nativeSrc": "3648:26:6",
															"nodeType": "YulAssignment",
															"src": "3648:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3660:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3660:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3671:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3671:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3656:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3656:3:6"
																},
																"nativeSrc": "3656:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3656:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3648:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3648:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3728:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3728:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3741:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3741:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3752:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3752:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3737:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3737:3:6"
																		},
																		"nativeSrc": "3737:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3737:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3684:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "3684:43:6"
																},
																"nativeSrc": "3684:71:6",
																"nodeType": "YulFunctionCall",
																"src": "3684:71:6"
															},
															"nativeSrc": "3684:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "3684:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3540:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3610:9:6",
														"nodeType": "YulTypedName",
														"src": "3610:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3622:6:6",
														"nodeType": "YulTypedName",
														"src": "3622:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3633:4:6",
														"nodeType": "YulTypedName",
														"src": "3633:4:6",
														"type": ""
													}
												],
												"src": "3540:222:6"
											},
											{
												"body": {
													"nativeSrc": "3864:73:6",
													"nodeType": "YulBlock",
													"src": "3864:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3881:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3881:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3886:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3886:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3874:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3874:6:6"
																},
																"nativeSrc": "3874:19:6",
																"nodeType": "YulFunctionCall",
																"src": "3874:19:6"
															},
															"nativeSrc": "3874:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "3874:19:6"
														},
														{
															"nativeSrc": "3902:29:6",
															"nodeType": "YulAssignment",
															"src": "3902:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3921:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3921:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3926:4:6",
																		"nodeType": "YulLiteral",
																		"src": "3926:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3917:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3917:3:6"
																},
																"nativeSrc": "3917:14:6",
																"nodeType": "YulFunctionCall",
																"src": "3917:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3902:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "3902:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3768:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3836:3:6",
														"nodeType": "YulTypedName",
														"src": "3836:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3841:6:6",
														"nodeType": "YulTypedName",
														"src": "3841:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3852:11:6",
														"nodeType": "YulTypedName",
														"src": "3852:11:6",
														"type": ""
													}
												],
												"src": "3768:169:6"
											},
											{
												"body": {
													"nativeSrc": "4049:65:6",
													"nodeType": "YulBlock",
													"src": "4049:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4071:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4071:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4079:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4079:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4067:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4067:3:6"
																		},
																		"nativeSrc": "4067:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4067:14:6"
																	},
																	{
																		"hexValue": "7370656e6465722061646472657373206572726f72",
																		"kind": "string",
																		"nativeSrc": "4083:23:6",
																		"nodeType": "YulLiteral",
																		"src": "4083:23:6",
																		"type": "",
																		"value": "spender address error"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4060:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4060:6:6"
																},
																"nativeSrc": "4060:47:6",
																"nodeType": "YulFunctionCall",
																"src": "4060:47:6"
															},
															"nativeSrc": "4060:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "4060:47:6"
														}
													]
												},
												"name": "store_literal_in_memory_d34e25fd6fb189c977249e70288827f495cca9d3e0ff8af33f277d1e83d12455",
												"nativeSrc": "3943:171:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4041:6:6",
														"nodeType": "YulTypedName",
														"src": "4041:6:6",
														"type": ""
													}
												],
												"src": "3943:171:6"
											},
											{
												"body": {
													"nativeSrc": "4266:220:6",
													"nodeType": "YulBlock",
													"src": "4266:220:6",
													"statements": [
														{
															"nativeSrc": "4276:74:6",
															"nodeType": "YulAssignment",
															"src": "4276:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4342:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4342:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4347:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4347:2:6",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4283:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "4283:58:6"
																},
																"nativeSrc": "4283:67:6",
																"nodeType": "YulFunctionCall",
																"src": "4283:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4276:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4276:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4448:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4448:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d34e25fd6fb189c977249e70288827f495cca9d3e0ff8af33f277d1e83d12455",
																	"nativeSrc": "4359:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "4359:88:6"
																},
																"nativeSrc": "4359:93:6",
																"nodeType": "YulFunctionCall",
																"src": "4359:93:6"
															},
															"nativeSrc": "4359:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "4359:93:6"
														},
														{
															"nativeSrc": "4461:19:6",
															"nodeType": "YulAssignment",
															"src": "4461:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4472:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4472:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4477:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4477:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4468:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4468:3:6"
																},
																"nativeSrc": "4468:12:6",
																"nodeType": "YulFunctionCall",
																"src": "4468:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4461:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4461:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d34e25fd6fb189c977249e70288827f495cca9d3e0ff8af33f277d1e83d12455_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4120:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4254:3:6",
														"nodeType": "YulTypedName",
														"src": "4254:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4262:3:6",
														"nodeType": "YulTypedName",
														"src": "4262:3:6",
														"type": ""
													}
												],
												"src": "4120:366:6"
											},
											{
												"body": {
													"nativeSrc": "4663:248:6",
													"nodeType": "YulBlock",
													"src": "4663:248:6",
													"statements": [
														{
															"nativeSrc": "4673:26:6",
															"nodeType": "YulAssignment",
															"src": "4673:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4685:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4685:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4696:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4696:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4681:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4681:3:6"
																},
																"nativeSrc": "4681:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4681:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4673:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4673:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4720:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4720:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4731:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4731:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4716:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4716:3:6"
																		},
																		"nativeSrc": "4716:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4716:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4739:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "4739:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4745:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4745:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4735:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4735:3:6"
																		},
																		"nativeSrc": "4735:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4735:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4709:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4709:6:6"
																},
																"nativeSrc": "4709:47:6",
																"nodeType": "YulFunctionCall",
																"src": "4709:47:6"
															},
															"nativeSrc": "4709:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "4709:47:6"
														},
														{
															"nativeSrc": "4765:139:6",
															"nodeType": "YulAssignment",
															"src": "4765:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4899:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4899:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d34e25fd6fb189c977249e70288827f495cca9d3e0ff8af33f277d1e83d12455_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4773:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "4773:124:6"
																},
																"nativeSrc": "4773:131:6",
																"nodeType": "YulFunctionCall",
																"src": "4773:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4765:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4765:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d34e25fd6fb189c977249e70288827f495cca9d3e0ff8af33f277d1e83d12455__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4492:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4643:9:6",
														"nodeType": "YulTypedName",
														"src": "4643:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4658:4:6",
														"nodeType": "YulTypedName",
														"src": "4658:4:6",
														"type": ""
													}
												],
												"src": "4492:419:6"
											},
											{
												"body": {
													"nativeSrc": "5023:68:6",
													"nodeType": "YulBlock",
													"src": "5023:68:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5045:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5045:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5053:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5053:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5041:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5041:3:6"
																		},
																		"nativeSrc": "5041:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5041:14:6"
																	},
																	{
																		"hexValue": "616d6f756e74206d757374206772656574207468616e2030",
																		"kind": "string",
																		"nativeSrc": "5057:26:6",
																		"nodeType": "YulLiteral",
																		"src": "5057:26:6",
																		"type": "",
																		"value": "amount must greet than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5034:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5034:6:6"
																},
																"nativeSrc": "5034:50:6",
																"nodeType": "YulFunctionCall",
																"src": "5034:50:6"
															},
															"nativeSrc": "5034:50:6",
															"nodeType": "YulExpressionStatement",
															"src": "5034:50:6"
														}
													]
												},
												"name": "store_literal_in_memory_ff820c3afa365cbbe14eae723bf721d1ee023b7ff02e0161c41be7e8280872af",
												"nativeSrc": "4917:174:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5015:6:6",
														"nodeType": "YulTypedName",
														"src": "5015:6:6",
														"type": ""
													}
												],
												"src": "4917:174:6"
											},
											{
												"body": {
													"nativeSrc": "5243:220:6",
													"nodeType": "YulBlock",
													"src": "5243:220:6",
													"statements": [
														{
															"nativeSrc": "5253:74:6",
															"nodeType": "YulAssignment",
															"src": "5253:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5319:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5319:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5324:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5324:2:6",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5260:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "5260:58:6"
																},
																"nativeSrc": "5260:67:6",
																"nodeType": "YulFunctionCall",
																"src": "5260:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5253:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5253:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5425:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5425:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ff820c3afa365cbbe14eae723bf721d1ee023b7ff02e0161c41be7e8280872af",
																	"nativeSrc": "5336:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "5336:88:6"
																},
																"nativeSrc": "5336:93:6",
																"nodeType": "YulFunctionCall",
																"src": "5336:93:6"
															},
															"nativeSrc": "5336:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "5336:93:6"
														},
														{
															"nativeSrc": "5438:19:6",
															"nodeType": "YulAssignment",
															"src": "5438:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5449:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5449:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5454:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5454:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5445:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5445:3:6"
																},
																"nativeSrc": "5445:12:6",
																"nodeType": "YulFunctionCall",
																"src": "5445:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5438:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5438:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ff820c3afa365cbbe14eae723bf721d1ee023b7ff02e0161c41be7e8280872af_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5097:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5231:3:6",
														"nodeType": "YulTypedName",
														"src": "5231:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5239:3:6",
														"nodeType": "YulTypedName",
														"src": "5239:3:6",
														"type": ""
													}
												],
												"src": "5097:366:6"
											},
											{
												"body": {
													"nativeSrc": "5640:248:6",
													"nodeType": "YulBlock",
													"src": "5640:248:6",
													"statements": [
														{
															"nativeSrc": "5650:26:6",
															"nodeType": "YulAssignment",
															"src": "5650:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5662:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5662:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5673:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5673:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5658:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5658:3:6"
																},
																"nativeSrc": "5658:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5658:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5650:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5650:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5697:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5697:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5708:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5708:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5693:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5693:3:6"
																		},
																		"nativeSrc": "5693:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5693:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5716:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "5716:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5722:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5722:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5712:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5712:3:6"
																		},
																		"nativeSrc": "5712:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5712:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5686:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5686:6:6"
																},
																"nativeSrc": "5686:47:6",
																"nodeType": "YulFunctionCall",
																"src": "5686:47:6"
															},
															"nativeSrc": "5686:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "5686:47:6"
														},
														{
															"nativeSrc": "5742:139:6",
															"nodeType": "YulAssignment",
															"src": "5742:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5876:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5876:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ff820c3afa365cbbe14eae723bf721d1ee023b7ff02e0161c41be7e8280872af_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5750:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "5750:124:6"
																},
																"nativeSrc": "5750:131:6",
																"nodeType": "YulFunctionCall",
																"src": "5750:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5742:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5742:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ff820c3afa365cbbe14eae723bf721d1ee023b7ff02e0161c41be7e8280872af__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5469:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5620:9:6",
														"nodeType": "YulTypedName",
														"src": "5620:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5635:4:6",
														"nodeType": "YulTypedName",
														"src": "5635:4:6",
														"type": ""
													}
												],
												"src": "5469:419:6"
											},
											{
												"body": {
													"nativeSrc": "6000:62:6",
													"nodeType": "YulBlock",
													"src": "6000:62:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6022:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6022:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6030:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6030:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6018:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6018:3:6"
																		},
																		"nativeSrc": "6018:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6018:14:6"
																	},
																	{
																		"hexValue": "66726f6d2061646472657373206572726f72",
																		"kind": "string",
																		"nativeSrc": "6034:20:6",
																		"nodeType": "YulLiteral",
																		"src": "6034:20:6",
																		"type": "",
																		"value": "from address error"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6011:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6011:6:6"
																},
																"nativeSrc": "6011:44:6",
																"nodeType": "YulFunctionCall",
																"src": "6011:44:6"
															},
															"nativeSrc": "6011:44:6",
															"nodeType": "YulExpressionStatement",
															"src": "6011:44:6"
														}
													]
												},
												"name": "store_literal_in_memory_d750f031ea2bf7a16d7a01258babc175afde3c4015f1663fe4d238ebe276e772",
												"nativeSrc": "5894:168:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5992:6:6",
														"nodeType": "YulTypedName",
														"src": "5992:6:6",
														"type": ""
													}
												],
												"src": "5894:168:6"
											},
											{
												"body": {
													"nativeSrc": "6214:220:6",
													"nodeType": "YulBlock",
													"src": "6214:220:6",
													"statements": [
														{
															"nativeSrc": "6224:74:6",
															"nodeType": "YulAssignment",
															"src": "6224:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6290:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6290:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6295:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6295:2:6",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6231:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "6231:58:6"
																},
																"nativeSrc": "6231:67:6",
																"nodeType": "YulFunctionCall",
																"src": "6231:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6224:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6224:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6396:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6396:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d750f031ea2bf7a16d7a01258babc175afde3c4015f1663fe4d238ebe276e772",
																	"nativeSrc": "6307:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "6307:88:6"
																},
																"nativeSrc": "6307:93:6",
																"nodeType": "YulFunctionCall",
																"src": "6307:93:6"
															},
															"nativeSrc": "6307:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "6307:93:6"
														},
														{
															"nativeSrc": "6409:19:6",
															"nodeType": "YulAssignment",
															"src": "6409:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6420:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6420:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6425:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6425:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6416:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6416:3:6"
																},
																"nativeSrc": "6416:12:6",
																"nodeType": "YulFunctionCall",
																"src": "6416:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6409:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6409:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d750f031ea2bf7a16d7a01258babc175afde3c4015f1663fe4d238ebe276e772_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6068:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6202:3:6",
														"nodeType": "YulTypedName",
														"src": "6202:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6210:3:6",
														"nodeType": "YulTypedName",
														"src": "6210:3:6",
														"type": ""
													}
												],
												"src": "6068:366:6"
											},
											{
												"body": {
													"nativeSrc": "6611:248:6",
													"nodeType": "YulBlock",
													"src": "6611:248:6",
													"statements": [
														{
															"nativeSrc": "6621:26:6",
															"nodeType": "YulAssignment",
															"src": "6621:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6633:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6633:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6644:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6644:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6629:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6629:3:6"
																},
																"nativeSrc": "6629:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6629:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6621:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6621:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6668:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6668:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6679:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6679:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6664:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6664:3:6"
																		},
																		"nativeSrc": "6664:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6664:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6687:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "6687:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6693:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6693:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6683:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6683:3:6"
																		},
																		"nativeSrc": "6683:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6683:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6657:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6657:6:6"
																},
																"nativeSrc": "6657:47:6",
																"nodeType": "YulFunctionCall",
																"src": "6657:47:6"
															},
															"nativeSrc": "6657:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "6657:47:6"
														},
														{
															"nativeSrc": "6713:139:6",
															"nodeType": "YulAssignment",
															"src": "6713:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6847:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6847:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d750f031ea2bf7a16d7a01258babc175afde3c4015f1663fe4d238ebe276e772_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6721:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "6721:124:6"
																},
																"nativeSrc": "6721:131:6",
																"nodeType": "YulFunctionCall",
																"src": "6721:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6713:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6713:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d750f031ea2bf7a16d7a01258babc175afde3c4015f1663fe4d238ebe276e772__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6440:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6591:9:6",
														"nodeType": "YulTypedName",
														"src": "6591:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6606:4:6",
														"nodeType": "YulTypedName",
														"src": "6606:4:6",
														"type": ""
													}
												],
												"src": "6440:419:6"
											},
											{
												"body": {
													"nativeSrc": "6971:60:6",
													"nodeType": "YulBlock",
													"src": "6971:60:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6993:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6993:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7001:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7001:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6989:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6989:3:6"
																		},
																		"nativeSrc": "6989:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6989:14:6"
																	},
																	{
																		"hexValue": "746f2061646472657373206572726f72",
																		"kind": "string",
																		"nativeSrc": "7005:18:6",
																		"nodeType": "YulLiteral",
																		"src": "7005:18:6",
																		"type": "",
																		"value": "to address error"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6982:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6982:6:6"
																},
																"nativeSrc": "6982:42:6",
																"nodeType": "YulFunctionCall",
																"src": "6982:42:6"
															},
															"nativeSrc": "6982:42:6",
															"nodeType": "YulExpressionStatement",
															"src": "6982:42:6"
														}
													]
												},
												"name": "store_literal_in_memory_24018abc2e20db31c7585e8930c7a4fe2930c0a68008931d64fd3f2cdfd1e43d",
												"nativeSrc": "6865:166:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6963:6:6",
														"nodeType": "YulTypedName",
														"src": "6963:6:6",
														"type": ""
													}
												],
												"src": "6865:166:6"
											},
											{
												"body": {
													"nativeSrc": "7183:220:6",
													"nodeType": "YulBlock",
													"src": "7183:220:6",
													"statements": [
														{
															"nativeSrc": "7193:74:6",
															"nodeType": "YulAssignment",
															"src": "7193:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7259:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7259:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7264:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7264:2:6",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7200:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "7200:58:6"
																},
																"nativeSrc": "7200:67:6",
																"nodeType": "YulFunctionCall",
																"src": "7200:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7193:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7193:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7365:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7365:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_24018abc2e20db31c7585e8930c7a4fe2930c0a68008931d64fd3f2cdfd1e43d",
																	"nativeSrc": "7276:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "7276:88:6"
																},
																"nativeSrc": "7276:93:6",
																"nodeType": "YulFunctionCall",
																"src": "7276:93:6"
															},
															"nativeSrc": "7276:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "7276:93:6"
														},
														{
															"nativeSrc": "7378:19:6",
															"nodeType": "YulAssignment",
															"src": "7378:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7389:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7389:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7394:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7394:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7385:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7385:3:6"
																},
																"nativeSrc": "7385:12:6",
																"nodeType": "YulFunctionCall",
																"src": "7385:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7378:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7378:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_24018abc2e20db31c7585e8930c7a4fe2930c0a68008931d64fd3f2cdfd1e43d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7037:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7171:3:6",
														"nodeType": "YulTypedName",
														"src": "7171:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7179:3:6",
														"nodeType": "YulTypedName",
														"src": "7179:3:6",
														"type": ""
													}
												],
												"src": "7037:366:6"
											},
											{
												"body": {
													"nativeSrc": "7580:248:6",
													"nodeType": "YulBlock",
													"src": "7580:248:6",
													"statements": [
														{
															"nativeSrc": "7590:26:6",
															"nodeType": "YulAssignment",
															"src": "7590:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7602:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7602:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7613:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7613:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7598:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7598:3:6"
																},
																"nativeSrc": "7598:18:6",
																"nodeType": "YulFunctionCall",
																"src": "7598:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7590:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7590:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7637:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7637:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7648:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7648:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7633:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7633:3:6"
																		},
																		"nativeSrc": "7633:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7633:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7656:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "7656:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7662:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7662:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7652:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7652:3:6"
																		},
																		"nativeSrc": "7652:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7652:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7626:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7626:6:6"
																},
																"nativeSrc": "7626:47:6",
																"nodeType": "YulFunctionCall",
																"src": "7626:47:6"
															},
															"nativeSrc": "7626:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "7626:47:6"
														},
														{
															"nativeSrc": "7682:139:6",
															"nodeType": "YulAssignment",
															"src": "7682:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7816:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7816:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_24018abc2e20db31c7585e8930c7a4fe2930c0a68008931d64fd3f2cdfd1e43d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7690:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "7690:124:6"
																},
																"nativeSrc": "7690:131:6",
																"nodeType": "YulFunctionCall",
																"src": "7690:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7682:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7682:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24018abc2e20db31c7585e8930c7a4fe2930c0a68008931d64fd3f2cdfd1e43d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7409:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7560:9:6",
														"nodeType": "YulTypedName",
														"src": "7560:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7575:4:6",
														"nodeType": "YulTypedName",
														"src": "7575:4:6",
														"type": ""
													}
												],
												"src": "7409:419:6"
											},
											{
												"body": {
													"nativeSrc": "7940:62:6",
													"nodeType": "YulBlock",
													"src": "7940:62:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7962:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "7962:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7970:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7970:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7958:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7958:3:6"
																		},
																		"nativeSrc": "7958:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7958:14:6"
																	},
																	{
																		"hexValue": "616c6c6f77616e6365206578636565646564",
																		"kind": "string",
																		"nativeSrc": "7974:20:6",
																		"nodeType": "YulLiteral",
																		"src": "7974:20:6",
																		"type": "",
																		"value": "allowance exceeded"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7951:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7951:6:6"
																},
																"nativeSrc": "7951:44:6",
																"nodeType": "YulFunctionCall",
																"src": "7951:44:6"
															},
															"nativeSrc": "7951:44:6",
															"nodeType": "YulExpressionStatement",
															"src": "7951:44:6"
														}
													]
												},
												"name": "store_literal_in_memory_e266b1228aea8c08bdeb8988184a32966f3ca9a4b22161e6f51997748691201f",
												"nativeSrc": "7834:168:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7932:6:6",
														"nodeType": "YulTypedName",
														"src": "7932:6:6",
														"type": ""
													}
												],
												"src": "7834:168:6"
											},
											{
												"body": {
													"nativeSrc": "8154:220:6",
													"nodeType": "YulBlock",
													"src": "8154:220:6",
													"statements": [
														{
															"nativeSrc": "8164:74:6",
															"nodeType": "YulAssignment",
															"src": "8164:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8230:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8230:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8235:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8235:2:6",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8171:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "8171:58:6"
																},
																"nativeSrc": "8171:67:6",
																"nodeType": "YulFunctionCall",
																"src": "8171:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8164:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8164:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8336:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8336:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e266b1228aea8c08bdeb8988184a32966f3ca9a4b22161e6f51997748691201f",
																	"nativeSrc": "8247:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "8247:88:6"
																},
																"nativeSrc": "8247:93:6",
																"nodeType": "YulFunctionCall",
																"src": "8247:93:6"
															},
															"nativeSrc": "8247:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "8247:93:6"
														},
														{
															"nativeSrc": "8349:19:6",
															"nodeType": "YulAssignment",
															"src": "8349:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8360:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8360:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8365:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8365:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8356:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8356:3:6"
																},
																"nativeSrc": "8356:12:6",
																"nodeType": "YulFunctionCall",
																"src": "8356:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8349:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8349:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e266b1228aea8c08bdeb8988184a32966f3ca9a4b22161e6f51997748691201f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8008:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8142:3:6",
														"nodeType": "YulTypedName",
														"src": "8142:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8150:3:6",
														"nodeType": "YulTypedName",
														"src": "8150:3:6",
														"type": ""
													}
												],
												"src": "8008:366:6"
											},
											{
												"body": {
													"nativeSrc": "8551:248:6",
													"nodeType": "YulBlock",
													"src": "8551:248:6",
													"statements": [
														{
															"nativeSrc": "8561:26:6",
															"nodeType": "YulAssignment",
															"src": "8561:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8573:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8573:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8584:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8584:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8569:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8569:3:6"
																},
																"nativeSrc": "8569:18:6",
																"nodeType": "YulFunctionCall",
																"src": "8569:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8561:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8608:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8608:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8619:1:6",
																				"nodeType": "YulLiteral",
																				"src": "8619:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8604:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8604:3:6"
																		},
																		"nativeSrc": "8604:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8604:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8627:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8627:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8633:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8633:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8623:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8623:3:6"
																		},
																		"nativeSrc": "8623:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8623:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8597:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8597:6:6"
																},
																"nativeSrc": "8597:47:6",
																"nodeType": "YulFunctionCall",
																"src": "8597:47:6"
															},
															"nativeSrc": "8597:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "8597:47:6"
														},
														{
															"nativeSrc": "8653:139:6",
															"nodeType": "YulAssignment",
															"src": "8653:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8787:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8787:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e266b1228aea8c08bdeb8988184a32966f3ca9a4b22161e6f51997748691201f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8661:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "8661:124:6"
																},
																"nativeSrc": "8661:131:6",
																"nodeType": "YulFunctionCall",
																"src": "8661:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8653:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8653:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e266b1228aea8c08bdeb8988184a32966f3ca9a4b22161e6f51997748691201f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8380:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8531:9:6",
														"nodeType": "YulTypedName",
														"src": "8531:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8546:4:6",
														"nodeType": "YulTypedName",
														"src": "8546:4:6",
														"type": ""
													}
												],
												"src": "8380:419:6"
											},
											{
												"body": {
													"nativeSrc": "8911:68:6",
													"nodeType": "YulBlock",
													"src": "8911:68:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8933:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8933:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8941:1:6",
																				"nodeType": "YulLiteral",
																				"src": "8941:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8929:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8929:3:6"
																		},
																		"nativeSrc": "8929:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8929:14:6"
																	},
																	{
																		"hexValue": "6f776e65722062616c616e6365206e6f7420656e6f756768",
																		"kind": "string",
																		"nativeSrc": "8945:26:6",
																		"nodeType": "YulLiteral",
																		"src": "8945:26:6",
																		"type": "",
																		"value": "owner balance not enough"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8922:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8922:6:6"
																},
																"nativeSrc": "8922:50:6",
																"nodeType": "YulFunctionCall",
																"src": "8922:50:6"
															},
															"nativeSrc": "8922:50:6",
															"nodeType": "YulExpressionStatement",
															"src": "8922:50:6"
														}
													]
												},
												"name": "store_literal_in_memory_28b2d23fc7282e29dd6685636c48a0f08799ad87e79d7f33b89f14976d6c6b0b",
												"nativeSrc": "8805:174:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8903:6:6",
														"nodeType": "YulTypedName",
														"src": "8903:6:6",
														"type": ""
													}
												],
												"src": "8805:174:6"
											},
											{
												"body": {
													"nativeSrc": "9131:220:6",
													"nodeType": "YulBlock",
													"src": "9131:220:6",
													"statements": [
														{
															"nativeSrc": "9141:74:6",
															"nodeType": "YulAssignment",
															"src": "9141:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9207:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9207:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9212:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9212:2:6",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9148:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "9148:58:6"
																},
																"nativeSrc": "9148:67:6",
																"nodeType": "YulFunctionCall",
																"src": "9148:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9141:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9141:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9313:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9313:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_28b2d23fc7282e29dd6685636c48a0f08799ad87e79d7f33b89f14976d6c6b0b",
																	"nativeSrc": "9224:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "9224:88:6"
																},
																"nativeSrc": "9224:93:6",
																"nodeType": "YulFunctionCall",
																"src": "9224:93:6"
															},
															"nativeSrc": "9224:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "9224:93:6"
														},
														{
															"nativeSrc": "9326:19:6",
															"nodeType": "YulAssignment",
															"src": "9326:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9337:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9337:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9342:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9342:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9333:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9333:3:6"
																},
																"nativeSrc": "9333:12:6",
																"nodeType": "YulFunctionCall",
																"src": "9333:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9326:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9326:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_28b2d23fc7282e29dd6685636c48a0f08799ad87e79d7f33b89f14976d6c6b0b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8985:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9119:3:6",
														"nodeType": "YulTypedName",
														"src": "9119:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9127:3:6",
														"nodeType": "YulTypedName",
														"src": "9127:3:6",
														"type": ""
													}
												],
												"src": "8985:366:6"
											},
											{
												"body": {
													"nativeSrc": "9528:248:6",
													"nodeType": "YulBlock",
													"src": "9528:248:6",
													"statements": [
														{
															"nativeSrc": "9538:26:6",
															"nodeType": "YulAssignment",
															"src": "9538:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9550:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9550:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9561:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9561:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9546:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9546:3:6"
																},
																"nativeSrc": "9546:18:6",
																"nodeType": "YulFunctionCall",
																"src": "9546:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9538:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9538:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9585:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9585:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9596:1:6",
																				"nodeType": "YulLiteral",
																				"src": "9596:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9581:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9581:3:6"
																		},
																		"nativeSrc": "9581:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9581:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9604:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9604:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9610:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9610:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9600:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9600:3:6"
																		},
																		"nativeSrc": "9600:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9600:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9574:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9574:6:6"
																},
																"nativeSrc": "9574:47:6",
																"nodeType": "YulFunctionCall",
																"src": "9574:47:6"
															},
															"nativeSrc": "9574:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "9574:47:6"
														},
														{
															"nativeSrc": "9630:139:6",
															"nodeType": "YulAssignment",
															"src": "9630:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9764:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "9764:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_28b2d23fc7282e29dd6685636c48a0f08799ad87e79d7f33b89f14976d6c6b0b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9638:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "9638:124:6"
																},
																"nativeSrc": "9638:131:6",
																"nodeType": "YulFunctionCall",
																"src": "9638:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9630:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9630:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_28b2d23fc7282e29dd6685636c48a0f08799ad87e79d7f33b89f14976d6c6b0b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9357:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9508:9:6",
														"nodeType": "YulTypedName",
														"src": "9508:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9523:4:6",
														"nodeType": "YulTypedName",
														"src": "9523:4:6",
														"type": ""
													}
												],
												"src": "9357:419:6"
											},
											{
												"body": {
													"nativeSrc": "9810:152:6",
													"nodeType": "YulBlock",
													"src": "9810:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9827:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9827:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9830:77:6",
																		"nodeType": "YulLiteral",
																		"src": "9830:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9820:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9820:6:6"
																},
																"nativeSrc": "9820:88:6",
																"nodeType": "YulFunctionCall",
																"src": "9820:88:6"
															},
															"nativeSrc": "9820:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "9820:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9924:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9924:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9927:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9927:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9917:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9917:6:6"
																},
																"nativeSrc": "9917:15:6",
																"nodeType": "YulFunctionCall",
																"src": "9917:15:6"
															},
															"nativeSrc": "9917:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "9917:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9948:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9948:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9951:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9951:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9941:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9941:6:6"
																},
																"nativeSrc": "9941:15:6",
																"nodeType": "YulFunctionCall",
																"src": "9941:15:6"
															},
															"nativeSrc": "9941:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "9941:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9782:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "9782:180:6"
											},
											{
												"body": {
													"nativeSrc": "10013:149:6",
													"nodeType": "YulBlock",
													"src": "10013:149:6",
													"statements": [
														{
															"nativeSrc": "10023:25:6",
															"nodeType": "YulAssignment",
															"src": "10023:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10046:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10046:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10028:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "10028:17:6"
																},
																"nativeSrc": "10028:20:6",
																"nodeType": "YulFunctionCall",
																"src": "10028:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10023:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "10023:1:6"
																}
															]
														},
														{
															"nativeSrc": "10057:25:6",
															"nodeType": "YulAssignment",
															"src": "10057:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10080:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10080:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10062:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "10062:17:6"
																},
																"nativeSrc": "10062:20:6",
																"nodeType": "YulFunctionCall",
																"src": "10062:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10057:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "10057:1:6"
																}
															]
														},
														{
															"nativeSrc": "10091:17:6",
															"nodeType": "YulAssignment",
															"src": "10091:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10103:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10103:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10106:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10106:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "10099:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10099:3:6"
																},
																"nativeSrc": "10099:9:6",
																"nodeType": "YulFunctionCall",
																"src": "10099:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "10091:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10091:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10133:22:6",
																"nodeType": "YulBlock",
																"src": "10133:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10135:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "10135:16:6"
																			},
																			"nativeSrc": "10135:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "10135:18:6"
																		},
																		"nativeSrc": "10135:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "10135:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "10124:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "10124:4:6"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "10130:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10130:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10121:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "10121:2:6"
																},
																"nativeSrc": "10121:11:6",
																"nodeType": "YulFunctionCall",
																"src": "10121:11:6"
															},
															"nativeSrc": "10118:37:6",
															"nodeType": "YulIf",
															"src": "10118:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "9968:194:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9999:1:6",
														"nodeType": "YulTypedName",
														"src": "9999:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10002:1:6",
														"nodeType": "YulTypedName",
														"src": "10002:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "10008:4:6",
														"nodeType": "YulTypedName",
														"src": "10008:4:6",
														"type": ""
													}
												],
												"src": "9968:194:6"
											},
											{
												"body": {
													"nativeSrc": "10212:147:6",
													"nodeType": "YulBlock",
													"src": "10212:147:6",
													"statements": [
														{
															"nativeSrc": "10222:25:6",
															"nodeType": "YulAssignment",
															"src": "10222:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10245:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10245:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10227:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "10227:17:6"
																},
																"nativeSrc": "10227:20:6",
																"nodeType": "YulFunctionCall",
																"src": "10227:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10222:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "10222:1:6"
																}
															]
														},
														{
															"nativeSrc": "10256:25:6",
															"nodeType": "YulAssignment",
															"src": "10256:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10279:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10279:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10261:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "10261:17:6"
																},
																"nativeSrc": "10261:20:6",
																"nodeType": "YulFunctionCall",
																"src": "10261:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10256:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "10256:1:6"
																}
															]
														},
														{
															"nativeSrc": "10290:16:6",
															"nodeType": "YulAssignment",
															"src": "10290:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10301:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10301:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10304:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10304:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10297:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10297:3:6"
																},
																"nativeSrc": "10297:9:6",
																"nodeType": "YulFunctionCall",
																"src": "10297:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10290:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10290:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10330:22:6",
																"nodeType": "YulBlock",
																"src": "10330:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10332:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "10332:16:6"
																			},
																			"nativeSrc": "10332:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "10332:18:6"
																		},
																		"nativeSrc": "10332:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "10332:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10322:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10322:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10325:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10325:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10319:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "10319:2:6"
																},
																"nativeSrc": "10319:10:6",
																"nodeType": "YulFunctionCall",
																"src": "10319:10:6"
															},
															"nativeSrc": "10316:36:6",
															"nodeType": "YulIf",
															"src": "10316:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "10168:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10199:1:6",
														"nodeType": "YulTypedName",
														"src": "10199:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10202:1:6",
														"nodeType": "YulTypedName",
														"src": "10202:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10208:3:6",
														"nodeType": "YulTypedName",
														"src": "10208:3:6",
														"type": ""
													}
												],
												"src": "10168:191:6"
											},
											{
												"body": {
													"nativeSrc": "10471:114:6",
													"nodeType": "YulBlock",
													"src": "10471:114:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10493:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "10493:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10501:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10501:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10489:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10489:3:6"
																		},
																		"nativeSrc": "10489:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10489:14:6"
																	},
																	{
																		"hexValue": "6f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f",
																		"kind": "string",
																		"nativeSrc": "10505:34:6",
																		"nodeType": "YulLiteral",
																		"src": "10505:34:6",
																		"type": "",
																		"value": "only owner can call this functio"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10482:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10482:6:6"
																},
																"nativeSrc": "10482:58:6",
																"nodeType": "YulFunctionCall",
																"src": "10482:58:6"
															},
															"nativeSrc": "10482:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "10482:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10561:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "10561:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10569:2:6",
																				"nodeType": "YulLiteral",
																				"src": "10569:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10557:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10557:3:6"
																		},
																		"nativeSrc": "10557:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10557:15:6"
																	},
																	{
																		"hexValue": "6e",
																		"kind": "string",
																		"nativeSrc": "10574:3:6",
																		"nodeType": "YulLiteral",
																		"src": "10574:3:6",
																		"type": "",
																		"value": "n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10550:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10550:6:6"
																},
																"nativeSrc": "10550:28:6",
																"nodeType": "YulFunctionCall",
																"src": "10550:28:6"
															},
															"nativeSrc": "10550:28:6",
															"nodeType": "YulExpressionStatement",
															"src": "10550:28:6"
														}
													]
												},
												"name": "store_literal_in_memory_163a280d316d32dc884d8457bf7b961a97d91b637bc569fca476bdb5ef7f2712",
												"nativeSrc": "10365:220:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10463:6:6",
														"nodeType": "YulTypedName",
														"src": "10463:6:6",
														"type": ""
													}
												],
												"src": "10365:220:6"
											},
											{
												"body": {
													"nativeSrc": "10737:220:6",
													"nodeType": "YulBlock",
													"src": "10737:220:6",
													"statements": [
														{
															"nativeSrc": "10747:74:6",
															"nodeType": "YulAssignment",
															"src": "10747:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10813:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10813:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10818:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10818:2:6",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10754:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "10754:58:6"
																},
																"nativeSrc": "10754:67:6",
																"nodeType": "YulFunctionCall",
																"src": "10754:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10747:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10747:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10919:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10919:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_163a280d316d32dc884d8457bf7b961a97d91b637bc569fca476bdb5ef7f2712",
																	"nativeSrc": "10830:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "10830:88:6"
																},
																"nativeSrc": "10830:93:6",
																"nodeType": "YulFunctionCall",
																"src": "10830:93:6"
															},
															"nativeSrc": "10830:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "10830:93:6"
														},
														{
															"nativeSrc": "10932:19:6",
															"nodeType": "YulAssignment",
															"src": "10932:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10943:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10943:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10948:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10948:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10939:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10939:3:6"
																},
																"nativeSrc": "10939:12:6",
																"nodeType": "YulFunctionCall",
																"src": "10939:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10932:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10932:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_163a280d316d32dc884d8457bf7b961a97d91b637bc569fca476bdb5ef7f2712_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10591:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10725:3:6",
														"nodeType": "YulTypedName",
														"src": "10725:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10733:3:6",
														"nodeType": "YulTypedName",
														"src": "10733:3:6",
														"type": ""
													}
												],
												"src": "10591:366:6"
											},
											{
												"body": {
													"nativeSrc": "11134:248:6",
													"nodeType": "YulBlock",
													"src": "11134:248:6",
													"statements": [
														{
															"nativeSrc": "11144:26:6",
															"nodeType": "YulAssignment",
															"src": "11144:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11156:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "11156:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11167:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11167:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11152:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11152:3:6"
																},
																"nativeSrc": "11152:18:6",
																"nodeType": "YulFunctionCall",
																"src": "11152:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11144:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11144:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11191:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11191:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11202:1:6",
																				"nodeType": "YulLiteral",
																				"src": "11202:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11187:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11187:3:6"
																		},
																		"nativeSrc": "11187:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11187:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11210:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "11210:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11216:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11216:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11206:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11206:3:6"
																		},
																		"nativeSrc": "11206:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11206:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11180:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11180:6:6"
																},
																"nativeSrc": "11180:47:6",
																"nodeType": "YulFunctionCall",
																"src": "11180:47:6"
															},
															"nativeSrc": "11180:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "11180:47:6"
														},
														{
															"nativeSrc": "11236:139:6",
															"nodeType": "YulAssignment",
															"src": "11236:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11370:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "11370:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_163a280d316d32dc884d8457bf7b961a97d91b637bc569fca476bdb5ef7f2712_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11244:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "11244:124:6"
																},
																"nativeSrc": "11244:131:6",
																"nodeType": "YulFunctionCall",
																"src": "11244:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11236:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11236:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_163a280d316d32dc884d8457bf7b961a97d91b637bc569fca476bdb5ef7f2712__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10963:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11114:9:6",
														"nodeType": "YulTypedName",
														"src": "11114:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11129:4:6",
														"nodeType": "YulTypedName",
														"src": "11129:4:6",
														"type": ""
													}
												],
												"src": "10963:419:6"
											},
											{
												"body": {
													"nativeSrc": "11494:65:6",
													"nodeType": "YulBlock",
													"src": "11494:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11516:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "11516:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11524:1:6",
																				"nodeType": "YulLiteral",
																				"src": "11524:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11512:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11512:3:6"
																		},
																		"nativeSrc": "11512:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11512:14:6"
																	},
																	{
																		"hexValue": "726563656976652061646472657373206572726f72",
																		"kind": "string",
																		"nativeSrc": "11528:23:6",
																		"nodeType": "YulLiteral",
																		"src": "11528:23:6",
																		"type": "",
																		"value": "receive address error"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11505:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11505:6:6"
																},
																"nativeSrc": "11505:47:6",
																"nodeType": "YulFunctionCall",
																"src": "11505:47:6"
															},
															"nativeSrc": "11505:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "11505:47:6"
														}
													]
												},
												"name": "store_literal_in_memory_b198f41273ae43355193a8300bb5ca36ff0987665ede60997dd7b775f59a923a",
												"nativeSrc": "11388:171:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11486:6:6",
														"nodeType": "YulTypedName",
														"src": "11486:6:6",
														"type": ""
													}
												],
												"src": "11388:171:6"
											},
											{
												"body": {
													"nativeSrc": "11711:220:6",
													"nodeType": "YulBlock",
													"src": "11711:220:6",
													"statements": [
														{
															"nativeSrc": "11721:74:6",
															"nodeType": "YulAssignment",
															"src": "11721:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11787:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11787:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11792:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11792:2:6",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11728:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "11728:58:6"
																},
																"nativeSrc": "11728:67:6",
																"nodeType": "YulFunctionCall",
																"src": "11728:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11721:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11721:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11893:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11893:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b198f41273ae43355193a8300bb5ca36ff0987665ede60997dd7b775f59a923a",
																	"nativeSrc": "11804:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "11804:88:6"
																},
																"nativeSrc": "11804:93:6",
																"nodeType": "YulFunctionCall",
																"src": "11804:93:6"
															},
															"nativeSrc": "11804:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "11804:93:6"
														},
														{
															"nativeSrc": "11906:19:6",
															"nodeType": "YulAssignment",
															"src": "11906:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11917:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11917:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11922:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11922:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11913:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11913:3:6"
																},
																"nativeSrc": "11913:12:6",
																"nodeType": "YulFunctionCall",
																"src": "11913:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11906:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11906:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b198f41273ae43355193a8300bb5ca36ff0987665ede60997dd7b775f59a923a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11565:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11699:3:6",
														"nodeType": "YulTypedName",
														"src": "11699:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11707:3:6",
														"nodeType": "YulTypedName",
														"src": "11707:3:6",
														"type": ""
													}
												],
												"src": "11565:366:6"
											},
											{
												"body": {
													"nativeSrc": "12108:248:6",
													"nodeType": "YulBlock",
													"src": "12108:248:6",
													"statements": [
														{
															"nativeSrc": "12118:26:6",
															"nodeType": "YulAssignment",
															"src": "12118:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12130:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "12130:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12141:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12141:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12126:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12126:3:6"
																},
																"nativeSrc": "12126:18:6",
																"nodeType": "YulFunctionCall",
																"src": "12126:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12118:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "12118:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12165:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12165:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12176:1:6",
																				"nodeType": "YulLiteral",
																				"src": "12176:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12161:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12161:3:6"
																		},
																		"nativeSrc": "12161:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12161:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12184:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "12184:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12190:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12190:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12180:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12180:3:6"
																		},
																		"nativeSrc": "12180:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12180:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12154:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12154:6:6"
																},
																"nativeSrc": "12154:47:6",
																"nodeType": "YulFunctionCall",
																"src": "12154:47:6"
															},
															"nativeSrc": "12154:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "12154:47:6"
														},
														{
															"nativeSrc": "12210:139:6",
															"nodeType": "YulAssignment",
															"src": "12210:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12344:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "12344:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b198f41273ae43355193a8300bb5ca36ff0987665ede60997dd7b775f59a923a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12218:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "12218:124:6"
																},
																"nativeSrc": "12218:131:6",
																"nodeType": "YulFunctionCall",
																"src": "12218:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12210:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "12210:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b198f41273ae43355193a8300bb5ca36ff0987665ede60997dd7b775f59a923a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11937:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12088:9:6",
														"nodeType": "YulTypedName",
														"src": "12088:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12103:4:6",
														"nodeType": "YulTypedName",
														"src": "12103:4:6",
														"type": ""
													}
												],
												"src": "11937:419:6"
											},
											{
												"body": {
													"nativeSrc": "12468:73:6",
													"nodeType": "YulBlock",
													"src": "12468:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12490:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "12490:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12498:1:6",
																				"nodeType": "YulLiteral",
																				"src": "12498:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12486:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12486:3:6"
																		},
																		"nativeSrc": "12486:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12486:14:6"
																	},
																	{
																		"hexValue": "616d6f756e74206d7573742062652067726561746572207468616e2030",
																		"kind": "string",
																		"nativeSrc": "12502:31:6",
																		"nodeType": "YulLiteral",
																		"src": "12502:31:6",
																		"type": "",
																		"value": "amount must be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12479:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12479:6:6"
																},
																"nativeSrc": "12479:55:6",
																"nodeType": "YulFunctionCall",
																"src": "12479:55:6"
															},
															"nativeSrc": "12479:55:6",
															"nodeType": "YulExpressionStatement",
															"src": "12479:55:6"
														}
													]
												},
												"name": "store_literal_in_memory_71ce96f7bba828c9ec9c6caf13e767d67b4d6da65d7a1997a314facbf8a8502f",
												"nativeSrc": "12362:179:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12460:6:6",
														"nodeType": "YulTypedName",
														"src": "12460:6:6",
														"type": ""
													}
												],
												"src": "12362:179:6"
											},
											{
												"body": {
													"nativeSrc": "12693:220:6",
													"nodeType": "YulBlock",
													"src": "12693:220:6",
													"statements": [
														{
															"nativeSrc": "12703:74:6",
															"nodeType": "YulAssignment",
															"src": "12703:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12769:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "12769:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12774:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12774:2:6",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12710:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "12710:58:6"
																},
																"nativeSrc": "12710:67:6",
																"nodeType": "YulFunctionCall",
																"src": "12710:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12703:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12703:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12875:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "12875:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_71ce96f7bba828c9ec9c6caf13e767d67b4d6da65d7a1997a314facbf8a8502f",
																	"nativeSrc": "12786:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "12786:88:6"
																},
																"nativeSrc": "12786:93:6",
																"nodeType": "YulFunctionCall",
																"src": "12786:93:6"
															},
															"nativeSrc": "12786:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "12786:93:6"
														},
														{
															"nativeSrc": "12888:19:6",
															"nodeType": "YulAssignment",
															"src": "12888:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12899:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "12899:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12904:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12904:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12895:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12895:3:6"
																},
																"nativeSrc": "12895:12:6",
																"nodeType": "YulFunctionCall",
																"src": "12895:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12888:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12888:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_71ce96f7bba828c9ec9c6caf13e767d67b4d6da65d7a1997a314facbf8a8502f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12547:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12681:3:6",
														"nodeType": "YulTypedName",
														"src": "12681:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12689:3:6",
														"nodeType": "YulTypedName",
														"src": "12689:3:6",
														"type": ""
													}
												],
												"src": "12547:366:6"
											},
											{
												"body": {
													"nativeSrc": "13090:248:6",
													"nodeType": "YulBlock",
													"src": "13090:248:6",
													"statements": [
														{
															"nativeSrc": "13100:26:6",
															"nodeType": "YulAssignment",
															"src": "13100:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13112:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "13112:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13123:2:6",
																		"nodeType": "YulLiteral",
																		"src": "13123:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13108:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13108:3:6"
																},
																"nativeSrc": "13108:18:6",
																"nodeType": "YulFunctionCall",
																"src": "13108:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13100:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "13100:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13147:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13147:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13158:1:6",
																				"nodeType": "YulLiteral",
																				"src": "13158:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13143:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13143:3:6"
																		},
																		"nativeSrc": "13143:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13143:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13166:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "13166:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13172:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13172:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13162:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13162:3:6"
																		},
																		"nativeSrc": "13162:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13162:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13136:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13136:6:6"
																},
																"nativeSrc": "13136:47:6",
																"nodeType": "YulFunctionCall",
																"src": "13136:47:6"
															},
															"nativeSrc": "13136:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "13136:47:6"
														},
														{
															"nativeSrc": "13192:139:6",
															"nodeType": "YulAssignment",
															"src": "13192:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13326:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "13326:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_71ce96f7bba828c9ec9c6caf13e767d67b4d6da65d7a1997a314facbf8a8502f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13200:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "13200:124:6"
																},
																"nativeSrc": "13200:131:6",
																"nodeType": "YulFunctionCall",
																"src": "13200:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13192:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "13192:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_71ce96f7bba828c9ec9c6caf13e767d67b4d6da65d7a1997a314facbf8a8502f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12919:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13070:9:6",
														"nodeType": "YulTypedName",
														"src": "13070:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13085:4:6",
														"nodeType": "YulTypedName",
														"src": "13085:4:6",
														"type": ""
													}
												],
												"src": "12919:419:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_d34e25fd6fb189c977249e70288827f495cca9d3e0ff8af33f277d1e83d12455(memPtr) {\n\n        mstore(add(memPtr, 0), \"spender address error\")\n\n    }\n\n    function abi_encode_t_stringliteral_d34e25fd6fb189c977249e70288827f495cca9d3e0ff8af33f277d1e83d12455_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_d34e25fd6fb189c977249e70288827f495cca9d3e0ff8af33f277d1e83d12455(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d34e25fd6fb189c977249e70288827f495cca9d3e0ff8af33f277d1e83d12455__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d34e25fd6fb189c977249e70288827f495cca9d3e0ff8af33f277d1e83d12455_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ff820c3afa365cbbe14eae723bf721d1ee023b7ff02e0161c41be7e8280872af(memPtr) {\n\n        mstore(add(memPtr, 0), \"amount must greet than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_ff820c3afa365cbbe14eae723bf721d1ee023b7ff02e0161c41be7e8280872af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_ff820c3afa365cbbe14eae723bf721d1ee023b7ff02e0161c41be7e8280872af(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ff820c3afa365cbbe14eae723bf721d1ee023b7ff02e0161c41be7e8280872af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ff820c3afa365cbbe14eae723bf721d1ee023b7ff02e0161c41be7e8280872af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d750f031ea2bf7a16d7a01258babc175afde3c4015f1663fe4d238ebe276e772(memPtr) {\n\n        mstore(add(memPtr, 0), \"from address error\")\n\n    }\n\n    function abi_encode_t_stringliteral_d750f031ea2bf7a16d7a01258babc175afde3c4015f1663fe4d238ebe276e772_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_d750f031ea2bf7a16d7a01258babc175afde3c4015f1663fe4d238ebe276e772(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d750f031ea2bf7a16d7a01258babc175afde3c4015f1663fe4d238ebe276e772__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d750f031ea2bf7a16d7a01258babc175afde3c4015f1663fe4d238ebe276e772_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24018abc2e20db31c7585e8930c7a4fe2930c0a68008931d64fd3f2cdfd1e43d(memPtr) {\n\n        mstore(add(memPtr, 0), \"to address error\")\n\n    }\n\n    function abi_encode_t_stringliteral_24018abc2e20db31c7585e8930c7a4fe2930c0a68008931d64fd3f2cdfd1e43d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_24018abc2e20db31c7585e8930c7a4fe2930c0a68008931d64fd3f2cdfd1e43d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24018abc2e20db31c7585e8930c7a4fe2930c0a68008931d64fd3f2cdfd1e43d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24018abc2e20db31c7585e8930c7a4fe2930c0a68008931d64fd3f2cdfd1e43d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e266b1228aea8c08bdeb8988184a32966f3ca9a4b22161e6f51997748691201f(memPtr) {\n\n        mstore(add(memPtr, 0), \"allowance exceeded\")\n\n    }\n\n    function abi_encode_t_stringliteral_e266b1228aea8c08bdeb8988184a32966f3ca9a4b22161e6f51997748691201f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_e266b1228aea8c08bdeb8988184a32966f3ca9a4b22161e6f51997748691201f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e266b1228aea8c08bdeb8988184a32966f3ca9a4b22161e6f51997748691201f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e266b1228aea8c08bdeb8988184a32966f3ca9a4b22161e6f51997748691201f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_28b2d23fc7282e29dd6685636c48a0f08799ad87e79d7f33b89f14976d6c6b0b(memPtr) {\n\n        mstore(add(memPtr, 0), \"owner balance not enough\")\n\n    }\n\n    function abi_encode_t_stringliteral_28b2d23fc7282e29dd6685636c48a0f08799ad87e79d7f33b89f14976d6c6b0b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_28b2d23fc7282e29dd6685636c48a0f08799ad87e79d7f33b89f14976d6c6b0b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_28b2d23fc7282e29dd6685636c48a0f08799ad87e79d7f33b89f14976d6c6b0b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_28b2d23fc7282e29dd6685636c48a0f08799ad87e79d7f33b89f14976d6c6b0b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_163a280d316d32dc884d8457bf7b961a97d91b637bc569fca476bdb5ef7f2712(memPtr) {\n\n        mstore(add(memPtr, 0), \"only owner can call this functio\")\n\n        mstore(add(memPtr, 32), \"n\")\n\n    }\n\n    function abi_encode_t_stringliteral_163a280d316d32dc884d8457bf7b961a97d91b637bc569fca476bdb5ef7f2712_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_163a280d316d32dc884d8457bf7b961a97d91b637bc569fca476bdb5ef7f2712(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_163a280d316d32dc884d8457bf7b961a97d91b637bc569fca476bdb5ef7f2712__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_163a280d316d32dc884d8457bf7b961a97d91b637bc569fca476bdb5ef7f2712_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b198f41273ae43355193a8300bb5ca36ff0987665ede60997dd7b775f59a923a(memPtr) {\n\n        mstore(add(memPtr, 0), \"receive address error\")\n\n    }\n\n    function abi_encode_t_stringliteral_b198f41273ae43355193a8300bb5ca36ff0987665ede60997dd7b775f59a923a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_b198f41273ae43355193a8300bb5ca36ff0987665ede60997dd7b775f59a923a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b198f41273ae43355193a8300bb5ca36ff0987665ede60997dd7b775f59a923a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b198f41273ae43355193a8300bb5ca36ff0987665ede60997dd7b775f59a923a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_71ce96f7bba828c9ec9c6caf13e767d67b4d6da65d7a1997a314facbf8a8502f(memPtr) {\n\n        mstore(add(memPtr, 0), \"amount must be greater than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_71ce96f7bba828c9ec9c6caf13e767d67b4d6da65d7a1997a314facbf8a8502f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_71ce96f7bba828c9ec9c6caf13e767d67b4d6da65d7a1997a314facbf8a8502f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_71ce96f7bba828c9ec9c6caf13e767d67b4d6da65d7a1997a314facbf8a8502f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_71ce96f7bba828c9ec9c6caf13e767d67b4d6da65d7a1997a314facbf8a8502f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610060575f3560e01c8063095ea7b31461006457806323b872dd1461009457806340c10f19146100c457806370a08231146100e05780638da5cb5b14610110578063a9059cbb1461012e575b5f5ffd5b61007e60048036038101906100799190610c61565b61015e565b60405161008b9190610cb9565b60405180910390f35b6100ae60048036038101906100a99190610cd2565b6102fb565b6040516100bb9190610cb9565b60405180910390f35b6100de60048036038101906100d99190610c61565b6106fe565b005b6100fa60048036038101906100f59190610d22565b6108ac565b6040516101079190610d5c565b60405180910390f35b610118610960565b6040516101259190610d84565b60405180910390f35b61014860048036038101906101439190610c61565b610985565b6040516101559190610cb9565b60405180910390f35b5f5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036101cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c490610df7565b60405180910390fd5b5f821161020f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020690610e5f565b60405180910390fd5b8160055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f08dffe93edf65c77e66e298bcf7ba5ba81a3f70c8641f098066df4e8ed21e684846040516102e99190610d5c565b60405180910390a36001905092915050565b5f5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361036a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036190610ec7565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036103d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103cf90610f2f565b60405180910390fd5b5f821161041a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041190610e5f565b60405180910390fd5b8160055f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205410156104d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104cc90610f97565b60405180910390fd5b5f60045f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905082811015610559576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055090610fff565b60405180910390fd5b8260045f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546105a5919061104a565b925050819055508260045f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546105f8919061107d565b925050819055508260055f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610686919061104a565b925050819055508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f21425341546d2023146851fb583db9b7c6be5fed0d287293c85a8ede5193c6ea856040516106ea9190610d5c565b60405180910390a360019150509392505050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461078d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078490611120565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f290611188565b60405180910390fd5b5f811161083d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610834906111f0565b60405180910390fd5b8060045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610889919061107d565b925050819055508060035f8282546108a1919061107d565b925050819055505050565b5f5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361091b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091290611188565b60405180910390fd5b60045f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109eb90611188565b60405180910390fd5b5f8211610a36576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2d90610e5f565b60405180910390fd5b5f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905082811015610aba576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab190610fff565b60405180910390fd5b8260045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610b06919061104a565b925050819055508260045f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610b59919061107d565b925050819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f21425341546d2023146851fb583db9b7c6be5fed0d287293c85a8ede5193c6ea85604051610bbd9190610d5c565b60405180910390a3600191505092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610bfd82610bd4565b9050919050565b610c0d81610bf3565b8114610c17575f5ffd5b50565b5f81359050610c2881610c04565b92915050565b5f819050919050565b610c4081610c2e565b8114610c4a575f5ffd5b50565b5f81359050610c5b81610c37565b92915050565b5f5f60408385031215610c7757610c76610bd0565b5b5f610c8485828601610c1a565b9250506020610c9585828601610c4d565b9150509250929050565b5f8115159050919050565b610cb381610c9f565b82525050565b5f602082019050610ccc5f830184610caa565b92915050565b5f5f5f60608486031215610ce957610ce8610bd0565b5b5f610cf686828701610c1a565b9350506020610d0786828701610c1a565b9250506040610d1886828701610c4d565b9150509250925092565b5f60208284031215610d3757610d36610bd0565b5b5f610d4484828501610c1a565b91505092915050565b610d5681610c2e565b82525050565b5f602082019050610d6f5f830184610d4d565b92915050565b610d7e81610bf3565b82525050565b5f602082019050610d975f830184610d75565b92915050565b5f82825260208201905092915050565b7f7370656e6465722061646472657373206572726f7200000000000000000000005f82015250565b5f610de1601583610d9d565b9150610dec82610dad565b602082019050919050565b5f6020820190508181035f830152610e0e81610dd5565b9050919050565b7f616d6f756e74206d757374206772656574207468616e203000000000000000005f82015250565b5f610e49601883610d9d565b9150610e5482610e15565b602082019050919050565b5f6020820190508181035f830152610e7681610e3d565b9050919050565b7f66726f6d2061646472657373206572726f7200000000000000000000000000005f82015250565b5f610eb1601283610d9d565b9150610ebc82610e7d565b602082019050919050565b5f6020820190508181035f830152610ede81610ea5565b9050919050565b7f746f2061646472657373206572726f72000000000000000000000000000000005f82015250565b5f610f19601083610d9d565b9150610f2482610ee5565b602082019050919050565b5f6020820190508181035f830152610f4681610f0d565b9050919050565b7f616c6c6f77616e636520657863656564656400000000000000000000000000005f82015250565b5f610f81601283610d9d565b9150610f8c82610f4d565b602082019050919050565b5f6020820190508181035f830152610fae81610f75565b9050919050565b7f6f776e65722062616c616e6365206e6f7420656e6f75676800000000000000005f82015250565b5f610fe9601883610d9d565b9150610ff482610fb5565b602082019050919050565b5f6020820190508181035f83015261101681610fdd565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61105482610c2e565b915061105f83610c2e565b92508282039050818111156110775761107661101d565b5b92915050565b5f61108782610c2e565b915061109283610c2e565b92508282019050808211156110aa576110a961101d565b5b92915050565b7f6f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f5f8201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b5f61110a602183610d9d565b9150611115826110b0565b604082019050919050565b5f6020820190508181035f830152611137816110fe565b9050919050565b7f726563656976652061646472657373206572726f7200000000000000000000005f82015250565b5f611172601583610d9d565b915061117d8261113e565b602082019050919050565b5f6020820190508181035f83015261119f81611166565b9050919050565b7f616d6f756e74206d7573742062652067726561746572207468616e20300000005f82015250565b5f6111da601d83610d9d565b91506111e5826111a6565b602082019050919050565b5f6020820190508181035f830152611207816111ce565b905091905056fea2646970667358221220d9adb284910910483c3986d2d4eb73773aaae8d79c088eca136dd96262a8b57164736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x60 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0xC4 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x12E JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x7E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79 SWAP2 SWAP1 PUSH2 0xC61 JUMP JUMPDEST PUSH2 0x15E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0xCB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xCD2 JUMP JUMPDEST PUSH2 0x2FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBB SWAP2 SWAP1 PUSH2 0xCB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD9 SWAP2 SWAP1 PUSH2 0xC61 JUMP JUMPDEST PUSH2 0x6FE JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF5 SWAP2 SWAP1 PUSH2 0xD22 JUMP JUMPDEST PUSH2 0x8AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x107 SWAP2 SWAP1 PUSH2 0xD5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x118 PUSH2 0x960 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x125 SWAP2 SWAP1 PUSH2 0xD84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x148 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x143 SWAP2 SWAP1 PUSH2 0xC61 JUMP JUMPDEST PUSH2 0x985 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP2 SWAP1 PUSH2 0xCB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C4 SWAP1 PUSH2 0xDF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x20F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x206 SWAP1 PUSH2 0xE5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8DFFE93EDF65C77E66E298BCF7BA5BA81A3F70C8641F098066DF4E8ED21E684 DUP5 PUSH1 0x40 MLOAD PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0xD5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x36A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x361 SWAP1 PUSH2 0xEC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CF SWAP1 PUSH2 0xF2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x41A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x411 SWAP1 PUSH2 0xE5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x5 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CC SWAP1 PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x559 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x550 SWAP1 PUSH2 0xFFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x4 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x5A5 SWAP2 SWAP1 PUSH2 0x104A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x4 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x5F8 SWAP2 SWAP1 PUSH2 0x107D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x5 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x686 SWAP2 SWAP1 PUSH2 0x104A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x21425341546D2023146851FB583DB9B7C6BE5FED0D287293C85A8EDE5193C6EA DUP6 PUSH1 0x40 MLOAD PUSH2 0x6EA SWAP2 SWAP1 PUSH2 0xD5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x78D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x784 SWAP1 PUSH2 0x1120 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F2 SWAP1 PUSH2 0x1188 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x83D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x834 SWAP1 PUSH2 0x11F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x889 SWAP2 SWAP1 PUSH2 0x107D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8A1 SWAP2 SWAP1 PUSH2 0x107D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x91B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x912 SWAP1 PUSH2 0x1188 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9EB SWAP1 PUSH2 0x1188 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0xA36 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA2D SWAP1 PUSH2 0xE5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0xABA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAB1 SWAP1 PUSH2 0xFFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB06 SWAP2 SWAP1 PUSH2 0x104A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x4 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB59 SWAP2 SWAP1 PUSH2 0x107D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x21425341546D2023146851FB583DB9B7C6BE5FED0D287293C85A8EDE5193C6EA DUP6 PUSH1 0x40 MLOAD PUSH2 0xBBD SWAP2 SWAP1 PUSH2 0xD5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xBFD DUP3 PUSH2 0xBD4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC0D DUP2 PUSH2 0xBF3 JUMP JUMPDEST DUP2 EQ PUSH2 0xC17 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC28 DUP2 PUSH2 0xC04 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC40 DUP2 PUSH2 0xC2E JUMP JUMPDEST DUP2 EQ PUSH2 0xC4A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC5B DUP2 PUSH2 0xC37 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC77 JUMPI PUSH2 0xC76 PUSH2 0xBD0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC84 DUP6 DUP3 DUP7 ADD PUSH2 0xC1A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC95 DUP6 DUP3 DUP7 ADD PUSH2 0xC4D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCB3 DUP2 PUSH2 0xC9F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCCC PUSH0 DUP4 ADD DUP5 PUSH2 0xCAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xCE9 JUMPI PUSH2 0xCE8 PUSH2 0xBD0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCF6 DUP7 DUP3 DUP8 ADD PUSH2 0xC1A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xD07 DUP7 DUP3 DUP8 ADD PUSH2 0xC1A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xD18 DUP7 DUP3 DUP8 ADD PUSH2 0xC4D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD37 JUMPI PUSH2 0xD36 PUSH2 0xBD0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD44 DUP5 DUP3 DUP6 ADD PUSH2 0xC1A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD56 DUP2 PUSH2 0xC2E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD6F PUSH0 DUP4 ADD DUP5 PUSH2 0xD4D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD7E DUP2 PUSH2 0xBF3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD97 PUSH0 DUP4 ADD DUP5 PUSH2 0xD75 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x7370656E6465722061646472657373206572726F720000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xDE1 PUSH1 0x15 DUP4 PUSH2 0xD9D JUMP JUMPDEST SWAP2 POP PUSH2 0xDEC DUP3 PUSH2 0xDAD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE0E DUP2 PUSH2 0xDD5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x616D6F756E74206D757374206772656574207468616E20300000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE49 PUSH1 0x18 DUP4 PUSH2 0xD9D JUMP JUMPDEST SWAP2 POP PUSH2 0xE54 DUP3 PUSH2 0xE15 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE76 DUP2 PUSH2 0xE3D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x66726F6D2061646472657373206572726F720000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xEB1 PUSH1 0x12 DUP4 PUSH2 0xD9D JUMP JUMPDEST SWAP2 POP PUSH2 0xEBC DUP3 PUSH2 0xE7D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEDE DUP2 PUSH2 0xEA5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x746F2061646472657373206572726F7200000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF19 PUSH1 0x10 DUP4 PUSH2 0xD9D JUMP JUMPDEST SWAP2 POP PUSH2 0xF24 DUP3 PUSH2 0xEE5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF46 DUP2 PUSH2 0xF0D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x616C6C6F77616E63652065786365656465640000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF81 PUSH1 0x12 DUP4 PUSH2 0xD9D JUMP JUMPDEST SWAP2 POP PUSH2 0xF8C DUP3 PUSH2 0xF4D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFAE DUP2 PUSH2 0xF75 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6F776E65722062616C616E6365206E6F7420656E6F7567680000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xFE9 PUSH1 0x18 DUP4 PUSH2 0xD9D JUMP JUMPDEST SWAP2 POP PUSH2 0xFF4 DUP3 PUSH2 0xFB5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1016 DUP2 PUSH2 0xFDD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1054 DUP3 PUSH2 0xC2E JUMP JUMPDEST SWAP2 POP PUSH2 0x105F DUP4 PUSH2 0xC2E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1077 JUMPI PUSH2 0x1076 PUSH2 0x101D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1087 DUP3 PUSH2 0xC2E JUMP JUMPDEST SWAP2 POP PUSH2 0x1092 DUP4 PUSH2 0xC2E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x10AA JUMPI PUSH2 0x10A9 PUSH2 0x101D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6F6E6C79206F776E65722063616E2063616C6C20746869732066756E6374696F PUSH0 DUP3 ADD MSTORE PUSH32 0x6E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x110A PUSH1 0x21 DUP4 PUSH2 0xD9D JUMP JUMPDEST SWAP2 POP PUSH2 0x1115 DUP3 PUSH2 0x10B0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1137 DUP2 PUSH2 0x10FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x726563656976652061646472657373206572726F720000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1172 PUSH1 0x15 DUP4 PUSH2 0xD9D JUMP JUMPDEST SWAP2 POP PUSH2 0x117D DUP3 PUSH2 0x113E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x119F DUP2 PUSH2 0x1166 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x616D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x11DA PUSH1 0x1D DUP4 PUSH2 0xD9D JUMP JUMPDEST SWAP2 POP PUSH2 0x11E5 DUP3 PUSH2 0x11A6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1207 DUP2 PUSH2 0x11CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 0xAD 0xB2 DUP5 SWAP2 MULMOD LT BASEFEE EXTCODECOPY CODECOPY DUP7 0xD2 0xD4 0xEB PUSH20 0x773AAAE8D79C088ECA136DD96262A8B57164736F PUSH13 0x634300081E0033000000000000 ",
							"sourceMap": "510:3084:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2396:352;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2774:818;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1282:250;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1565:171;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;613:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1762:608;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2396:352;2463:4;2529:1;2511:20;;:7;:20;;;2503:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;2583:1;2574:6;:10;2566:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;2658:6;2623:11;:23;2635:10;2623:23;;;;;;;;;;;;;;;:32;2647:7;2623:32;;;;;;;;;;;;;;;:41;;;;2704:7;2680:40;;2692:10;2680:40;;;2713:6;2680:40;;;;;;:::i;:::-;;;;;;;;2737:4;2730:11;;2396:352;;;;:::o;2774:818::-;2854:4;2917:1;2902:17;;:4;:17;;;2894:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;2972:1;2959:15;;:2;:15;;;2951:43;;;;;;;;;;;;:::i;:::-;;;;;;;;;3021:1;3012:6;:10;3004:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;3131:6;3098:11;:17;3110:4;3098:17;;;;;;;;;;;;;;;:29;3116:10;3098:29;;;;;;;;;;;;;;;;:39;;3090:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;3194:18;3215:9;:15;3225:4;3215:15;;;;;;;;;;;;;;;;3194:36;;3257:6;3244:10;:19;3240:162;;;3279:34;;;;;;;;;;:::i;:::-;;;;;;;;3240:162;3385:6;3366:9;:15;3376:4;3366:15;;;;;;;;;;;;;;;;:25;;;;;;;:::i;:::-;;;;;;;;3446:6;3429:9;:13;3439:2;3429:13;;;;;;;;;;;;;;;;:23;;;;;;;:::i;:::-;;;;;;;;3495:6;3462:11;:17;3474:4;3462:17;;;;;;;;;;;;;;;:29;3480:10;3462:29;;;;;;;;;;;;;;;;:39;;;;;;;:::i;:::-;;;;;;;;3553:2;3535:29;;3547:4;3535:29;;;3557:6;3535:29;;;;;;:::i;:::-;;;;;;;;3581:4;3574:11;;;2774:818;;;;;:::o;1282:250::-;829:5;;;;;;;;;;;815:19;;:10;:19;;;807:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;1372:1:::1;1359:15;;:2;:15;;::::0;1351:48:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1426:1;1417:6;:10;1409:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1488:6;1471:9;:13;1481:2;1471:13;;;;;;;;;;;;;;;;:23;;;;;;;:::i;:::-;;;;;;;;1519:6;1504:11;;:21;;;;;;;:::i;:::-;;;;;;;;1282:250:::0;;:::o;1565:171::-;1622:7;1667:1;1649:20;;:7;:20;;;1641:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;1711:9;:18;1721:7;1711:18;;;;;;;;;;;;;;;;1704:25;;1565:171;;;:::o;613:20::-;;;;;;;;;;;;;:::o;1762:608::-;1824:4;1885:1;1872:15;;:2;:15;;;1864:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;1939:1;1930:6;:10;1922:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;2003:18;2024:9;:21;2034:10;2024:21;;;;;;;;;;;;;;;;2003:42;;2072:6;2059:10;:19;2055:168;;;2094:34;;;;;;;;;;:::i;:::-;;;;;;;;2055:168;2206:6;2181:9;:21;2191:10;2181:21;;;;;;;;;;;;;;;;:31;;;;;;;:::i;:::-;;;;;;;;2267:6;2250:9;:13;2260:2;2250:13;;;;;;;;;;;;;;;;:23;;;;;;;:::i;:::-;;;;;;;;2331:2;2307:35;;2319:10;2307:35;;;2335:6;2307:35;;;;;;:::i;:::-;;;;;;;;2359:4;2352:11;;;1762:608;;;;:::o;88:117:6:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:90::-;1711:7;1754:5;1747:13;1740:21;1729:32;;1677:90;;;:::o;1773:109::-;1854:21;1869:5;1854:21;:::i;:::-;1849:3;1842:34;1773:109;;:::o;1888:210::-;1975:4;2013:2;2002:9;1998:18;1990:26;;2026:65;2088:1;2077:9;2073:17;2064:6;2026:65;:::i;:::-;1888:210;;;;:::o;2104:619::-;2181:6;2189;2197;2246:2;2234:9;2225:7;2221:23;2217:32;2214:119;;;2252:79;;:::i;:::-;2214:119;2372:1;2397:53;2442:7;2433:6;2422:9;2418:22;2397:53;:::i;:::-;2387:63;;2343:117;2499:2;2525:53;2570:7;2561:6;2550:9;2546:22;2525:53;:::i;:::-;2515:63;;2470:118;2627:2;2653:53;2698:7;2689:6;2678:9;2674:22;2653:53;:::i;:::-;2643:63;;2598:118;2104:619;;;;;:::o;2729:329::-;2788:6;2837:2;2825:9;2816:7;2812:23;2808:32;2805:119;;;2843:79;;:::i;:::-;2805:119;2963:1;2988:53;3033:7;3024:6;3013:9;3009:22;2988:53;:::i;:::-;2978:63;;2934:117;2729:329;;;;:::o;3064:118::-;3151:24;3169:5;3151:24;:::i;:::-;3146:3;3139:37;3064:118;;:::o;3188:222::-;3281:4;3319:2;3308:9;3304:18;3296:26;;3332:71;3400:1;3389:9;3385:17;3376:6;3332:71;:::i;:::-;3188:222;;;;:::o;3416:118::-;3503:24;3521:5;3503:24;:::i;:::-;3498:3;3491:37;3416:118;;:::o;3540:222::-;3633:4;3671:2;3660:9;3656:18;3648:26;;3684:71;3752:1;3741:9;3737:17;3728:6;3684:71;:::i;:::-;3540:222;;;;:::o;3768:169::-;3852:11;3886:6;3881:3;3874:19;3926:4;3921:3;3917:14;3902:29;;3768:169;;;;:::o;3943:171::-;4083:23;4079:1;4071:6;4067:14;4060:47;3943:171;:::o;4120:366::-;4262:3;4283:67;4347:2;4342:3;4283:67;:::i;:::-;4276:74;;4359:93;4448:3;4359:93;:::i;:::-;4477:2;4472:3;4468:12;4461:19;;4120:366;;;:::o;4492:419::-;4658:4;4696:2;4685:9;4681:18;4673:26;;4745:9;4739:4;4735:20;4731:1;4720:9;4716:17;4709:47;4773:131;4899:4;4773:131;:::i;:::-;4765:139;;4492:419;;;:::o;4917:174::-;5057:26;5053:1;5045:6;5041:14;5034:50;4917:174;:::o;5097:366::-;5239:3;5260:67;5324:2;5319:3;5260:67;:::i;:::-;5253:74;;5336:93;5425:3;5336:93;:::i;:::-;5454:2;5449:3;5445:12;5438:19;;5097:366;;;:::o;5469:419::-;5635:4;5673:2;5662:9;5658:18;5650:26;;5722:9;5716:4;5712:20;5708:1;5697:9;5693:17;5686:47;5750:131;5876:4;5750:131;:::i;:::-;5742:139;;5469:419;;;:::o;5894:168::-;6034:20;6030:1;6022:6;6018:14;6011:44;5894:168;:::o;6068:366::-;6210:3;6231:67;6295:2;6290:3;6231:67;:::i;:::-;6224:74;;6307:93;6396:3;6307:93;:::i;:::-;6425:2;6420:3;6416:12;6409:19;;6068:366;;;:::o;6440:419::-;6606:4;6644:2;6633:9;6629:18;6621:26;;6693:9;6687:4;6683:20;6679:1;6668:9;6664:17;6657:47;6721:131;6847:4;6721:131;:::i;:::-;6713:139;;6440:419;;;:::o;6865:166::-;7005:18;7001:1;6993:6;6989:14;6982:42;6865:166;:::o;7037:366::-;7179:3;7200:67;7264:2;7259:3;7200:67;:::i;:::-;7193:74;;7276:93;7365:3;7276:93;:::i;:::-;7394:2;7389:3;7385:12;7378:19;;7037:366;;;:::o;7409:419::-;7575:4;7613:2;7602:9;7598:18;7590:26;;7662:9;7656:4;7652:20;7648:1;7637:9;7633:17;7626:47;7690:131;7816:4;7690:131;:::i;:::-;7682:139;;7409:419;;;:::o;7834:168::-;7974:20;7970:1;7962:6;7958:14;7951:44;7834:168;:::o;8008:366::-;8150:3;8171:67;8235:2;8230:3;8171:67;:::i;:::-;8164:74;;8247:93;8336:3;8247:93;:::i;:::-;8365:2;8360:3;8356:12;8349:19;;8008:366;;;:::o;8380:419::-;8546:4;8584:2;8573:9;8569:18;8561:26;;8633:9;8627:4;8623:20;8619:1;8608:9;8604:17;8597:47;8661:131;8787:4;8661:131;:::i;:::-;8653:139;;8380:419;;;:::o;8805:174::-;8945:26;8941:1;8933:6;8929:14;8922:50;8805:174;:::o;8985:366::-;9127:3;9148:67;9212:2;9207:3;9148:67;:::i;:::-;9141:74;;9224:93;9313:3;9224:93;:::i;:::-;9342:2;9337:3;9333:12;9326:19;;8985:366;;;:::o;9357:419::-;9523:4;9561:2;9550:9;9546:18;9538:26;;9610:9;9604:4;9600:20;9596:1;9585:9;9581:17;9574:47;9638:131;9764:4;9638:131;:::i;:::-;9630:139;;9357:419;;;:::o;9782:180::-;9830:77;9827:1;9820:88;9927:4;9924:1;9917:15;9951:4;9948:1;9941:15;9968:194;10008:4;10028:20;10046:1;10028:20;:::i;:::-;10023:25;;10062:20;10080:1;10062:20;:::i;:::-;10057:25;;10106:1;10103;10099:9;10091:17;;10130:1;10124:4;10121:11;10118:37;;;10135:18;;:::i;:::-;10118:37;9968:194;;;;:::o;10168:191::-;10208:3;10227:20;10245:1;10227:20;:::i;:::-;10222:25;;10261:20;10279:1;10261:20;:::i;:::-;10256:25;;10304:1;10301;10297:9;10290:16;;10325:3;10322:1;10319:10;10316:36;;;10332:18;;:::i;:::-;10316:36;10168:191;;;;:::o;10365:220::-;10505:34;10501:1;10493:6;10489:14;10482:58;10574:3;10569:2;10561:6;10557:15;10550:28;10365:220;:::o;10591:366::-;10733:3;10754:67;10818:2;10813:3;10754:67;:::i;:::-;10747:74;;10830:93;10919:3;10830:93;:::i;:::-;10948:2;10943:3;10939:12;10932:19;;10591:366;;;:::o;10963:419::-;11129:4;11167:2;11156:9;11152:18;11144:26;;11216:9;11210:4;11206:20;11202:1;11191:9;11187:17;11180:47;11244:131;11370:4;11244:131;:::i;:::-;11236:139;;10963:419;;;:::o;11388:171::-;11528:23;11524:1;11516:6;11512:14;11505:47;11388:171;:::o;11565:366::-;11707:3;11728:67;11792:2;11787:3;11728:67;:::i;:::-;11721:74;;11804:93;11893:3;11804:93;:::i;:::-;11922:2;11917:3;11913:12;11906:19;;11565:366;;;:::o;11937:419::-;12103:4;12141:2;12130:9;12126:18;12118:26;;12190:9;12184:4;12180:20;12176:1;12165:9;12161:17;12154:47;12218:131;12344:4;12218:131;:::i;:::-;12210:139;;11937:419;;;:::o;12362:179::-;12502:31;12498:1;12490:6;12486:14;12479:55;12362:179;:::o;12547:366::-;12689:3;12710:67;12774:2;12769:3;12710:67;:::i;:::-;12703:74;;12786:93;12875:3;12786:93;:::i;:::-;12904:2;12899:3;12895:12;12888:19;;12547:366;;;:::o;12919:419::-;13085:4;13123:2;13112:9;13108:18;13100:26;;13172:9;13166:4;13162:20;13158:1;13147:9;13143:17;13136:47;13200:131;13326:4;13200:131;:::i;:::-;13192:139;;12919:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "935200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2907",
								"mint(address,uint256)": "infinite",
								"owner()": "2574",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 510,
									"end": 3594,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 510,
									"end": 3594,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 510,
									"end": 3594,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 673,
									"end": 770,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 673,
									"end": 770,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 673,
									"end": 770,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 673,
									"end": 770,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 673,
									"end": 770,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 673,
									"end": 770,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 673,
									"end": 770,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 673,
									"end": 770,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 673,
									"end": 770,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 673,
									"end": 770,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 673,
									"end": 770,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 697,
									"end": 712,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 697,
									"end": 712,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 697,
									"end": 712,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 697,
									"end": 712,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 697,
									"end": 712,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 697,
									"end": 712,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 697,
									"end": 712,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 697,
									"end": 712,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 697,
									"end": 712,
									"name": "PUSH",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 697,
									"end": 712,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 697,
									"end": 712,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 697,
									"end": 712,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 697,
									"end": 712,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 697,
									"end": 712,
									"name": "PUSH",
									"source": 5,
									"value": "4D79546F6B656E00000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 697,
									"end": 712,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 697,
									"end": 712,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 697,
									"end": 712,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 697,
									"end": 702,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 697,
									"end": 712,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 697,
									"end": 712,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 697,
									"end": 712,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 697,
									"end": 712,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 697,
									"end": 712,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 697,
									"end": 712,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 697,
									"end": 712,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 697,
									"end": 712,
									"name": "tag",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 697,
									"end": 712,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 697,
									"end": 712,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 722,
									"end": 735,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 722,
									"end": 735,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 722,
									"end": 735,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 722,
									"end": 735,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 722,
									"end": 735,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 722,
									"end": 735,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 722,
									"end": 735,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 722,
									"end": 735,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 722,
									"end": 735,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 722,
									"end": 735,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 722,
									"end": 735,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 722,
									"end": 735,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 722,
									"end": 735,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 722,
									"end": 735,
									"name": "PUSH",
									"source": 5,
									"value": "4D544B0000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 722,
									"end": 735,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 722,
									"end": 735,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 722,
									"end": 735,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 722,
									"end": 729,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 722,
									"end": 735,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 722,
									"end": 735,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 722,
									"end": 735,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 722,
									"end": 735,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 722,
									"end": 735,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 722,
									"end": 735,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 722,
									"end": 735,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 722,
									"end": 735,
									"name": "tag",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 722,
									"end": 735,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 722,
									"end": 735,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 753,
									"end": 763,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 745,
									"end": 750,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 745,
									"end": 750,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 745,
									"end": 763,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 745,
									"end": 763,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 745,
									"end": 763,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 745,
									"end": 763,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 745,
									"end": 763,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 745,
									"end": 763,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 745,
									"end": 763,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 745,
									"end": 763,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 745,
									"end": 763,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 745,
									"end": 763,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 745,
									"end": 763,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 745,
									"end": 763,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 745,
									"end": 763,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 745,
									"end": 763,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 745,
									"end": 763,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 745,
									"end": 763,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 745,
									"end": 763,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 745,
									"end": 763,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 510,
									"end": 3594,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 510,
									"end": 3594,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2287,
									"end": 2288,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2280,
									"end": 2288,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2280,
									"end": 2288,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "76"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 6,
									"value": "76"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 510,
									"end": 3594,
									"name": "tag",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 510,
									"end": 3594,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 510,
									"end": 3594,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 510,
									"end": 3594,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 510,
									"end": 3594,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 510,
									"end": 3594,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 510,
									"end": 3594,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 510,
									"end": 3594,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 510,
									"end": 3594,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d9adb284910910483c3986d2d4eb73773aaae8d79c088eca136dd96262a8b57164736f6c634300081e0033",
									".code": [
										{
											"begin": 510,
											"end": 3594,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 510,
											"end": 3594,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 510,
											"end": 3594,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 510,
											"end": 3594,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 510,
											"end": 3594,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 510,
											"end": 3594,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 510,
											"end": 3594,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 510,
											"end": 3594,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 510,
											"end": 3594,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 510,
											"end": 3594,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 510,
											"end": 3594,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 510,
											"end": 3594,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 510,
											"end": 3594,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 510,
											"end": 3594,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 510,
											"end": 3594,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 510,
											"end": 3594,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 510,
											"end": 3594,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 510,
											"end": 3594,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 510,
											"end": 3594,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 510,
											"end": 3594,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 510,
											"end": 3594,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 510,
											"end": 3594,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 510,
											"end": 3594,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 510,
											"end": 3594,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 510,
											"end": 3594,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 510,
											"end": 3594,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 510,
											"end": 3594,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 510,
											"end": 3594,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 510,
											"end": 3594,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 510,
											"end": 3594,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 510,
											"end": 3594,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 510,
											"end": 3594,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 510,
											"end": 3594,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 510,
											"end": 3594,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 510,
											"end": 3594,
											"name": "PUSH",
											"source": 5,
											"value": "40C10F19"
										},
										{
											"begin": 510,
											"end": 3594,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 510,
											"end": 3594,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 510,
											"end": 3594,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 510,
											"end": 3594,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 510,
											"end": 3594,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 510,
											"end": 3594,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 510,
											"end": 3594,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 510,
											"end": 3594,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 510,
											"end": 3594,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 510,
											"end": 3594,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 510,
											"end": 3594,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 510,
											"end": 3594,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 510,
											"end": 3594,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 510,
											"end": 3594,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 510,
											"end": 3594,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 510,
											"end": 3594,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 510,
											"end": 3594,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 510,
											"end": 3594,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 510,
											"end": 3594,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 510,
											"end": 3594,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 510,
											"end": 3594,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 510,
											"end": 3594,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 510,
											"end": 3594,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2396,
											"end": 2748,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2396,
											"end": 2748,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2396,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2396,
											"end": 2748,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2396,
											"end": 2748,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2396,
											"end": 2748,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2396,
											"end": 2748,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2396,
											"end": 2748,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2396,
											"end": 2748,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2396,
											"end": 2748,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2396,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 2396,
											"end": 2748,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2396,
											"end": 2748,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2396,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 2396,
											"end": 2748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2396,
											"end": 2748,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 2396,
											"end": 2748,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2396,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 2396,
											"end": 2748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2396,
											"end": 2748,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2396,
											"end": 2748,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2396,
											"end": 2748,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2396,
											"end": 2748,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2396,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 2396,
											"end": 2748,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2396,
											"end": 2748,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2396,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 2396,
											"end": 2748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2396,
											"end": 2748,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 2396,
											"end": 2748,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2396,
											"end": 2748,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2396,
											"end": 2748,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2396,
											"end": 2748,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2396,
											"end": 2748,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2396,
											"end": 2748,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2396,
											"end": 2748,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2396,
											"end": 2748,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 3592,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2774,
											"end": 3592,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 3592,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 2774,
											"end": 3592,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2774,
											"end": 3592,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 3592,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 3592,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 3592,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 3592,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 3592,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 3592,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 2774,
											"end": 3592,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 3592,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 3592,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 2774,
											"end": 3592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 3592,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 2774,
											"end": 3592,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 3592,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 2774,
											"end": 3592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 3592,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 2774,
											"end": 3592,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 3592,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2774,
											"end": 3592,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 3592,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 2774,
											"end": 3592,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 3592,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 3592,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 2774,
											"end": 3592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 3592,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 2774,
											"end": 3592,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 3592,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2774,
											"end": 3592,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 3592,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 3592,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 3592,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 3592,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 3592,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1532,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1282,
											"end": 1532,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1282,
											"end": 1532,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1282,
											"end": 1532,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1532,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1532,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1532,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1532,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1532,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1282,
											"end": 1532,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1532,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1282,
											"end": 1532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1532,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1282,
											"end": 1532,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 1282,
											"end": 1532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1532,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1282,
											"end": 1532,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1532,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1565,
											"end": 1736,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1565,
											"end": 1736,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1565,
											"end": 1736,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 1565,
											"end": 1736,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1565,
											"end": 1736,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1565,
											"end": 1736,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1565,
											"end": 1736,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1565,
											"end": 1736,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1565,
											"end": 1736,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1565,
											"end": 1736,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1565,
											"end": 1736,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1565,
											"end": 1736,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1565,
											"end": 1736,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1565,
											"end": 1736,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 1565,
											"end": 1736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1565,
											"end": 1736,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1565,
											"end": 1736,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1565,
											"end": 1736,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 1565,
											"end": 1736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1565,
											"end": 1736,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 1565,
											"end": 1736,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1565,
											"end": 1736,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1565,
											"end": 1736,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1565,
											"end": 1736,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 1565,
											"end": 1736,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1565,
											"end": 1736,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1565,
											"end": 1736,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 1565,
											"end": 1736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1565,
											"end": 1736,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 1565,
											"end": 1736,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1565,
											"end": 1736,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1565,
											"end": 1736,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1565,
											"end": 1736,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1565,
											"end": 1736,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1565,
											"end": 1736,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1565,
											"end": 1736,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1565,
											"end": 1736,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 613,
											"end": 633,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 613,
											"end": 633,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 613,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 613,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 613,
											"end": 633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 613,
											"end": 633,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 613,
											"end": 633,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 613,
											"end": 633,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 613,
											"end": 633,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 613,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 613,
											"end": 633,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 613,
											"end": 633,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 613,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 613,
											"end": 633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 613,
											"end": 633,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 613,
											"end": 633,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 613,
											"end": 633,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 613,
											"end": 633,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 613,
											"end": 633,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 613,
											"end": 633,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 613,
											"end": 633,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 613,
											"end": 633,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 613,
											"end": 633,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1762,
											"end": 2370,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1762,
											"end": 2370,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1762,
											"end": 2370,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 1762,
											"end": 2370,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1762,
											"end": 2370,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1762,
											"end": 2370,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1762,
											"end": 2370,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1762,
											"end": 2370,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1762,
											"end": 2370,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1762,
											"end": 2370,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1762,
											"end": 2370,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 1762,
											"end": 2370,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1762,
											"end": 2370,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1762,
											"end": 2370,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1762,
											"end": 2370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1762,
											"end": 2370,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 1762,
											"end": 2370,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1762,
											"end": 2370,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 1762,
											"end": 2370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1762,
											"end": 2370,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 1762,
											"end": 2370,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1762,
											"end": 2370,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1762,
											"end": 2370,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1762,
											"end": 2370,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 1762,
											"end": 2370,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1762,
											"end": 2370,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1762,
											"end": 2370,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1762,
											"end": 2370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1762,
											"end": 2370,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 1762,
											"end": 2370,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1762,
											"end": 2370,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1762,
											"end": 2370,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1762,
											"end": 2370,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1762,
											"end": 2370,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1762,
											"end": 2370,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1762,
											"end": 2370,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1762,
											"end": 2370,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2396,
											"end": 2748,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 2396,
											"end": 2748,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2463,
											"end": 2467,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2529,
											"end": 2530,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2511,
											"end": 2531,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2511,
											"end": 2531,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2511,
											"end": 2518,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2511,
											"end": 2531,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2511,
											"end": 2531,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2511,
											"end": 2531,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2503,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 2503,
											"end": 2556,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2503,
											"end": 2556,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2503,
											"end": 2556,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2503,
											"end": 2556,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2503,
											"end": 2556,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2503,
											"end": 2556,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2503,
											"end": 2556,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2503,
											"end": 2556,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2503,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 2503,
											"end": 2556,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2503,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2503,
											"end": 2556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2503,
											"end": 2556,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 2503,
											"end": 2556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2503,
											"end": 2556,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2503,
											"end": 2556,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2503,
											"end": 2556,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2503,
											"end": 2556,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2503,
											"end": 2556,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2503,
											"end": 2556,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2503,
											"end": 2556,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2503,
											"end": 2556,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 2503,
											"end": 2556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2583,
											"end": 2584,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2574,
											"end": 2580,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2574,
											"end": 2584,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2566,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 2566,
											"end": 2612,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2566,
											"end": 2612,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2612,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2566,
											"end": 2612,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2566,
											"end": 2612,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2566,
											"end": 2612,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2566,
											"end": 2612,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2566,
											"end": 2612,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2566,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 2566,
											"end": 2612,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2566,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 2566,
											"end": 2612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2566,
											"end": 2612,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 2566,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2566,
											"end": 2612,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2612,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2566,
											"end": 2612,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2566,
											"end": 2612,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2566,
											"end": 2612,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2566,
											"end": 2612,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2566,
											"end": 2612,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2566,
											"end": 2612,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 2566,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2658,
											"end": 2664,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2634,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2623,
											"end": 2646,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2635,
											"end": 2645,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2646,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2623,
											"end": 2646,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2646,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2623,
											"end": 2646,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2646,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2646,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2646,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2623,
											"end": 2646,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2646,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2646,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2646,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2646,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2623,
											"end": 2646,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2646,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2623,
											"end": 2646,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2655,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2647,
											"end": 2654,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2655,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2623,
											"end": 2655,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2655,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2623,
											"end": 2655,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2655,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2655,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2655,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2623,
											"end": 2655,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2655,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2655,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2655,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2655,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2623,
											"end": 2655,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2655,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2623,
											"end": 2655,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2664,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2664,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2664,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2664,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2704,
											"end": 2711,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2680,
											"end": 2720,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2680,
											"end": 2720,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2692,
											"end": 2702,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2680,
											"end": 2720,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2680,
											"end": 2720,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2680,
											"end": 2720,
											"name": "PUSH",
											"source": 5,
											"value": "8DFFE93EDF65C77E66E298BCF7BA5BA81A3F70C8641F098066DF4E8ED21E684"
										},
										{
											"begin": 2713,
											"end": 2719,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2680,
											"end": 2720,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2680,
											"end": 2720,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2680,
											"end": 2720,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2680,
											"end": 2720,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2680,
											"end": 2720,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2680,
											"end": 2720,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 2680,
											"end": 2720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2680,
											"end": 2720,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2680,
											"end": 2720,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2680,
											"end": 2720,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2680,
											"end": 2720,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2680,
											"end": 2720,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2680,
											"end": 2720,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2680,
											"end": 2720,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2680,
											"end": 2720,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2680,
											"end": 2720,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 2737,
											"end": 2741,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2730,
											"end": 2741,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2730,
											"end": 2741,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2396,
											"end": 2748,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2396,
											"end": 2748,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2396,
											"end": 2748,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2396,
											"end": 2748,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2396,
											"end": 2748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 3592,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 2774,
											"end": 3592,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2854,
											"end": 2858,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2917,
											"end": 2918,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2902,
											"end": 2919,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2902,
											"end": 2919,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2902,
											"end": 2906,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2902,
											"end": 2919,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2902,
											"end": 2919,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2902,
											"end": 2919,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2894,
											"end": 2941,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 2894,
											"end": 2941,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2894,
											"end": 2941,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2894,
											"end": 2941,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2894,
											"end": 2941,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2894,
											"end": 2941,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2894,
											"end": 2941,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2894,
											"end": 2941,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2894,
											"end": 2941,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2894,
											"end": 2941,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 2894,
											"end": 2941,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2894,
											"end": 2941,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 2894,
											"end": 2941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2894,
											"end": 2941,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 2894,
											"end": 2941,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2894,
											"end": 2941,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2894,
											"end": 2941,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2894,
											"end": 2941,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2894,
											"end": 2941,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2894,
											"end": 2941,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2894,
											"end": 2941,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2894,
											"end": 2941,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2894,
											"end": 2941,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 2894,
											"end": 2941,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2972,
											"end": 2973,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2959,
											"end": 2974,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2959,
											"end": 2974,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2959,
											"end": 2961,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2959,
											"end": 2974,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2959,
											"end": 2974,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2959,
											"end": 2974,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2951,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 2951,
											"end": 2994,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2951,
											"end": 2994,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2951,
											"end": 2994,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2951,
											"end": 2994,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2951,
											"end": 2994,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2951,
											"end": 2994,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2951,
											"end": 2994,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2951,
											"end": 2994,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2951,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 2951,
											"end": 2994,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2951,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 2951,
											"end": 2994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2951,
											"end": 2994,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 2951,
											"end": 2994,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2951,
											"end": 2994,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2951,
											"end": 2994,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2951,
											"end": 2994,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2951,
											"end": 2994,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2951,
											"end": 2994,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2951,
											"end": 2994,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2951,
											"end": 2994,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2951,
											"end": 2994,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 2951,
											"end": 2994,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3021,
											"end": 3022,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3012,
											"end": 3018,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3012,
											"end": 3022,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3050,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 3004,
											"end": 3050,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3050,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3050,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3050,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3004,
											"end": 3050,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3050,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3050,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3050,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3050,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 3004,
											"end": 3050,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3050,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 3004,
											"end": 3050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3050,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 3004,
											"end": 3050,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3050,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3050,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3050,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3050,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3050,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3050,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3050,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3050,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 3004,
											"end": 3050,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3131,
											"end": 3137,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3098,
											"end": 3109,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3098,
											"end": 3115,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3110,
											"end": 3114,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3098,
											"end": 3115,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3098,
											"end": 3115,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3098,
											"end": 3115,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3098,
											"end": 3115,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3098,
											"end": 3115,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3098,
											"end": 3115,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3098,
											"end": 3115,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3115,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3098,
											"end": 3115,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3098,
											"end": 3115,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3098,
											"end": 3115,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3098,
											"end": 3115,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3115,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3098,
											"end": 3115,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3115,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3098,
											"end": 3127,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3116,
											"end": 3126,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3098,
											"end": 3127,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3098,
											"end": 3127,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3098,
											"end": 3127,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3098,
											"end": 3127,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3098,
											"end": 3127,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3098,
											"end": 3127,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3098,
											"end": 3127,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3127,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3098,
											"end": 3127,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3098,
											"end": 3127,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3098,
											"end": 3127,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3098,
											"end": 3127,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3127,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3098,
											"end": 3127,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3127,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3098,
											"end": 3127,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3098,
											"end": 3137,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3098,
											"end": 3137,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3090,
											"end": 3159,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 3090,
											"end": 3159,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3090,
											"end": 3159,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3090,
											"end": 3159,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3090,
											"end": 3159,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3090,
											"end": 3159,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3090,
											"end": 3159,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3090,
											"end": 3159,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3090,
											"end": 3159,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3090,
											"end": 3159,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 3090,
											"end": 3159,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3090,
											"end": 3159,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 3090,
											"end": 3159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3090,
											"end": 3159,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 3090,
											"end": 3159,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3090,
											"end": 3159,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3090,
											"end": 3159,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3090,
											"end": 3159,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3090,
											"end": 3159,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3090,
											"end": 3159,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3090,
											"end": 3159,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3090,
											"end": 3159,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3090,
											"end": 3159,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 3090,
											"end": 3159,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3194,
											"end": 3212,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3215,
											"end": 3224,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3215,
											"end": 3230,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3225,
											"end": 3229,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3215,
											"end": 3230,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3215,
											"end": 3230,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3215,
											"end": 3230,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3215,
											"end": 3230,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3215,
											"end": 3230,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3215,
											"end": 3230,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3215,
											"end": 3230,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3215,
											"end": 3230,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3215,
											"end": 3230,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3215,
											"end": 3230,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3215,
											"end": 3230,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3215,
											"end": 3230,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3215,
											"end": 3230,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3215,
											"end": 3230,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3215,
											"end": 3230,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3215,
											"end": 3230,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3194,
											"end": 3230,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3194,
											"end": 3230,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3257,
											"end": 3263,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3254,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3263,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3240,
											"end": 3402,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3240,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 3240,
											"end": 3402,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3279,
											"end": 3313,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3279,
											"end": 3313,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3279,
											"end": 3313,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3279,
											"end": 3313,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3279,
											"end": 3313,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3279,
											"end": 3313,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3279,
											"end": 3313,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3279,
											"end": 3313,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 3279,
											"end": 3313,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3279,
											"end": 3313,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 3279,
											"end": 3313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3279,
											"end": 3313,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 3279,
											"end": 3313,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3279,
											"end": 3313,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3279,
											"end": 3313,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3279,
											"end": 3313,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3279,
											"end": 3313,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3279,
											"end": 3313,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3279,
											"end": 3313,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3279,
											"end": 3313,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3240,
											"end": 3402,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 3240,
											"end": 3402,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3385,
											"end": 3391,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3366,
											"end": 3375,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3366,
											"end": 3381,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3376,
											"end": 3380,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3366,
											"end": 3381,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3366,
											"end": 3381,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3366,
											"end": 3381,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3366,
											"end": 3381,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3366,
											"end": 3381,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3366,
											"end": 3381,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3366,
											"end": 3381,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3366,
											"end": 3381,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3366,
											"end": 3381,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3366,
											"end": 3381,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3366,
											"end": 3381,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3366,
											"end": 3381,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3366,
											"end": 3381,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3366,
											"end": 3381,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3366,
											"end": 3381,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3366,
											"end": 3381,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3366,
											"end": 3391,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3366,
											"end": 3391,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3366,
											"end": 3391,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3366,
											"end": 3391,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 3366,
											"end": 3391,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3366,
											"end": 3391,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3366,
											"end": 3391,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 3366,
											"end": 3391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3366,
											"end": 3391,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 3366,
											"end": 3391,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3366,
											"end": 3391,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3366,
											"end": 3391,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3366,
											"end": 3391,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3366,
											"end": 3391,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3366,
											"end": 3391,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3366,
											"end": 3391,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3366,
											"end": 3391,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3446,
											"end": 3452,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3429,
											"end": 3438,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3429,
											"end": 3442,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3439,
											"end": 3441,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3429,
											"end": 3442,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3429,
											"end": 3442,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3429,
											"end": 3442,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3429,
											"end": 3442,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3429,
											"end": 3442,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3429,
											"end": 3442,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3429,
											"end": 3442,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3429,
											"end": 3442,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3429,
											"end": 3442,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3429,
											"end": 3442,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3429,
											"end": 3442,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3429,
											"end": 3442,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3429,
											"end": 3442,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3429,
											"end": 3442,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3429,
											"end": 3442,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3429,
											"end": 3442,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3429,
											"end": 3452,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3429,
											"end": 3452,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3429,
											"end": 3452,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3429,
											"end": 3452,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 3429,
											"end": 3452,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3429,
											"end": 3452,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3429,
											"end": 3452,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3429,
											"end": 3452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3429,
											"end": 3452,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 3429,
											"end": 3452,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3429,
											"end": 3452,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3429,
											"end": 3452,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3429,
											"end": 3452,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3429,
											"end": 3452,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3429,
											"end": 3452,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3429,
											"end": 3452,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3429,
											"end": 3452,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3495,
											"end": 3501,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3462,
											"end": 3479,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3474,
											"end": 3478,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3479,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3462,
											"end": 3479,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3479,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3462,
											"end": 3479,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3479,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3479,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3479,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3479,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3479,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3479,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3479,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3479,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3479,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3479,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3479,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3491,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3490,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3491,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3462,
											"end": 3491,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3491,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3462,
											"end": 3491,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3491,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3491,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3491,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3491,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3491,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3491,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3491,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3491,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3491,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3491,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3491,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3491,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3501,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3501,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3501,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3501,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 3462,
											"end": 3501,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3501,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3501,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 3462,
											"end": 3501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3501,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 3462,
											"end": 3501,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3501,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3501,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3501,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3501,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3501,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3501,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3501,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3553,
											"end": 3555,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3535,
											"end": 3564,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3535,
											"end": 3564,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3547,
											"end": 3551,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3535,
											"end": 3564,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3535,
											"end": 3564,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3535,
											"end": 3564,
											"name": "PUSH",
											"source": 5,
											"value": "21425341546D2023146851FB583DB9B7C6BE5FED0D287293C85A8EDE5193C6EA"
										},
										{
											"begin": 3557,
											"end": 3563,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3535,
											"end": 3564,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3535,
											"end": 3564,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3535,
											"end": 3564,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 3535,
											"end": 3564,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3535,
											"end": 3564,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3535,
											"end": 3564,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 3535,
											"end": 3564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3535,
											"end": 3564,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 3535,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3535,
											"end": 3564,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3535,
											"end": 3564,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3535,
											"end": 3564,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3535,
											"end": 3564,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3535,
											"end": 3564,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3535,
											"end": 3564,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3535,
											"end": 3564,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 3581,
											"end": 3585,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3574,
											"end": 3585,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3574,
											"end": 3585,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3574,
											"end": 3585,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 3592,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 3592,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 3592,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 3592,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 3592,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 3592,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1532,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 1282,
											"end": 1532,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 829,
											"end": 834,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 829,
											"end": 834,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 829,
											"end": 834,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 829,
											"end": 834,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 829,
											"end": 834,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 829,
											"end": 834,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 829,
											"end": 834,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 829,
											"end": 834,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 829,
											"end": 834,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 829,
											"end": 834,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 829,
											"end": 834,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 815,
											"end": 834,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 815,
											"end": 834,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 815,
											"end": 825,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 815,
											"end": 834,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 815,
											"end": 834,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 815,
											"end": 834,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 807,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 807,
											"end": 871,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 807,
											"end": 871,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 871,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 807,
											"end": 871,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 807,
											"end": 871,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 807,
											"end": 871,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 807,
											"end": 871,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 871,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 807,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 807,
											"end": 871,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 807,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 807,
											"end": 871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 807,
											"end": 871,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 807,
											"end": 871,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 807,
											"end": 871,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 871,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 807,
											"end": 871,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 807,
											"end": 871,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 807,
											"end": 871,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 807,
											"end": 871,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 807,
											"end": 871,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 807,
											"end": 871,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 807,
											"end": 871,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1372,
											"end": 1373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1359,
											"end": 1374,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1359,
											"end": 1374,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1361,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1374,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1359,
											"end": 1374,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1374,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1351,
											"end": 1399,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1351,
											"end": 1399,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1351,
											"end": 1399,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1351,
											"end": 1399,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1351,
											"end": 1399,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1351,
											"end": 1399,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1351,
											"end": 1399,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1351,
											"end": 1399,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1351,
											"end": 1399,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1351,
											"end": 1399,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1351,
											"end": 1399,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1351,
											"end": 1399,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1351,
											"end": 1399,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1351,
											"end": 1399,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1351,
											"end": 1399,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1351,
											"end": 1399,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1351,
											"end": 1399,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1351,
											"end": 1399,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1351,
											"end": 1399,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1351,
											"end": 1399,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1351,
											"end": 1399,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1351,
											"end": 1399,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1351,
											"end": 1399,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1351,
											"end": 1399,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1426,
											"end": 1427,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1417,
											"end": 1423,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1417,
											"end": 1427,
											"modifierDepth": 1,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1409,
											"end": 1461,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 1409,
											"end": 1461,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1409,
											"end": 1461,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1409,
											"end": 1461,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1409,
											"end": 1461,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1409,
											"end": 1461,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1409,
											"end": 1461,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1409,
											"end": 1461,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1409,
											"end": 1461,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1409,
											"end": 1461,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 1409,
											"end": 1461,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1409,
											"end": 1461,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 1409,
											"end": 1461,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1409,
											"end": 1461,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 1409,
											"end": 1461,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1409,
											"end": 1461,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1409,
											"end": 1461,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1409,
											"end": 1461,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1409,
											"end": 1461,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1409,
											"end": 1461,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1409,
											"end": 1461,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1409,
											"end": 1461,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1409,
											"end": 1461,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 1409,
											"end": 1461,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1488,
											"end": 1494,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1471,
											"end": 1480,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1471,
											"end": 1484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1481,
											"end": 1483,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1471,
											"end": 1484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1471,
											"end": 1484,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1471,
											"end": 1484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1471,
											"end": 1484,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1471,
											"end": 1484,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1471,
											"end": 1484,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1471,
											"end": 1484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1471,
											"end": 1484,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1471,
											"end": 1484,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1471,
											"end": 1484,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1471,
											"end": 1484,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1471,
											"end": 1484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1471,
											"end": 1484,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1471,
											"end": 1484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1471,
											"end": 1484,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1471,
											"end": 1484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1471,
											"end": 1494,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1471,
											"end": 1494,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1471,
											"end": 1494,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1471,
											"end": 1494,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 1471,
											"end": 1494,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1471,
											"end": 1494,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1471,
											"end": 1494,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1471,
											"end": 1494,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1471,
											"end": 1494,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 1471,
											"end": 1494,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1471,
											"end": 1494,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1471,
											"end": 1494,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1471,
											"end": 1494,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1471,
											"end": 1494,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1471,
											"end": 1494,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1471,
											"end": 1494,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1471,
											"end": 1494,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1519,
											"end": 1525,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1504,
											"end": 1515,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1504,
											"end": 1515,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1504,
											"end": 1525,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1504,
											"end": 1525,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1504,
											"end": 1525,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1504,
											"end": 1525,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 1504,
											"end": 1525,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1504,
											"end": 1525,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1504,
											"end": 1525,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1504,
											"end": 1525,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1504,
											"end": 1525,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 1504,
											"end": 1525,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1504,
											"end": 1525,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1504,
											"end": 1525,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1504,
											"end": 1525,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1504,
											"end": 1525,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1504,
											"end": 1525,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1504,
											"end": 1525,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1504,
											"end": 1525,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1532,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1532,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1565,
											"end": 1736,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 1565,
											"end": 1736,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1622,
											"end": 1629,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1667,
											"end": 1668,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1649,
											"end": 1669,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1649,
											"end": 1669,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1649,
											"end": 1656,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1649,
											"end": 1669,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1649,
											"end": 1669,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1649,
											"end": 1669,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1641,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 1641,
											"end": 1694,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1641,
											"end": 1694,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1641,
											"end": 1694,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1641,
											"end": 1694,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1641,
											"end": 1694,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1641,
											"end": 1694,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1641,
											"end": 1694,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1641,
											"end": 1694,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1641,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 1641,
											"end": 1694,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1641,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1641,
											"end": 1694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1641,
											"end": 1694,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 1641,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1641,
											"end": 1694,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1641,
											"end": 1694,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1641,
											"end": 1694,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1641,
											"end": 1694,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1641,
											"end": 1694,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1641,
											"end": 1694,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1641,
											"end": 1694,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1641,
											"end": 1694,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 1641,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1711,
											"end": 1720,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1711,
											"end": 1729,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1721,
											"end": 1728,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1711,
											"end": 1729,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1711,
											"end": 1729,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1711,
											"end": 1729,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1711,
											"end": 1729,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1711,
											"end": 1729,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1711,
											"end": 1729,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1711,
											"end": 1729,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1711,
											"end": 1729,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1711,
											"end": 1729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1711,
											"end": 1729,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1711,
											"end": 1729,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1711,
											"end": 1729,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1711,
											"end": 1729,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1711,
											"end": 1729,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1711,
											"end": 1729,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1711,
											"end": 1729,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1704,
											"end": 1729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1704,
											"end": 1729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1565,
											"end": 1736,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1565,
											"end": 1736,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1565,
											"end": 1736,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1565,
											"end": 1736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 613,
											"end": 633,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 613,
											"end": 633,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 613,
											"end": 633,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 613,
											"end": 633,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 613,
											"end": 633,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 613,
											"end": 633,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 613,
											"end": 633,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 613,
											"end": 633,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 613,
											"end": 633,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 613,
											"end": 633,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 613,
											"end": 633,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 613,
											"end": 633,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 613,
											"end": 633,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 613,
											"end": 633,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 613,
											"end": 633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1762,
											"end": 2370,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 1762,
											"end": 2370,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1828,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1885,
											"end": 1886,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1872,
											"end": 1887,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1872,
											"end": 1887,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 1874,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 1887,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1872,
											"end": 1887,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 1887,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1864,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 1864,
											"end": 1912,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1864,
											"end": 1912,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1864,
											"end": 1912,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1864,
											"end": 1912,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1864,
											"end": 1912,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1864,
											"end": 1912,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1864,
											"end": 1912,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1864,
											"end": 1912,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1864,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 1864,
											"end": 1912,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1864,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1864,
											"end": 1912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1864,
											"end": 1912,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 1864,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1864,
											"end": 1912,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1864,
											"end": 1912,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1864,
											"end": 1912,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1864,
											"end": 1912,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1864,
											"end": 1912,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1864,
											"end": 1912,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1864,
											"end": 1912,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1864,
											"end": 1912,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 1864,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 1940,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1930,
											"end": 1936,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1930,
											"end": 1940,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1922,
											"end": 1968,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 1922,
											"end": 1968,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1922,
											"end": 1968,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1922,
											"end": 1968,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1922,
											"end": 1968,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1922,
											"end": 1968,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1922,
											"end": 1968,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1922,
											"end": 1968,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1922,
											"end": 1968,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1922,
											"end": 1968,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 1922,
											"end": 1968,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1922,
											"end": 1968,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 1922,
											"end": 1968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1922,
											"end": 1968,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 1922,
											"end": 1968,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1922,
											"end": 1968,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1922,
											"end": 1968,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1922,
											"end": 1968,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1922,
											"end": 1968,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1922,
											"end": 1968,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1922,
											"end": 1968,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1922,
											"end": 1968,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1922,
											"end": 1968,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 1922,
											"end": 1968,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2021,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2024,
											"end": 2033,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2024,
											"end": 2045,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2044,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2024,
											"end": 2045,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2024,
											"end": 2045,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2024,
											"end": 2045,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2024,
											"end": 2045,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2024,
											"end": 2045,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2024,
											"end": 2045,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2024,
											"end": 2045,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2024,
											"end": 2045,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2024,
											"end": 2045,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2024,
											"end": 2045,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2024,
											"end": 2045,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2024,
											"end": 2045,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2024,
											"end": 2045,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2024,
											"end": 2045,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2024,
											"end": 2045,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2024,
											"end": 2045,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2045,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2045,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2072,
											"end": 2078,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2059,
											"end": 2069,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2059,
											"end": 2078,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2055,
											"end": 2223,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2055,
											"end": 2223,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 2055,
											"end": 2223,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2128,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2094,
											"end": 2128,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2128,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2094,
											"end": 2128,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2128,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2128,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2094,
											"end": 2128,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 2094,
											"end": 2128,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 2094,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2128,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 2094,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2128,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2094,
											"end": 2128,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2128,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2128,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2128,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2128,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2128,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2055,
											"end": 2223,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 2055,
											"end": 2223,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2206,
											"end": 2212,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2181,
											"end": 2190,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2181,
											"end": 2202,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2191,
											"end": 2201,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2181,
											"end": 2202,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2181,
											"end": 2202,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2181,
											"end": 2202,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2181,
											"end": 2202,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2181,
											"end": 2202,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2181,
											"end": 2202,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2181,
											"end": 2202,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2181,
											"end": 2202,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2181,
											"end": 2202,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2181,
											"end": 2202,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2181,
											"end": 2202,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2181,
											"end": 2202,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2181,
											"end": 2202,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2181,
											"end": 2202,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2181,
											"end": 2202,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2181,
											"end": 2202,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2181,
											"end": 2212,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2181,
											"end": 2212,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2181,
											"end": 2212,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2181,
											"end": 2212,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 2181,
											"end": 2212,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2181,
											"end": 2212,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2181,
											"end": 2212,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 2181,
											"end": 2212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2181,
											"end": 2212,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 2181,
											"end": 2212,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2181,
											"end": 2212,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2181,
											"end": 2212,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2181,
											"end": 2212,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2181,
											"end": 2212,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2181,
											"end": 2212,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2181,
											"end": 2212,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2181,
											"end": 2212,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2267,
											"end": 2273,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2259,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2250,
											"end": 2263,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2260,
											"end": 2262,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2263,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2250,
											"end": 2263,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2263,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2250,
											"end": 2263,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2263,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2263,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2263,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2250,
											"end": 2263,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2263,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2263,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2263,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2263,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2250,
											"end": 2263,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2263,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2250,
											"end": 2263,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2263,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2250,
											"end": 2273,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2273,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2273,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2273,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 2250,
											"end": 2273,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2273,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2273,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2250,
											"end": 2273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2273,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 2250,
											"end": 2273,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2273,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2273,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2273,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2273,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2273,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2273,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2273,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2331,
											"end": 2333,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2307,
											"end": 2342,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2307,
											"end": 2342,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2329,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2307,
											"end": 2342,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2307,
											"end": 2342,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2307,
											"end": 2342,
											"name": "PUSH",
											"source": 5,
											"value": "21425341546D2023146851FB583DB9B7C6BE5FED0D287293C85A8EDE5193C6EA"
										},
										{
											"begin": 2335,
											"end": 2341,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2307,
											"end": 2342,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2307,
											"end": 2342,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2307,
											"end": 2342,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 2307,
											"end": 2342,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2307,
											"end": 2342,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2307,
											"end": 2342,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 2307,
											"end": 2342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2307,
											"end": 2342,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 2307,
											"end": 2342,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2307,
											"end": 2342,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2307,
											"end": 2342,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2307,
											"end": 2342,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2307,
											"end": 2342,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2307,
											"end": 2342,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2307,
											"end": 2342,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2307,
											"end": 2342,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 2359,
											"end": 2363,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2352,
											"end": 2363,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2363,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2363,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1762,
											"end": 2370,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1762,
											"end": 2370,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1762,
											"end": 2370,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1762,
											"end": 2370,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1762,
											"end": 2370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 1328,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1473,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 1601,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1197,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1767,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 1677,
											"end": 1767,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1711,
											"end": 1718,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1754,
											"end": 1759,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1747,
											"end": 1760,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1740,
											"end": 1761,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1729,
											"end": 1761,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1729,
											"end": 1761,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1767,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1767,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1767,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 1882,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 1773,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1875,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1875,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 1854,
											"end": 1875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1875,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 1854,
											"end": 1875,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1852,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1842,
											"end": 1876,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 1882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 1882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 1882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1888,
											"end": 2098,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1888,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1975,
											"end": 1979,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2015,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2002,
											"end": 2011,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1998,
											"end": 2016,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 2016,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 2016,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2026,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 2088,
											"end": 2089,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2077,
											"end": 2086,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2073,
											"end": 2090,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2064,
											"end": 2070,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2026,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 2026,
											"end": 2091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2026,
											"end": 2091,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 2026,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1888,
											"end": 2098,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1888,
											"end": 2098,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1888,
											"end": 2098,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1888,
											"end": 2098,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1888,
											"end": 2098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2104,
											"end": 2723,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 2104,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2181,
											"end": 2187,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2189,
											"end": 2195,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2203,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2246,
											"end": 2248,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2234,
											"end": 2243,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2225,
											"end": 2232,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2221,
											"end": 2244,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2217,
											"end": 2249,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2214,
											"end": 2333,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2214,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 2214,
											"end": 2333,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2252,
											"end": 2331,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 2252,
											"end": 2331,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 2252,
											"end": 2331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2252,
											"end": 2331,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 2252,
											"end": 2331,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2214,
											"end": 2333,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 2214,
											"end": 2333,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2372,
											"end": 2373,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2397,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 2442,
											"end": 2449,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2431,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2440,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2397,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2397,
											"end": 2450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2397,
											"end": 2450,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 2397,
											"end": 2450,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2450,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2450,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2343,
											"end": 2460,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2499,
											"end": 2501,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2525,
											"end": 2578,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 2570,
											"end": 2577,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2561,
											"end": 2567,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2550,
											"end": 2559,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2546,
											"end": 2568,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2578,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2525,
											"end": 2578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2578,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 2525,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2470,
											"end": 2588,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2627,
											"end": 2629,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2653,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 2698,
											"end": 2705,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2689,
											"end": 2695,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2678,
											"end": 2687,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2674,
											"end": 2696,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2653,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 2653,
											"end": 2706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2653,
											"end": 2706,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 2653,
											"end": 2706,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2706,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2706,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2716,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2104,
											"end": 2723,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2104,
											"end": 2723,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2104,
											"end": 2723,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2104,
											"end": 2723,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2104,
											"end": 2723,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2104,
											"end": 2723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2729,
											"end": 3058,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 2729,
											"end": 3058,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2788,
											"end": 2794,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2837,
											"end": 2839,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2825,
											"end": 2834,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2816,
											"end": 2823,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2812,
											"end": 2835,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2808,
											"end": 2840,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2805,
											"end": 2924,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2805,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 2805,
											"end": 2924,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2843,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 2843,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 2843,
											"end": 2922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2843,
											"end": 2922,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 2843,
											"end": 2922,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2805,
											"end": 2924,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 2805,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2963,
											"end": 2964,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2988,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 3033,
											"end": 3040,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3024,
											"end": 3030,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3013,
											"end": 3022,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3009,
											"end": 3031,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2988,
											"end": 3041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3041,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 2988,
											"end": 3041,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3041,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 3041,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2934,
											"end": 3051,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2729,
											"end": 3058,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2729,
											"end": 3058,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2729,
											"end": 3058,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2729,
											"end": 3058,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2729,
											"end": 3058,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3064,
											"end": 3182,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 3064,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3151,
											"end": 3175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 3169,
											"end": 3174,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3151,
											"end": 3175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 3151,
											"end": 3175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3151,
											"end": 3175,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 3151,
											"end": 3175,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3149,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3139,
											"end": 3176,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3064,
											"end": 3182,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3064,
											"end": 3182,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3064,
											"end": 3182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3188,
											"end": 3410,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 3188,
											"end": 3410,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3281,
											"end": 3285,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3319,
											"end": 3321,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3308,
											"end": 3317,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3304,
											"end": 3322,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3296,
											"end": 3322,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3296,
											"end": 3322,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 3400,
											"end": 3401,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3389,
											"end": 3398,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3385,
											"end": 3402,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3376,
											"end": 3382,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 3332,
											"end": 3403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 3332,
											"end": 3403,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3188,
											"end": 3410,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3188,
											"end": 3410,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3188,
											"end": 3410,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3188,
											"end": 3410,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3188,
											"end": 3410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3416,
											"end": 3534,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 3416,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3503,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 3521,
											"end": 3526,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3503,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 3503,
											"end": 3527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3503,
											"end": 3527,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 3503,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3498,
											"end": 3501,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3491,
											"end": 3528,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3416,
											"end": 3534,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3416,
											"end": 3534,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3416,
											"end": 3534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3540,
											"end": 3762,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 3540,
											"end": 3762,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3633,
											"end": 3637,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3671,
											"end": 3673,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3660,
											"end": 3669,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3656,
											"end": 3674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3648,
											"end": 3674,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3648,
											"end": 3674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3684,
											"end": 3755,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 3752,
											"end": 3753,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3741,
											"end": 3750,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3737,
											"end": 3754,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3728,
											"end": 3734,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3684,
											"end": 3755,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 3684,
											"end": 3755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3684,
											"end": 3755,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 3684,
											"end": 3755,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3540,
											"end": 3762,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3540,
											"end": 3762,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3540,
											"end": 3762,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3540,
											"end": 3762,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3540,
											"end": 3762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3768,
											"end": 3937,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 3768,
											"end": 3937,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3852,
											"end": 3863,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3886,
											"end": 3892,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3881,
											"end": 3884,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3874,
											"end": 3893,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3926,
											"end": 3930,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3921,
											"end": 3924,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3917,
											"end": 3931,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 3931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 3931,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3768,
											"end": 3937,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3768,
											"end": 3937,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3768,
											"end": 3937,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3768,
											"end": 3937,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3768,
											"end": 3937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3943,
											"end": 4114,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 3943,
											"end": 4114,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4083,
											"end": 4106,
											"name": "PUSH",
											"source": 6,
											"value": "7370656E6465722061646472657373206572726F720000000000000000000000"
										},
										{
											"begin": 4079,
											"end": 4080,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4071,
											"end": 4077,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4067,
											"end": 4081,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4060,
											"end": 4107,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3943,
											"end": 4114,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3943,
											"end": 4114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4120,
											"end": 4486,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 4120,
											"end": 4486,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4262,
											"end": 4265,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4283,
											"end": 4350,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 4347,
											"end": 4349,
											"name": "PUSH",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 4342,
											"end": 4345,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4283,
											"end": 4350,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 4283,
											"end": 4350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4283,
											"end": 4350,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 4283,
											"end": 4350,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4350,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4350,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4359,
											"end": 4452,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 4448,
											"end": 4451,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4359,
											"end": 4452,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 4359,
											"end": 4452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4359,
											"end": 4452,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 4359,
											"end": 4452,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4477,
											"end": 4479,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4472,
											"end": 4475,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4468,
											"end": 4480,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4461,
											"end": 4480,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4461,
											"end": 4480,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4120,
											"end": 4486,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4120,
											"end": 4486,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4120,
											"end": 4486,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4120,
											"end": 4486,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4911,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4492,
											"end": 4911,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4658,
											"end": 4662,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4696,
											"end": 4698,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4685,
											"end": 4694,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4681,
											"end": 4699,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4673,
											"end": 4699,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4673,
											"end": 4699,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4745,
											"end": 4754,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4739,
											"end": 4743,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4735,
											"end": 4755,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4731,
											"end": 4732,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4720,
											"end": 4729,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4716,
											"end": 4733,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4709,
											"end": 4756,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4773,
											"end": 4904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 4899,
											"end": 4903,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4773,
											"end": 4904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 4773,
											"end": 4904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4773,
											"end": 4904,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 4773,
											"end": 4904,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4765,
											"end": 4904,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4765,
											"end": 4904,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4911,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4911,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4911,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4917,
											"end": 5091,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 4917,
											"end": 5091,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5057,
											"end": 5083,
											"name": "PUSH",
											"source": 6,
											"value": "616D6F756E74206D757374206772656574207468616E20300000000000000000"
										},
										{
											"begin": 5053,
											"end": 5054,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5045,
											"end": 5051,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5041,
											"end": 5055,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5034,
											"end": 5084,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4917,
											"end": 5091,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4917,
											"end": 5091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5463,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 5097,
											"end": 5463,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5239,
											"end": 5242,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5260,
											"end": 5327,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 5324,
											"end": 5326,
											"name": "PUSH",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 5319,
											"end": 5322,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5260,
											"end": 5327,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 5260,
											"end": 5327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5260,
											"end": 5327,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 5260,
											"end": 5327,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5253,
											"end": 5327,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5253,
											"end": 5327,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5336,
											"end": 5429,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 5425,
											"end": 5428,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5336,
											"end": 5429,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 5336,
											"end": 5429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5336,
											"end": 5429,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 5336,
											"end": 5429,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5454,
											"end": 5456,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5449,
											"end": 5452,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5445,
											"end": 5457,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5438,
											"end": 5457,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5438,
											"end": 5457,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5463,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5463,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5463,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5469,
											"end": 5888,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 5469,
											"end": 5888,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5635,
											"end": 5639,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5673,
											"end": 5675,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5662,
											"end": 5671,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5658,
											"end": 5676,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5650,
											"end": 5676,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5650,
											"end": 5676,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5722,
											"end": 5731,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5716,
											"end": 5720,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5732,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5708,
											"end": 5709,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5697,
											"end": 5706,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5693,
											"end": 5710,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5686,
											"end": 5733,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5750,
											"end": 5881,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 5876,
											"end": 5880,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5750,
											"end": 5881,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 5750,
											"end": 5881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5750,
											"end": 5881,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 5750,
											"end": 5881,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5742,
											"end": 5881,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5742,
											"end": 5881,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5469,
											"end": 5888,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5469,
											"end": 5888,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5469,
											"end": 5888,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5469,
											"end": 5888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5894,
											"end": 6062,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 5894,
											"end": 6062,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6054,
											"name": "PUSH",
											"source": 6,
											"value": "66726F6D2061646472657373206572726F720000000000000000000000000000"
										},
										{
											"begin": 6030,
											"end": 6031,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6022,
											"end": 6028,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6018,
											"end": 6032,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6011,
											"end": 6055,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5894,
											"end": 6062,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5894,
											"end": 6062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6068,
											"end": 6434,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 6068,
											"end": 6434,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6210,
											"end": 6213,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6231,
											"end": 6298,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 6295,
											"end": 6297,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 6290,
											"end": 6293,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6231,
											"end": 6298,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 6231,
											"end": 6298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6231,
											"end": 6298,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 6231,
											"end": 6298,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6224,
											"end": 6298,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6224,
											"end": 6298,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6307,
											"end": 6400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 6396,
											"end": 6399,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6307,
											"end": 6400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 6307,
											"end": 6400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6307,
											"end": 6400,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 6307,
											"end": 6400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6425,
											"end": 6427,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6420,
											"end": 6423,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6416,
											"end": 6428,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6409,
											"end": 6428,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6409,
											"end": 6428,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6068,
											"end": 6434,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6068,
											"end": 6434,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6068,
											"end": 6434,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6068,
											"end": 6434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6440,
											"end": 6859,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 6440,
											"end": 6859,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6606,
											"end": 6610,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6644,
											"end": 6646,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6633,
											"end": 6642,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6629,
											"end": 6647,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6621,
											"end": 6647,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6621,
											"end": 6647,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6693,
											"end": 6702,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 6691,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6683,
											"end": 6703,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6679,
											"end": 6680,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6668,
											"end": 6677,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6681,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6657,
											"end": 6704,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6721,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 6847,
											"end": 6851,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6721,
											"end": 6852,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 6721,
											"end": 6852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6721,
											"end": 6852,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 6721,
											"end": 6852,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6713,
											"end": 6852,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6713,
											"end": 6852,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6440,
											"end": 6859,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6440,
											"end": 6859,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6440,
											"end": 6859,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6440,
											"end": 6859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6865,
											"end": 7031,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 6865,
											"end": 7031,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7005,
											"end": 7023,
											"name": "PUSH",
											"source": 6,
											"value": "746F2061646472657373206572726F7200000000000000000000000000000000"
										},
										{
											"begin": 7001,
											"end": 7002,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6993,
											"end": 6999,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6989,
											"end": 7003,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6982,
											"end": 7024,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6865,
											"end": 7031,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6865,
											"end": 7031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7037,
											"end": 7403,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 7037,
											"end": 7403,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7179,
											"end": 7182,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7200,
											"end": 7267,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 7264,
											"end": 7266,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 7259,
											"end": 7262,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7200,
											"end": 7267,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 7200,
											"end": 7267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7200,
											"end": 7267,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 7200,
											"end": 7267,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7193,
											"end": 7267,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7193,
											"end": 7267,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7276,
											"end": 7369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 7365,
											"end": 7368,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7276,
											"end": 7369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 7276,
											"end": 7369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7276,
											"end": 7369,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 7276,
											"end": 7369,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7394,
											"end": 7396,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7389,
											"end": 7392,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7385,
											"end": 7397,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7378,
											"end": 7397,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7378,
											"end": 7397,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7037,
											"end": 7403,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7037,
											"end": 7403,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7037,
											"end": 7403,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7037,
											"end": 7403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7409,
											"end": 7828,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 7409,
											"end": 7828,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7575,
											"end": 7579,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7613,
											"end": 7615,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7602,
											"end": 7611,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7598,
											"end": 7616,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7590,
											"end": 7616,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7590,
											"end": 7616,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7662,
											"end": 7671,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7656,
											"end": 7660,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7652,
											"end": 7672,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7648,
											"end": 7649,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7637,
											"end": 7646,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7633,
											"end": 7650,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7626,
											"end": 7673,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7690,
											"end": 7821,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 7816,
											"end": 7820,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7690,
											"end": 7821,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 7690,
											"end": 7821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7690,
											"end": 7821,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 7690,
											"end": 7821,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7682,
											"end": 7821,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7682,
											"end": 7821,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7409,
											"end": 7828,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7409,
											"end": 7828,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7409,
											"end": 7828,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7409,
											"end": 7828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7834,
											"end": 8002,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 7834,
											"end": 8002,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7974,
											"end": 7994,
											"name": "PUSH",
											"source": 6,
											"value": "616C6C6F77616E63652065786365656465640000000000000000000000000000"
										},
										{
											"begin": 7970,
											"end": 7971,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7962,
											"end": 7968,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7958,
											"end": 7972,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7951,
											"end": 7995,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7834,
											"end": 8002,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7834,
											"end": 8002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8008,
											"end": 8374,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 8008,
											"end": 8374,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8150,
											"end": 8153,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8171,
											"end": 8238,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 8235,
											"end": 8237,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 8230,
											"end": 8233,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8171,
											"end": 8238,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 8171,
											"end": 8238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8171,
											"end": 8238,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 8171,
											"end": 8238,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8164,
											"end": 8238,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8164,
											"end": 8238,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8247,
											"end": 8340,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 8336,
											"end": 8339,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8247,
											"end": 8340,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 8247,
											"end": 8340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8247,
											"end": 8340,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 8247,
											"end": 8340,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8365,
											"end": 8367,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8360,
											"end": 8363,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8356,
											"end": 8368,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8368,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8368,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8008,
											"end": 8374,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8008,
											"end": 8374,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8008,
											"end": 8374,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8008,
											"end": 8374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8380,
											"end": 8799,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 8380,
											"end": 8799,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8546,
											"end": 8550,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8584,
											"end": 8586,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8573,
											"end": 8582,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8569,
											"end": 8587,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8561,
											"end": 8587,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8561,
											"end": 8587,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8633,
											"end": 8642,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8627,
											"end": 8631,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8623,
											"end": 8643,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8619,
											"end": 8620,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8608,
											"end": 8617,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8604,
											"end": 8621,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8597,
											"end": 8644,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8661,
											"end": 8792,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 8787,
											"end": 8791,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8661,
											"end": 8792,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 8661,
											"end": 8792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8661,
											"end": 8792,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 8661,
											"end": 8792,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8653,
											"end": 8792,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8653,
											"end": 8792,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8380,
											"end": 8799,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8380,
											"end": 8799,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8380,
											"end": 8799,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8380,
											"end": 8799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8805,
											"end": 8979,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 8805,
											"end": 8979,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8971,
											"name": "PUSH",
											"source": 6,
											"value": "6F776E65722062616C616E6365206E6F7420656E6F7567680000000000000000"
										},
										{
											"begin": 8941,
											"end": 8942,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8933,
											"end": 8939,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8929,
											"end": 8943,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8922,
											"end": 8972,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8805,
											"end": 8979,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8805,
											"end": 8979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8985,
											"end": 9351,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 8985,
											"end": 9351,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9127,
											"end": 9130,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9148,
											"end": 9215,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 9212,
											"end": 9214,
											"name": "PUSH",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 9207,
											"end": 9210,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9148,
											"end": 9215,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 9148,
											"end": 9215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9148,
											"end": 9215,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 9148,
											"end": 9215,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9141,
											"end": 9215,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9141,
											"end": 9215,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9224,
											"end": 9317,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 9313,
											"end": 9316,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9224,
											"end": 9317,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 9224,
											"end": 9317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9224,
											"end": 9317,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 9224,
											"end": 9317,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9342,
											"end": 9344,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9337,
											"end": 9340,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9333,
											"end": 9345,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9326,
											"end": 9345,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9326,
											"end": 9345,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8985,
											"end": 9351,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8985,
											"end": 9351,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8985,
											"end": 9351,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8985,
											"end": 9351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9357,
											"end": 9776,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 9357,
											"end": 9776,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9523,
											"end": 9527,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9561,
											"end": 9563,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9550,
											"end": 9559,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9546,
											"end": 9564,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9538,
											"end": 9564,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9538,
											"end": 9564,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9610,
											"end": 9619,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9604,
											"end": 9608,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9600,
											"end": 9620,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9596,
											"end": 9597,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9585,
											"end": 9594,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9581,
											"end": 9598,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9574,
											"end": 9621,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9638,
											"end": 9769,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 9764,
											"end": 9768,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9638,
											"end": 9769,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 9638,
											"end": 9769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9638,
											"end": 9769,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 9638,
											"end": 9769,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9630,
											"end": 9769,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9630,
											"end": 9769,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9357,
											"end": 9776,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9357,
											"end": 9776,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9357,
											"end": 9776,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9357,
											"end": 9776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9782,
											"end": 9962,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 9782,
											"end": 9962,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9830,
											"end": 9907,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9827,
											"end": 9828,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9820,
											"end": 9908,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9927,
											"end": 9931,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 9924,
											"end": 9925,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9917,
											"end": 9932,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9951,
											"end": 9955,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 9948,
											"end": 9949,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9941,
											"end": 9956,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9968,
											"end": 10162,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 9968,
											"end": 10162,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10008,
											"end": 10012,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10028,
											"end": 10048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 10046,
											"end": 10047,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10028,
											"end": 10048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 10028,
											"end": 10048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10028,
											"end": 10048,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 10028,
											"end": 10048,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10023,
											"end": 10048,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10023,
											"end": 10048,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10062,
											"end": 10082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 10080,
											"end": 10081,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10062,
											"end": 10082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 10062,
											"end": 10082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10062,
											"end": 10082,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 10062,
											"end": 10082,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10057,
											"end": 10082,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10057,
											"end": 10082,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10106,
											"end": 10107,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10103,
											"end": 10104,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10099,
											"end": 10108,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10091,
											"end": 10108,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10091,
											"end": 10108,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10130,
											"end": 10131,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10124,
											"end": 10128,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10121,
											"end": 10132,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 10118,
											"end": 10155,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10118,
											"end": 10155,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 10118,
											"end": 10155,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10135,
											"end": 10153,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 10135,
											"end": 10153,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 10135,
											"end": 10153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10135,
											"end": 10153,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 10135,
											"end": 10153,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10118,
											"end": 10155,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 10118,
											"end": 10155,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9968,
											"end": 10162,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9968,
											"end": 10162,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9968,
											"end": 10162,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9968,
											"end": 10162,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9968,
											"end": 10162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10168,
											"end": 10359,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 10168,
											"end": 10359,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10208,
											"end": 10211,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10227,
											"end": 10247,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 10245,
											"end": 10246,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10227,
											"end": 10247,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 10227,
											"end": 10247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10227,
											"end": 10247,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 10227,
											"end": 10247,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10222,
											"end": 10247,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10222,
											"end": 10247,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10261,
											"end": 10281,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 10279,
											"end": 10280,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10261,
											"end": 10281,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 10261,
											"end": 10281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10261,
											"end": 10281,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 10261,
											"end": 10281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10256,
											"end": 10281,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10256,
											"end": 10281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10304,
											"end": 10305,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10301,
											"end": 10302,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10297,
											"end": 10306,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10290,
											"end": 10306,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10290,
											"end": 10306,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10325,
											"end": 10328,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10322,
											"end": 10323,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10319,
											"end": 10329,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 10316,
											"end": 10352,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10316,
											"end": 10352,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 10316,
											"end": 10352,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10332,
											"end": 10350,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 10332,
											"end": 10350,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 10332,
											"end": 10350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10332,
											"end": 10350,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 10332,
											"end": 10350,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10316,
											"end": 10352,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 10316,
											"end": 10352,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10168,
											"end": 10359,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10168,
											"end": 10359,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10168,
											"end": 10359,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10168,
											"end": 10359,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10168,
											"end": 10359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10365,
											"end": 10585,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 10365,
											"end": 10585,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10505,
											"end": 10539,
											"name": "PUSH",
											"source": 6,
											"value": "6F6E6C79206F776E65722063616E2063616C6C20746869732066756E6374696F"
										},
										{
											"begin": 10501,
											"end": 10502,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10493,
											"end": 10499,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10489,
											"end": 10503,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10482,
											"end": 10540,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10574,
											"end": 10577,
											"name": "PUSH",
											"source": 6,
											"value": "6E00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10569,
											"end": 10571,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10561,
											"end": 10567,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10557,
											"end": 10572,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10550,
											"end": 10578,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10365,
											"end": 10585,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10365,
											"end": 10585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10591,
											"end": 10957,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 10591,
											"end": 10957,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10733,
											"end": 10736,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10754,
											"end": 10821,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 10818,
											"end": 10820,
											"name": "PUSH",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 10813,
											"end": 10816,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10754,
											"end": 10821,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 10754,
											"end": 10821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10754,
											"end": 10821,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 10754,
											"end": 10821,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10747,
											"end": 10821,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10747,
											"end": 10821,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10830,
											"end": 10923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 10919,
											"end": 10922,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10830,
											"end": 10923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 10830,
											"end": 10923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10830,
											"end": 10923,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 10830,
											"end": 10923,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10948,
											"end": 10950,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10943,
											"end": 10946,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10939,
											"end": 10951,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10932,
											"end": 10951,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10932,
											"end": 10951,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10591,
											"end": 10957,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10591,
											"end": 10957,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10591,
											"end": 10957,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10591,
											"end": 10957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10963,
											"end": 11382,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 10963,
											"end": 11382,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11129,
											"end": 11133,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11167,
											"end": 11169,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11156,
											"end": 11165,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11152,
											"end": 11170,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11144,
											"end": 11170,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11144,
											"end": 11170,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11216,
											"end": 11225,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11210,
											"end": 11214,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11206,
											"end": 11226,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11202,
											"end": 11203,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11191,
											"end": 11200,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11187,
											"end": 11204,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11180,
											"end": 11227,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11244,
											"end": 11375,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 11370,
											"end": 11374,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11244,
											"end": 11375,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 11244,
											"end": 11375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11244,
											"end": 11375,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 11244,
											"end": 11375,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11236,
											"end": 11375,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11236,
											"end": 11375,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10963,
											"end": 11382,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10963,
											"end": 11382,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10963,
											"end": 11382,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10963,
											"end": 11382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11388,
											"end": 11559,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 11388,
											"end": 11559,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11528,
											"end": 11551,
											"name": "PUSH",
											"source": 6,
											"value": "726563656976652061646472657373206572726F720000000000000000000000"
										},
										{
											"begin": 11524,
											"end": 11525,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11516,
											"end": 11522,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11512,
											"end": 11526,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11505,
											"end": 11552,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11388,
											"end": 11559,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11388,
											"end": 11559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11565,
											"end": 11931,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 11565,
											"end": 11931,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11707,
											"end": 11710,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11728,
											"end": 11795,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 11792,
											"end": 11794,
											"name": "PUSH",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 11787,
											"end": 11790,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11728,
											"end": 11795,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 11728,
											"end": 11795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11728,
											"end": 11795,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 11728,
											"end": 11795,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11721,
											"end": 11795,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11721,
											"end": 11795,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11804,
											"end": 11897,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 11893,
											"end": 11896,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11804,
											"end": 11897,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 11804,
											"end": 11897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11804,
											"end": 11897,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 11804,
											"end": 11897,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11922,
											"end": 11924,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11917,
											"end": 11920,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11913,
											"end": 11925,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11906,
											"end": 11925,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11906,
											"end": 11925,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11565,
											"end": 11931,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11565,
											"end": 11931,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11565,
											"end": 11931,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11565,
											"end": 11931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11937,
											"end": 12356,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 11937,
											"end": 12356,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12103,
											"end": 12107,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12141,
											"end": 12143,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12130,
											"end": 12139,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12126,
											"end": 12144,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12118,
											"end": 12144,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12118,
											"end": 12144,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12190,
											"end": 12199,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12184,
											"end": 12188,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12180,
											"end": 12200,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12176,
											"end": 12177,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12165,
											"end": 12174,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12161,
											"end": 12178,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12154,
											"end": 12201,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12218,
											"end": 12349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 12344,
											"end": 12348,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12218,
											"end": 12349,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 12218,
											"end": 12349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12218,
											"end": 12349,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 12218,
											"end": 12349,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12210,
											"end": 12349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12210,
											"end": 12349,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11937,
											"end": 12356,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11937,
											"end": 12356,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11937,
											"end": 12356,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11937,
											"end": 12356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12362,
											"end": 12541,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 12362,
											"end": 12541,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12502,
											"end": 12533,
											"name": "PUSH",
											"source": 6,
											"value": "616D6F756E74206D7573742062652067726561746572207468616E2030000000"
										},
										{
											"begin": 12498,
											"end": 12499,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12490,
											"end": 12496,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12486,
											"end": 12500,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12479,
											"end": 12534,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12362,
											"end": 12541,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12362,
											"end": 12541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12547,
											"end": 12913,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 12547,
											"end": 12913,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12689,
											"end": 12692,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12710,
											"end": 12777,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 12774,
											"end": 12776,
											"name": "PUSH",
											"source": 6,
											"value": "1D"
										},
										{
											"begin": 12769,
											"end": 12772,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12710,
											"end": 12777,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 12710,
											"end": 12777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12710,
											"end": 12777,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 12710,
											"end": 12777,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12703,
											"end": 12777,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12703,
											"end": 12777,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12786,
											"end": 12879,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 12875,
											"end": 12878,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12786,
											"end": 12879,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 12786,
											"end": 12879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12786,
											"end": 12879,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 12786,
											"end": 12879,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12904,
											"end": 12906,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12899,
											"end": 12902,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12895,
											"end": 12907,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12888,
											"end": 12907,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12888,
											"end": 12907,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12547,
											"end": 12913,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12547,
											"end": 12913,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12547,
											"end": 12913,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12547,
											"end": 12913,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12919,
											"end": 13338,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 12919,
											"end": 13338,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13085,
											"end": 13089,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13123,
											"end": 13125,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13112,
											"end": 13121,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13108,
											"end": 13126,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13100,
											"end": 13126,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13100,
											"end": 13126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13172,
											"end": 13181,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13166,
											"end": 13170,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13162,
											"end": 13182,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 13158,
											"end": 13159,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13147,
											"end": 13156,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13143,
											"end": 13160,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13136,
											"end": 13183,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13200,
											"end": 13331,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 13326,
											"end": 13330,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13200,
											"end": 13331,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 13200,
											"end": 13331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13200,
											"end": 13331,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 13200,
											"end": 13331,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13192,
											"end": 13331,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13192,
											"end": 13331,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12919,
											"end": 13338,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12919,
											"end": 13338,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12919,
											"end": 13338,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12919,
											"end": 13338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"task2/question1.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"mint(address,uint256)": "40c10f19",
							"owner()": "8da5cb5b",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"ApprovalLog\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferLog\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"task2/question1.sol\":\"MyERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"task2/question1.sol\":{\"keccak256\":\"0x4bd717264ea9c9bb0962dc5ea71f408c57c5810c0f06e75bcc853844122c4d74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6d3cbaf0f04e5eea9532916be1749011cdceba54e8c37a845079def7376afa0\",\"dweb:/ipfs/QmaNmQur6wtRjk9szyMnq7Q5CnWLDvegDPNobBFygSB9FE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 790,
								"contract": "task2/question1.sol:MyERC20",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 792,
								"contract": "task2/question1.sol:MyERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 794,
								"contract": "task2/question1.sol:MyERC20",
								"label": "owner",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 796,
								"contract": "task2/question1.sol:MyERC20",
								"label": "totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 829,
								"contract": "task2/question1.sol:MyERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 835,
								"contract": "task2/question1.sol:MyERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "654:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "670:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "687:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:0"
									},
									"src": "623:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "891:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:0"
									},
									"src": "866:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1104:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:0"
									},
									"src": "1077:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1511:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1528:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1547:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:0"
									},
									"src": "1478:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1775:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:0"
									},
									"src": "1748:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2025:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:0"
									},
									"src": "1999:43:0"
								}
							],
							"scope": 137,
							"src": "280:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2469:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:0"
									},
									"src": "2444:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2656:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:0"
									},
									"src": "2627:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3000:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3016:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3033:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:0"
									},
									"src": "2973:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:0"
									},
									"src": "3211:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3451:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:0"
									},
									"src": "3423:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3760:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3778:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:0"
									},
									"src": "3727:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4008:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:0"
									},
									"src": "3980:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4262:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:0"
									},
									"src": "4234:46:0"
								}
							],
							"scope": 137,
							"src": "2190:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4860:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4876:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4893:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4909:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:0"
									},
									"src": "4827:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5116:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:0"
									},
									"src": "5089:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5331:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:0"
									},
									"src": "5302:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5651:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5669:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:0"
									},
									"src": "5616:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5898:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:0"
									},
									"src": "5869:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6153:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:0"
									},
									"src": "6124:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6494:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6513:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:0"
									},
									"src": "6462:73:0"
								}
							],
							"scope": 137,
							"src": "4430:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1133:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1133:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1142:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1150:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1166:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1124:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1185:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1201:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1245:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1261:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1288:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1335:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1370:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1396:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1638:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1648:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1656:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1671:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1681:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1594:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1615:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:1"
									},
									"scope": 651,
									"src": "1582:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1820:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "1837:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "1830:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1805:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:1"
									},
									"scope": 651,
									"src": "1760:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2024:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2041:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2034:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2009:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:1"
									},
									"scope": 651,
									"src": "1962:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "2744:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "2754:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "2737:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:1"
									},
									"scope": 651,
									"src": "2688:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "2864:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "2881:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "2874:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "2776:22:1",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2812:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2823:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2855:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2855:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2854:9:1"
									},
									"scope": 651,
									"src": "2803:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3007:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3024:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3034:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3024:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3017:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "2906:22:1",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2942:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2960:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "2952:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2952:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2951:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "2998:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2998:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:9:1"
									},
									"scope": 651,
									"src": "2933:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3319:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3337:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3329:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3329:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3345:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3345:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3329:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3377:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3384:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3388:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3367:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3367:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3367:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3411:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3404:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3055:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3253:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3270:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3262:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3282:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3274:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3274:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3261:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3313:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3313:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3312:6:1"
									},
									"scope": 651,
									"src": "3244:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3544:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3561:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3573:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3561:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3580:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3561:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3554:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3428:22:1",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3464:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3482:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3474:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3497:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3489:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3473:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3535:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3535:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3534:9:1"
									},
									"scope": 651,
									"src": "3455:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "3981:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3999:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "3991:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3991:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4007:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4007:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3991:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4038:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4045:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4054:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4029:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4029:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4029:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4077:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4070:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3601:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3911:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3927:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "3919:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3919:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3944:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "3936:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3918:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "3975:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3975:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3974:6:1"
									},
									"scope": 651,
									"src": "3902:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "4773:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4791:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "4783:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4783:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4801:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4801:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4783:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4839:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "4845:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4854:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "4823:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "4823:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4880:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "4886:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4890:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "4870:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4870:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "4870:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4913:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "4906:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4094:581:1",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4689:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4710:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4702:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4702:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4724:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4716:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4716:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4736:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4728:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4728:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4701:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4767:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4767:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4766:6:1"
									},
									"scope": 651,
									"src": "4680:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5366:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5380:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5396:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5388:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5388:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5388:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5380:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5376:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5400:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5448:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5440:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5440:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5440:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5421:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5421:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5414:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5475:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5489:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5481:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5481:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5481:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5475:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5471:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5493:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5543:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5535:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5535:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5535:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5514:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5514:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5507:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5574:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5580:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5584:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5566:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5566:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5566:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "4930:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5306:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5324:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5316:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5316:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5338:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5330:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5330:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5350:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5342:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5342:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5315:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5366:0:1"
									},
									"scope": 651,
									"src": "5297:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "5987:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6001:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6017:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6009:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6009:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6009:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6001:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6175:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6197:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6189:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6189:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6211:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6221:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6211:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6189:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6244:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6258:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6244:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6240:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6265:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6315:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6321:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6334:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6290:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6290:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6283:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6368:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6475:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6485:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6475:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6493:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6507:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6493:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6475:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6475:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "5997:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6021:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6137:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6153:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6137:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6137:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6551:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6565:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6557:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6557:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6557:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6551:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "6766:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "6780:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6925:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "6935:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6925:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "6942:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6925:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "6925:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6547:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6569:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6583:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "6714:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "6730:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6714:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "6714:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "6996:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7002:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7006:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "6987:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6987:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "6982:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5603:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5921:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5937:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "5929:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5929:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5951:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "5943:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5943:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5963:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "5955:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5955:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5928:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5987:0:1"
									},
									"scope": 651,
									"src": "5912:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7418:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7432:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7451:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7443:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7443:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7443:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7432:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7428:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7455:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7505:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7497:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7497:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7497:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7476:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7476:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7469:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7544:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7536:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7536:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7536:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7548:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7557:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7528:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7528:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7528:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7025:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7371:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7385:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7377:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7377:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7402:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7394:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7394:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7376:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7418:0:1"
									},
									"scope": 651,
									"src": "7362:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "7944:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "7958:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7977:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7969:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7969:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7969:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7958:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "7954:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "7981:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8029:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8021:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8021:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8021:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8002:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8002:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "7995:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8060:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8077:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8069:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8069:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8069:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8081:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8052:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8052:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8052:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7576:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7897:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7903:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7928:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7920:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7920:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7902:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7944:0:1"
									},
									"scope": 651,
									"src": "7888:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "8704:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "8723:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "8730:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "8739:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8746:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "8714:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8714:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "8714:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8100:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8639:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8656:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8648:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8648:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8671:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8663:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8688:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8680:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8680:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8647:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8704:0:1"
									},
									"scope": 651,
									"src": "8630:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "9703:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "9717:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9734:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9726:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9726:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9726:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9717:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "9713:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "9738:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9788:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9780:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9780:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9780:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "9759:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9759:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "9752:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "9815:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9834:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9826:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9826:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9826:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9815:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "9811:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "9838:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9887:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9879:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9879:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9879:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "9859:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9859:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "9852:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "9910:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "9922:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9910:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "9929:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9910:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "9940:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9910:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "9910:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "9959:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "9955:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "9970:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "9998:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10005:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10014:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "9989:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9989:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "9984:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "8764:836:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9614:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9631:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9623:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9623:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9646:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9638:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9638:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9663:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9655:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9655:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9675:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9670:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9670:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9622:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9703:0:1"
									},
									"scope": 651,
									"src": "9605:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10408:387:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10426:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10418:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10418:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10455:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10462:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10445:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10445:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10418:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10484:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10508:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10508:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10503:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10503:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10517:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10503:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10484:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10480:309:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10522:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10540:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10559:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10540:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10536:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10566:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10618:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10627:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10645:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10591:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10591:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10584:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "10679:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "10716:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "10723:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10732:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10751:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10732:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10758:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "10707:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10707:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "10707:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10043:271:1",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10328:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10352:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10344:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10344:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10367:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10359:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10359:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10384:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10376:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10376:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10343:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10408:0:1"
									},
									"scope": 651,
									"src": "10319:476:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1106:9691:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:10693:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "215:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "397:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "406:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "428:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "448:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:2"
									},
									"src": "391:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "628:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "637:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "660:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "685:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:2"
									},
									"src": "622:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "822:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:2"
									},
									"scope": 729,
									"src": "776:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "932:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "972:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:2"
									},
									"scope": 729,
									"src": "913:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1223:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1235:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1268:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:2"
									},
									"scope": 729,
									"src": "1205:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1568:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1583:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1623:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:2"
									},
									"scope": 729,
									"src": "1549:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2327:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2344:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2377:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:2"
									},
									"scope": 729,
									"src": "2310:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2713:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2727:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2739:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2772:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:2"
									},
									"scope": 729,
									"src": "2691:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "205:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2675:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"306:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "306:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:3",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "417:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:3"
									},
									"scope": 755,
									"src": "378:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "540:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:3"
									},
									"scope": 755,
									"src": "499:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "674:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:3"
									},
									"scope": 755,
									"src": "631:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "278:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:559:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"task2/question1.sol": {
				"ast": {
					"absolutePath": "task2/question1.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						],
						"MyERC20": [
							1118
						]
					},
					"id": 1119,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 788,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1119,
							"sourceUnit": 652,
							"src": "57:55:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MyERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1118,
							"linearizedBaseContracts": [
								1118
							],
							"name": "MyERC20",
							"nameLocation": "519:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 790,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "550:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 1118,
									"src": "535:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 789,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "535:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 792,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "576:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1118,
									"src": "561:22:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 791,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "561:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 794,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "628:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 1118,
									"src": "613:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 793,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "613:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 796,
									"mutability": "mutable",
									"name": "totalSupply",
									"nameLocation": "655:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 1118,
									"src": "639:27:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 795,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "639:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 812,
										"nodeType": "Block",
										"src": "687:83:5",
										"statements": [
											{
												"expression": {
													"id": 801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 799,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 790,
														"src": "697:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "4d79546f6b656e",
														"id": 800,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "703:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_245c734e6d4ec044daf7beffa09d54d4bafba490113c199734d790b04a7390e5",
															"typeString": "literal_string \"MyToken\""
														},
														"value": "MyToken"
													},
													"src": "697:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 802,
												"nodeType": "ExpressionStatement",
												"src": "697:15:5"
											},
											{
												"expression": {
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 803,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "722:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "4d544b",
														"id": 804,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "730:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_793539e36336d70961c91bdb898dff4b065dbb5ef5ac709025f5b68be91dd01e",
															"typeString": "literal_string \"MTK\""
														},
														"value": "MTK"
													},
													"src": "722:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 806,
												"nodeType": "ExpressionStatement",
												"src": "722:13:5"
											},
											{
												"expression": {
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 807,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "745:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 808,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "753:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 809,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "757:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "753:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "745:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 811,
												"nodeType": "ExpressionStatement",
												"src": "745:18:5"
											}
										]
									},
									"id": 813,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "684:2:5"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "687:0:5"
									},
									"scope": 1118,
									"src": "673:97:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 824,
										"nodeType": "Block",
										"src": "797:92:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 819,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 816,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "815:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 817,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "819:6:5",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "815:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 818,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 794,
																"src": "829:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "815:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6e",
															"id": 820,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "835:35:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_163a280d316d32dc884d8457bf7b961a97d91b637bc569fca476bdb5ef7f2712",
																"typeString": "literal_string \"only owner can call this function\""
															},
															"value": "only owner can call this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_163a280d316d32dc884d8457bf7b961a97d91b637bc569fca476bdb5ef7f2712",
																"typeString": "literal_string \"only owner can call this function\""
															}
														],
														"id": 815,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "807:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "807:64:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 822,
												"nodeType": "ExpressionStatement",
												"src": "807:64:5"
											},
											{
												"id": 823,
												"nodeType": "PlaceholderStatement",
												"src": "881:1:5"
											}
										]
									},
									"id": 825,
									"name": "onlyOwner",
									"nameLocation": "785:9:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:5"
									},
									"src": "776:113:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 829,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "959:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 1118,
									"src": "915:53:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 828,
										"keyName": "account",
										"keyNameLocation": "931:7:5",
										"keyType": {
											"id": 826,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "923:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "915:35:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 827,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "942:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 835,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1066:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 1118,
									"src": "994:83:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 834,
										"keyName": "account",
										"keyNameLocation": "1010:7:5",
										"keyType": {
											"id": 830,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1002:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "994:63:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 833,
											"keyName": "spender",
											"keyNameLocation": "1037:7:5",
											"keyType": {
												"id": 831,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1029:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1021:35:5",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 832,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1048:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "21425341546d2023146851fb583db9b7c6be5fed0d287293c85a8ede5193c6ea",
									"id": 843,
									"name": "TransferLog",
									"nameLocation": "1103:11:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1131:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "1115:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1115:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1153:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "1137:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 838,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1137:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 841,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1165:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "1157:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1114:57:5"
									},
									"src": "1097:75:5"
								},
								{
									"anonymous": false,
									"eventSelector": "08dffe93edf65c77e66e298bcf7ba5ba81a3f70c8641f098066df4e8ed21e684",
									"id": 851,
									"name": "ApprovalLog",
									"nameLocation": "1183:11:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 845,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1211:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "1195:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 844,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 847,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1234:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "1218:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1218:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1251:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "1243:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:63:5"
									},
									"src": "1177:81:5"
								},
								{
									"body": {
										"id": 887,
										"nodeType": "Block",
										"src": "1341:191:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 866,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 861,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 853,
																"src": "1359:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1372:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1364:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 862,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1364:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 865,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1364:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1359:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "726563656976652061646472657373206572726f72",
															"id": 867,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1375:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b198f41273ae43355193a8300bb5ca36ff0987665ede60997dd7b775f59a923a",
																"typeString": "literal_string \"receive address error\""
															},
															"value": "receive address error"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b198f41273ae43355193a8300bb5ca36ff0987665ede60997dd7b775f59a923a",
																"typeString": "literal_string \"receive address error\""
															}
														],
														"id": 860,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1351:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1351:48:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 869,
												"nodeType": "ExpressionStatement",
												"src": "1351:48:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 871,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 855,
																"src": "1417:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 872,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1426:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1417:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 874,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1429:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_71ce96f7bba828c9ec9c6caf13e767d67b4d6da65d7a1997a314facbf8a8502f",
																"typeString": "literal_string \"amount must be greater than 0\""
															},
															"value": "amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_71ce96f7bba828c9ec9c6caf13e767d67b4d6da65d7a1997a314facbf8a8502f",
																"typeString": "literal_string \"amount must be greater than 0\""
															}
														],
														"id": 870,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1409:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1409:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 876,
												"nodeType": "ExpressionStatement",
												"src": "1409:52:5"
											},
											{
												"expression": {
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 877,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "1471:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 879,
														"indexExpression": {
															"id": 878,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "1481:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1471:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 880,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 855,
														"src": "1488:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1471:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 882,
												"nodeType": "ExpressionStatement",
												"src": "1471:23:5"
											},
											{
												"expression": {
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 883,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "1504:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 884,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 855,
														"src": "1519:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1504:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 886,
												"nodeType": "ExpressionStatement",
												"src": "1504:21:5"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 888,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 858,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 857,
												"name": "onlyOwner",
												"nameLocations": [
													"1331:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 825,
												"src": "1331:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1331:9:5"
										}
									],
									"name": "mint",
									"nameLocation": "1291:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1304:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "1296:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 852,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1296:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1316:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "1308:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1308:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1295:28:5"
									},
									"returnParameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1341:0:5"
									},
									"scope": 1118,
									"src": "1282:250:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 909,
										"nodeType": "Block",
										"src": "1631:105:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 901,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 896,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 890,
																"src": "1649:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 899,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1667:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 898,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1659:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 897,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1659:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 900,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1659:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1649:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "726563656976652061646472657373206572726f72",
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1670:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b198f41273ae43355193a8300bb5ca36ff0987665ede60997dd7b775f59a923a",
																"typeString": "literal_string \"receive address error\""
															},
															"value": "receive address error"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b198f41273ae43355193a8300bb5ca36ff0987665ede60997dd7b775f59a923a",
																"typeString": "literal_string \"receive address error\""
															}
														],
														"id": 895,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1641:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1641:53:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 904,
												"nodeType": "ExpressionStatement",
												"src": "1641:53:5"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 905,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 829,
														"src": "1711:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 907,
													"indexExpression": {
														"id": 906,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 890,
														"src": "1721:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1711:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 894,
												"id": 908,
												"nodeType": "Return",
												"src": "1704:25:5"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 910,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1574:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1592:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "1584:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 889,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1584:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1583:17:5"
									},
									"returnParameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "1622:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:5"
									},
									"scope": 1118,
									"src": "1565:171:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 975,
										"nodeType": "Block",
										"src": "1830:540:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 920,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 912,
																"src": "1872:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 923,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1885:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1877:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 921,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1877:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 924,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1877:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1872:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "726563656976652061646472657373206572726f72",
															"id": 926,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1888:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b198f41273ae43355193a8300bb5ca36ff0987665ede60997dd7b775f59a923a",
																"typeString": "literal_string \"receive address error\""
															},
															"value": "receive address error"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b198f41273ae43355193a8300bb5ca36ff0987665ede60997dd7b775f59a923a",
																"typeString": "literal_string \"receive address error\""
															}
														],
														"id": 919,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1864:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1864:48:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 928,
												"nodeType": "ExpressionStatement",
												"src": "1864:48:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 930,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 914,
																"src": "1930:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 931,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1939:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1930:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616d6f756e74206d757374206772656574207468616e2030",
															"id": 933,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1941:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ff820c3afa365cbbe14eae723bf721d1ee023b7ff02e0161c41be7e8280872af",
																"typeString": "literal_string \"amount must greet than 0\""
															},
															"value": "amount must greet than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ff820c3afa365cbbe14eae723bf721d1ee023b7ff02e0161c41be7e8280872af",
																"typeString": "literal_string \"amount must greet than 0\""
															}
														],
														"id": 929,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1922:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1922:46:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 935,
												"nodeType": "ExpressionStatement",
												"src": "1922:46:5"
											},
											{
												"assignments": [
													937
												],
												"declarations": [
													{
														"constant": false,
														"id": 937,
														"mutability": "mutable",
														"name": "ownerValue",
														"nameLocation": "2011:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 975,
														"src": "2003:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 936,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2003:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 942,
												"initialValue": {
													"baseExpression": {
														"id": 938,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 829,
														"src": "2024:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 941,
													"indexExpression": {
														"expression": {
															"id": 939,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2034:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 940,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2038:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2034:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2024:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2003:42:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 943,
														"name": "ownerValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 937,
														"src": "2059:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 944,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 914,
														"src": "2072:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2059:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 958,
													"nodeType": "Block",
													"src": "2145:78:5",
													"statements": [
														{
															"expression": {
																"id": 956,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 951,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 829,
																		"src": "2181:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 954,
																	"indexExpression": {
																		"expression": {
																			"id": 952,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2191:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 953,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2195:6:5",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2191:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2181:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 955,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 914,
																	"src": "2206:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2181:31:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 957,
															"nodeType": "ExpressionStatement",
															"src": "2181:31:5"
														}
													]
												},
												"id": 959,
												"nodeType": "IfStatement",
												"src": "2055:168:5",
												"trueBody": {
													"id": 950,
													"nodeType": "Block",
													"src": "2080:59:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "6f776e65722062616c616e6365206e6f7420656e6f756768",
																		"id": 947,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2101:26:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_28b2d23fc7282e29dd6685636c48a0f08799ad87e79d7f33b89f14976d6c6b0b",
																			"typeString": "literal_string \"owner balance not enough\""
																		},
																		"value": "owner balance not enough"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_28b2d23fc7282e29dd6685636c48a0f08799ad87e79d7f33b89f14976d6c6b0b",
																			"typeString": "literal_string \"owner balance not enough\""
																		}
																	],
																	"id": 946,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "2094:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 948,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2094:34:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 949,
															"nodeType": "ExpressionStatement",
															"src": "2094:34:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 960,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "2250:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 962,
														"indexExpression": {
															"id": 961,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "2260:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2250:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 963,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 914,
														"src": "2267:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2250:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 965,
												"nodeType": "ExpressionStatement",
												"src": "2250:23:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 967,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2319:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2323:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2319:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 969,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "2331:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 970,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "2335:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 966,
														"name": "TransferLog",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 843,
														"src": "2307:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2307:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 972,
												"nodeType": "EmitStatement",
												"src": "2302:40:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2359:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 918,
												"id": 974,
												"nodeType": "Return",
												"src": "2352:11:5"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 976,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1771:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1788:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "1780:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1780:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1800:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "1792:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1792:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1779:28:5"
									},
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "1824:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 916,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1824:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:6:5"
									},
									"scope": 1118,
									"src": "1762:608:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1020,
										"nodeType": "Block",
										"src": "2469:279:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 986,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 978,
																"src": "2511:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 989,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2529:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 988,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2521:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 987,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2521:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 990,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2521:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2511:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7370656e6465722061646472657373206572726f72",
															"id": 992,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2532:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d34e25fd6fb189c977249e70288827f495cca9d3e0ff8af33f277d1e83d12455",
																"typeString": "literal_string \"spender address error\""
															},
															"value": "spender address error"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d34e25fd6fb189c977249e70288827f495cca9d3e0ff8af33f277d1e83d12455",
																"typeString": "literal_string \"spender address error\""
															}
														],
														"id": 985,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2503:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2503:53:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 994,
												"nodeType": "ExpressionStatement",
												"src": "2503:53:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 998,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 996,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 980,
																"src": "2574:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 997,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2583:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2574:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616d6f756e74206d757374206772656574207468616e2030",
															"id": 999,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2585:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ff820c3afa365cbbe14eae723bf721d1ee023b7ff02e0161c41be7e8280872af",
																"typeString": "literal_string \"amount must greet than 0\""
															},
															"value": "amount must greet than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ff820c3afa365cbbe14eae723bf721d1ee023b7ff02e0161c41be7e8280872af",
																"typeString": "literal_string \"amount must greet than 0\""
															}
														],
														"id": 995,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2566:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2566:46:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1001,
												"nodeType": "ExpressionStatement",
												"src": "2566:46:5"
											},
											{
												"expression": {
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1002,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 835,
																"src": "2623:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1006,
															"indexExpression": {
																"expression": {
																	"id": 1003,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2635:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2639:6:5",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2635:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2623:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1007,
														"indexExpression": {
															"id": 1005,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 978,
															"src": "2647:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2623:32:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1008,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "2658:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2623:41:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1010,
												"nodeType": "ExpressionStatement",
												"src": "2623:41:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1012,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2692:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1013,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2696:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2692:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1014,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 978,
															"src": "2704:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1015,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "2713:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1011,
														"name": "ApprovalLog",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 851,
														"src": "2680:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2680:40:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1017,
												"nodeType": "EmitStatement",
												"src": "2675:45:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2737:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 984,
												"id": 1019,
												"nodeType": "Return",
												"src": "2730:11:5"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 1021,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2405:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2421:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "2413:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2413:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2438:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "2430:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2430:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2412:33:5"
									},
									"returnParameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "2463:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 982,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2463:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2462:6:5"
									},
									"scope": 1118,
									"src": "2396:352:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1116,
										"nodeType": "Block",
										"src": "2860:732:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1033,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1023,
																"src": "2902:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1036,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2917:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1035,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2909:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1034,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2909:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1037,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2909:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2902:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "66726f6d2061646472657373206572726f72",
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2920:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d750f031ea2bf7a16d7a01258babc175afde3c4015f1663fe4d238ebe276e772",
																"typeString": "literal_string \"from address error\""
															},
															"value": "from address error"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d750f031ea2bf7a16d7a01258babc175afde3c4015f1663fe4d238ebe276e772",
																"typeString": "literal_string \"from address error\""
															}
														],
														"id": 1032,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2894:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2894:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1041,
												"nodeType": "ExpressionStatement",
												"src": "2894:47:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1043,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1025,
																"src": "2959:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1046,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2972:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1045,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2964:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1044,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2964:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1047,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2964:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2959:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "746f2061646472657373206572726f72",
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2975:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24018abc2e20db31c7585e8930c7a4fe2930c0a68008931d64fd3f2cdfd1e43d",
																"typeString": "literal_string \"to address error\""
															},
															"value": "to address error"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24018abc2e20db31c7585e8930c7a4fe2930c0a68008931d64fd3f2cdfd1e43d",
																"typeString": "literal_string \"to address error\""
															}
														],
														"id": 1042,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2951:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2951:43:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1051,
												"nodeType": "ExpressionStatement",
												"src": "2951:43:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1053,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1027,
																"src": "3012:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1054,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3021:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3012:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616d6f756e74206d757374206772656574207468616e2030",
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3023:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ff820c3afa365cbbe14eae723bf721d1ee023b7ff02e0161c41be7e8280872af",
																"typeString": "literal_string \"amount must greet than 0\""
															},
															"value": "amount must greet than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ff820c3afa365cbbe14eae723bf721d1ee023b7ff02e0161c41be7e8280872af",
																"typeString": "literal_string \"amount must greet than 0\""
															}
														],
														"id": 1052,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3004:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3004:46:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1058,
												"nodeType": "ExpressionStatement",
												"src": "3004:46:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1060,
																		"name": "_allowances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 835,
																		"src": "3098:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 1062,
																	"indexExpression": {
																		"id": 1061,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1023,
																		"src": "3110:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3098:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1065,
																"indexExpression": {
																	"expression": {
																		"id": 1063,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3116:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1064,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3120:6:5",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3116:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3098:29:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1066,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1027,
																"src": "3131:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3098:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616c6c6f77616e6365206578636565646564",
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3138:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e266b1228aea8c08bdeb8988184a32966f3ca9a4b22161e6f51997748691201f",
																"typeString": "literal_string \"allowance exceeded\""
															},
															"value": "allowance exceeded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e266b1228aea8c08bdeb8988184a32966f3ca9a4b22161e6f51997748691201f",
																"typeString": "literal_string \"allowance exceeded\""
															}
														],
														"id": 1059,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3090:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3090:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1070,
												"nodeType": "ExpressionStatement",
												"src": "3090:69:5"
											},
											{
												"assignments": [
													1072
												],
												"declarations": [
													{
														"constant": false,
														"id": 1072,
														"mutability": "mutable",
														"name": "ownerValue",
														"nameLocation": "3202:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1116,
														"src": "3194:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1071,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3194:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1076,
												"initialValue": {
													"baseExpression": {
														"id": 1073,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 829,
														"src": "3215:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1075,
													"indexExpression": {
														"id": 1074,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1023,
														"src": "3225:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3215:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3194:36:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1077,
														"name": "ownerValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "3244:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1078,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1027,
														"src": "3257:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3244:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1091,
													"nodeType": "Block",
													"src": "3330:72:5",
													"statements": [
														{
															"expression": {
																"id": 1089,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1085,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 829,
																		"src": "3366:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1087,
																	"indexExpression": {
																		"id": 1086,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1023,
																		"src": "3376:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3366:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 1088,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1027,
																	"src": "3385:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3366:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1090,
															"nodeType": "ExpressionStatement",
															"src": "3366:25:5"
														}
													]
												},
												"id": 1092,
												"nodeType": "IfStatement",
												"src": "3240:162:5",
												"trueBody": {
													"id": 1084,
													"nodeType": "Block",
													"src": "3265:59:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "6f776e65722062616c616e6365206e6f7420656e6f756768",
																		"id": 1081,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3286:26:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_28b2d23fc7282e29dd6685636c48a0f08799ad87e79d7f33b89f14976d6c6b0b",
																			"typeString": "literal_string \"owner balance not enough\""
																		},
																		"value": "owner balance not enough"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_28b2d23fc7282e29dd6685636c48a0f08799ad87e79d7f33b89f14976d6c6b0b",
																			"typeString": "literal_string \"owner balance not enough\""
																		}
																	],
																	"id": 1080,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "3279:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1082,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3279:34:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1083,
															"nodeType": "ExpressionStatement",
															"src": "3279:34:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1093,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "3429:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1095,
														"indexExpression": {
															"id": 1094,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1025,
															"src": "3439:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3429:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1096,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1027,
														"src": "3446:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3429:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1098,
												"nodeType": "ExpressionStatement",
												"src": "3429:23:5"
											},
											{
												"expression": {
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1099,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 835,
																"src": "3462:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1103,
															"indexExpression": {
																"id": 1100,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1023,
																"src": "3474:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3462:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1104,
														"indexExpression": {
															"expression": {
																"id": 1101,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3480:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3484:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3480:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3462:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1105,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1027,
														"src": "3495:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3462:39:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1107,
												"nodeType": "ExpressionStatement",
												"src": "3462:39:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1109,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "3547:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1110,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1025,
															"src": "3553:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1111,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1027,
															"src": "3557:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1108,
														"name": "TransferLog",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 843,
														"src": "3535:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3535:29:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1113,
												"nodeType": "EmitStatement",
												"src": "3530:34:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1114,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3581:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1031,
												"id": 1115,
												"nodeType": "Return",
												"src": "3574:11:5"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 1117,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2783:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2804:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1117,
												"src": "2796:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1022,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2796:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2818:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1117,
												"src": "2810:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1024,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2810:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2830:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1117,
												"src": "2822:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2822:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2795:42:5"
									},
									"returnParameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1117,
												"src": "2854:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1029,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2854:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2853:6:5"
									},
									"scope": 1118,
									"src": "2774:818:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1119,
							"src": "510:3084:5",
							"usedErrors": [],
							"usedEvents": [
								843,
								851
							]
						}
					],
					"src": "32:3563:5"
				},
				"id": 5
			}
		}
	}
}